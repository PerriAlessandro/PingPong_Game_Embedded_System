
Node_2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000e70  00080000  00080000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000434  20000000  00080e70  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000098  20000434  000812a4  00020434  2**2
                  ALLOC
  3 .stack        00000404  200004cc  0008133c  00020434  2**0
                  ALLOC
  4 .heap         00000200  200008d0  00081740  00020434  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020434  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  0002045d  2**0
                  CONTENTS, READONLY
  7 .debug_info   00005594  00000000  00000000  000204b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000f45  00000000  00000000  00025a4a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000f82  00000000  00000000  0002698f  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 000001e0  00000000  00000000  00027911  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001a0  00000000  00000000  00027af1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00011f46  00000000  00000000  00027c91  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00003465  00000000  00000000  00039bd7  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0005523e  00000000  00000000  0003d03c  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000005e4  00000000  00000000  0009227c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <exception_table>:
   80000:	d0 08 00 20 3d 04 08 00 39 04 08 00 39 04 08 00     ... =...9...9...
   80010:	39 04 08 00 39 04 08 00 39 04 08 00 00 00 00 00     9...9...9.......
	...
   8002c:	39 04 08 00 39 04 08 00 00 00 00 00 39 04 08 00     9...9.......9...
   8003c:	39 04 08 00 39 04 08 00 39 04 08 00 39 04 08 00     9...9...9...9...
   8004c:	39 04 08 00 39 04 08 00 39 04 08 00 39 04 08 00     9...9...9...9...
   8005c:	39 04 08 00 25 0b 08 00 39 04 08 00 00 00 00 00     9...%...9.......
   8006c:	39 04 08 00 39 04 08 00 81 06 08 00 39 04 08 00     9...9.......9...
	...
   80084:	39 04 08 00 39 04 08 00 39 04 08 00 39 04 08 00     9...9...9...9...
   80094:	39 04 08 00 39 04 08 00 39 04 08 00 39 04 08 00     9...9...9...9...
   800a4:	00 00 00 00 39 04 08 00 39 04 08 00 39 04 08 00     ....9...9...9...
   800b4:	39 04 08 00 39 04 08 00 39 04 08 00 39 04 08 00     9...9...9...9...
   800c4:	39 04 08 00 39 04 08 00 39 04 08 00 39 04 08 00     9...9...9...9...
   800d4:	39 04 08 00 39 04 08 00 39 04 08 00 39 04 08 00     9...9...9...9...
   800e4:	39 04 08 00 39 04 08 00 6d 03 08 00 39 04 08 00     9...9...m...9...

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	20000434 	.word	0x20000434
   80110:	00000000 	.word	0x00000000
   80114:	00080e70 	.word	0x00080e70

00080118 <frame_dummy>:
   80118:	4b0c      	ldr	r3, [pc, #48]	; (8014c <frame_dummy+0x34>)
   8011a:	b143      	cbz	r3, 8012e <frame_dummy+0x16>
   8011c:	480c      	ldr	r0, [pc, #48]	; (80150 <frame_dummy+0x38>)
   8011e:	b510      	push	{r4, lr}
   80120:	490c      	ldr	r1, [pc, #48]	; (80154 <frame_dummy+0x3c>)
   80122:	f3af 8000 	nop.w
   80126:	480c      	ldr	r0, [pc, #48]	; (80158 <frame_dummy+0x40>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b923      	cbnz	r3, 80136 <frame_dummy+0x1e>
   8012c:	bd10      	pop	{r4, pc}
   8012e:	480a      	ldr	r0, [pc, #40]	; (80158 <frame_dummy+0x40>)
   80130:	6803      	ldr	r3, [r0, #0]
   80132:	b933      	cbnz	r3, 80142 <frame_dummy+0x2a>
   80134:	4770      	bx	lr
   80136:	4b09      	ldr	r3, [pc, #36]	; (8015c <frame_dummy+0x44>)
   80138:	2b00      	cmp	r3, #0
   8013a:	d0f7      	beq.n	8012c <frame_dummy+0x14>
   8013c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80140:	4718      	bx	r3
   80142:	4b06      	ldr	r3, [pc, #24]	; (8015c <frame_dummy+0x44>)
   80144:	2b00      	cmp	r3, #0
   80146:	d0f5      	beq.n	80134 <frame_dummy+0x1c>
   80148:	4718      	bx	r3
   8014a:	bf00      	nop
   8014c:	00000000 	.word	0x00000000
   80150:	00080e70 	.word	0x00080e70
   80154:	20000438 	.word	0x20000438
   80158:	00080e70 	.word	0x00080e70
   8015c:	00000000 	.word	0x00000000

00080160 <can_init>:
   80160:	b4f0      	push	{r4, r5, r6, r7}
   80162:	1857      	adds	r7, r2, r1
   80164:	2f08      	cmp	r7, #8
   80166:	bfd4      	ite	le
   80168:	2300      	movle	r3, #0
   8016a:	2301      	movgt	r3, #1
   8016c:	2908      	cmp	r1, #8
   8016e:	bf98      	it	ls
   80170:	2a08      	cmpls	r2, #8
   80172:	d85c      	bhi.n	8022e <can_init+0xce>
   80174:	460d      	mov	r5, r1
   80176:	2b00      	cmp	r3, #0
   80178:	d159      	bne.n	8022e <can_init+0xce>
   8017a:	4a2e      	ldr	r2, [pc, #184]	; (80234 <can_init+0xd4>)
   8017c:	6813      	ldr	r3, [r2, #0]
   8017e:	f023 0301 	bic.w	r3, r3, #1
   80182:	6013      	str	r3, [r2, #0]
   80184:	6913      	ldr	r3, [r2, #16]
   80186:	4b2c      	ldr	r3, [pc, #176]	; (80238 <can_init+0xd8>)
   80188:	f44f 7440 	mov.w	r4, #768	; 0x300
   8018c:	645c      	str	r4, [r3, #68]	; 0x44
   8018e:	6f1c      	ldr	r4, [r3, #112]	; 0x70
   80190:	f024 0403 	bic.w	r4, r4, #3
   80194:	671c      	str	r4, [r3, #112]	; 0x70
   80196:	2403      	movs	r4, #3
   80198:	605c      	str	r4, [r3, #4]
   8019a:	665c      	str	r4, [r3, #100]	; 0x64
   8019c:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
   801a0:	4c26      	ldr	r4, [pc, #152]	; (8023c <can_init+0xdc>)
   801a2:	f8c3 410c 	str.w	r4, [r3, #268]	; 0x10c
   801a6:	f8d3 4100 	ldr.w	r4, [r3, #256]	; 0x100
   801aa:	f444 6400 	orr.w	r4, r4, #2048	; 0x800
   801ae:	f8c3 4100 	str.w	r4, [r3, #256]	; 0x100
   801b2:	6150      	str	r0, [r2, #20]
   801b4:	2400      	movs	r4, #0
   801b6:	e019      	b.n	801ec <can_init+0x8c>
   801b8:	481e      	ldr	r0, [pc, #120]	; (80234 <can_init+0xd4>)
   801ba:	f101 0310 	add.w	r3, r1, #16
   801be:	015b      	lsls	r3, r3, #5
   801c0:	18c2      	adds	r2, r0, r3
   801c2:	2600      	movs	r6, #0
   801c4:	6056      	str	r6, [r2, #4]
   801c6:	eb00 1241 	add.w	r2, r0, r1, lsl #5
   801ca:	f04f 5600 	mov.w	r6, #536870912	; 0x20000000
   801ce:	f8c2 6208 	str.w	r6, [r2, #520]	; 0x208
   801d2:	f04f 7680 	mov.w	r6, #16777216	; 0x1000000
   801d6:	50c6      	str	r6, [r0, r3]
   801d8:	f8d2 321c 	ldr.w	r3, [r2, #540]	; 0x21c
   801dc:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
   801e0:	f8c2 321c 	str.w	r3, [r2, #540]	; 0x21c
   801e4:	2301      	movs	r3, #1
   801e6:	408b      	lsls	r3, r1
   801e8:	431c      	orrs	r4, r3
   801ea:	3101      	adds	r1, #1
   801ec:	42b9      	cmp	r1, r7
   801ee:	dde3      	ble.n	801b8 <can_init+0x58>
   801f0:	2300      	movs	r3, #0
   801f2:	e00d      	b.n	80210 <can_init+0xb0>
   801f4:	490f      	ldr	r1, [pc, #60]	; (80234 <can_init+0xd4>)
   801f6:	eb01 1243 	add.w	r2, r1, r3, lsl #5
   801fa:	f04f 5000 	mov.w	r0, #536870912	; 0x20000000
   801fe:	f8c2 0208 	str.w	r0, [r2, #520]	; 0x208
   80202:	f103 0210 	add.w	r2, r3, #16
   80206:	0152      	lsls	r2, r2, #5
   80208:	f04f 7040 	mov.w	r0, #50331648	; 0x3000000
   8020c:	5088      	str	r0, [r1, r2]
   8020e:	3301      	adds	r3, #1
   80210:	42ab      	cmp	r3, r5
   80212:	dbef      	blt.n	801f4 <can_init+0x94>
   80214:	4b07      	ldr	r3, [pc, #28]	; (80234 <can_init+0xd4>)
   80216:	605c      	str	r4, [r3, #4]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   80218:	f44f 6100 	mov.w	r1, #2048	; 0x800
   8021c:	4a08      	ldr	r2, [pc, #32]	; (80240 <can_init+0xe0>)
   8021e:	6051      	str	r1, [r2, #4]
   80220:	681a      	ldr	r2, [r3, #0]
   80222:	f042 0201 	orr.w	r2, r2, #1
   80226:	601a      	str	r2, [r3, #0]
   80228:	2000      	movs	r0, #0
   8022a:	bcf0      	pop	{r4, r5, r6, r7}
   8022c:	4770      	bx	lr
   8022e:	2001      	movs	r0, #1
   80230:	e7fb      	b.n	8022a <can_init+0xca>
   80232:	bf00      	nop
   80234:	400b4000 	.word	0x400b4000
   80238:	400e0e00 	.word	0x400e0e00
   8023c:	1000102b 	.word	0x1000102b
   80240:	e000e100 	.word	0xe000e100

00080244 <can_init_def_tx_rx_mb>:
   80244:	b508      	push	{r3, lr}
   80246:	2202      	movs	r2, #2
   80248:	2101      	movs	r1, #1
   8024a:	4b01      	ldr	r3, [pc, #4]	; (80250 <can_init_def_tx_rx_mb+0xc>)
   8024c:	4798      	blx	r3
   8024e:	bd08      	pop	{r3, pc}
   80250:	00080161 	.word	0x00080161

00080254 <can_send>:
   80254:	014b      	lsls	r3, r1, #5
   80256:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
   8025a:	f503 2330 	add.w	r3, r3, #720896	; 0xb0000
   8025e:	f8d3 3210 	ldr.w	r3, [r3, #528]	; 0x210
   80262:	f413 0f00 	tst.w	r3, #8388608	; 0x800000
   80266:	d036      	beq.n	802d6 <can_send+0x82>
   80268:	8803      	ldrh	r3, [r0, #0]
   8026a:	4a1c      	ldr	r2, [pc, #112]	; (802dc <can_send+0x88>)
   8026c:	ea02 4283 	and.w	r2, r2, r3, lsl #18
   80270:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
   80274:	014b      	lsls	r3, r1, #5
   80276:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
   8027a:	f503 2330 	add.w	r3, r3, #720896	; 0xb0000
   8027e:	f8c3 2208 	str.w	r2, [r3, #520]	; 0x208
   80282:	7883      	ldrb	r3, [r0, #2]
   80284:	2b07      	cmp	r3, #7
   80286:	d901      	bls.n	8028c <can_send+0x38>
   80288:	2307      	movs	r3, #7
   8028a:	7083      	strb	r3, [r0, #2]
   8028c:	7982      	ldrb	r2, [r0, #6]
   8028e:	7943      	ldrb	r3, [r0, #5]
   80290:	041b      	lsls	r3, r3, #16
   80292:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   80296:	7902      	ldrb	r2, [r0, #4]
   80298:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   8029c:	78c2      	ldrb	r2, [r0, #3]
   8029e:	4313      	orrs	r3, r2
   802a0:	0149      	lsls	r1, r1, #5
   802a2:	f101 2140 	add.w	r1, r1, #1073758208	; 0x40004000
   802a6:	f501 2130 	add.w	r1, r1, #720896	; 0xb0000
   802aa:	f8c1 3214 	str.w	r3, [r1, #532]	; 0x214
   802ae:	7a82      	ldrb	r2, [r0, #10]
   802b0:	7a43      	ldrb	r3, [r0, #9]
   802b2:	041b      	lsls	r3, r3, #16
   802b4:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   802b8:	7a02      	ldrb	r2, [r0, #8]
   802ba:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   802be:	79c2      	ldrb	r2, [r0, #7]
   802c0:	4313      	orrs	r3, r2
   802c2:	f8c1 3218 	str.w	r3, [r1, #536]	; 0x218
   802c6:	7883      	ldrb	r3, [r0, #2]
   802c8:	041b      	lsls	r3, r3, #16
   802ca:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
   802ce:	f8c1 321c 	str.w	r3, [r1, #540]	; 0x21c
   802d2:	2000      	movs	r0, #0
   802d4:	4770      	bx	lr
   802d6:	2001      	movs	r0, #1
   802d8:	4770      	bx	lr
   802da:	bf00      	nop
   802dc:	1ffc0000 	.word	0x1ffc0000

000802e0 <can_receive>:
   802e0:	014b      	lsls	r3, r1, #5
   802e2:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
   802e6:	f503 2330 	add.w	r3, r3, #720896	; 0xb0000
   802ea:	f8d3 3210 	ldr.w	r3, [r3, #528]	; 0x210
   802ee:	f413 0f00 	tst.w	r3, #8388608	; 0x800000
   802f2:	d033      	beq.n	8035c <can_receive+0x7c>
   802f4:	b470      	push	{r4, r5, r6}
   802f6:	014b      	lsls	r3, r1, #5
   802f8:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
   802fc:	f503 2330 	add.w	r3, r3, #720896	; 0xb0000
   80300:	f8d3 4214 	ldr.w	r4, [r3, #532]	; 0x214
   80304:	f8d3 2218 	ldr.w	r2, [r3, #536]	; 0x218
   80308:	f8d3 5208 	ldr.w	r5, [r3, #520]	; 0x208
   8030c:	f3c5 458a 	ubfx	r5, r5, #18, #11
   80310:	8005      	strh	r5, [r0, #0]
   80312:	f8d3 5210 	ldr.w	r5, [r3, #528]	; 0x210
   80316:	f3c5 4503 	ubfx	r5, r5, #16, #4
   8031a:	7085      	strb	r5, [r0, #2]
   8031c:	2300      	movs	r3, #0
   8031e:	e003      	b.n	80328 <can_receive+0x48>
   80320:	18c6      	adds	r6, r0, r3
   80322:	70f2      	strb	r2, [r6, #3]
   80324:	0a12      	lsrs	r2, r2, #8
   80326:	3301      	adds	r3, #1
   80328:	42ab      	cmp	r3, r5
   8032a:	da05      	bge.n	80338 <can_receive+0x58>
   8032c:	2b03      	cmp	r3, #3
   8032e:	dcf7      	bgt.n	80320 <can_receive+0x40>
   80330:	18c6      	adds	r6, r0, r3
   80332:	70f4      	strb	r4, [r6, #3]
   80334:	0a24      	lsrs	r4, r4, #8
   80336:	e7f6      	b.n	80326 <can_receive+0x46>
   80338:	4b09      	ldr	r3, [pc, #36]	; (80360 <can_receive+0x80>)
   8033a:	f101 0210 	add.w	r2, r1, #16
   8033e:	0152      	lsls	r2, r2, #5
   80340:	f04f 7080 	mov.w	r0, #16777216	; 0x1000000
   80344:	5098      	str	r0, [r3, r2]
   80346:	eb03 1141 	add.w	r1, r3, r1, lsl #5
   8034a:	f8d1 321c 	ldr.w	r3, [r1, #540]	; 0x21c
   8034e:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
   80352:	f8c1 321c 	str.w	r3, [r1, #540]	; 0x21c
   80356:	2000      	movs	r0, #0
   80358:	bc70      	pop	{r4, r5, r6}
   8035a:	4770      	bx	lr
   8035c:	2001      	movs	r0, #1
   8035e:	4770      	bx	lr
   80360:	400b4000 	.word	0x400b4000

00080364 <get_can_br>:
   80364:	4800      	ldr	r0, [pc, #0]	; (80368 <get_can_br+0x4>)
   80366:	4770      	bx	lr
   80368:	00290165 	.word	0x00290165

0008036c <CAN0_Handler>:
   8036c:	b570      	push	{r4, r5, r6, lr}
   8036e:	4825      	ldr	r0, [pc, #148]	; (80404 <CAN0_Handler+0x98>)
   80370:	4b25      	ldr	r3, [pc, #148]	; (80408 <CAN0_Handler+0x9c>)
   80372:	4798      	blx	r3
   80374:	4b25      	ldr	r3, [pc, #148]	; (8040c <CAN0_Handler+0xa0>)
   80376:	691d      	ldr	r5, [r3, #16]
   80378:	f015 0f06 	tst.w	r5, #6
   8037c:	d031      	beq.n	803e2 <CAN0_Handler+0x76>
   8037e:	f015 0f02 	tst.w	r5, #2
   80382:	d110      	bne.n	803a6 <CAN0_Handler+0x3a>
   80384:	f015 0f04 	tst.w	r5, #4
   80388:	d019      	beq.n	803be <CAN0_Handler+0x52>
   8038a:	2102      	movs	r1, #2
   8038c:	4820      	ldr	r0, [pc, #128]	; (80410 <CAN0_Handler+0xa4>)
   8038e:	4b21      	ldr	r3, [pc, #132]	; (80414 <CAN0_Handler+0xa8>)
   80390:	4798      	blx	r3
   80392:	4e1f      	ldr	r6, [pc, #124]	; (80410 <CAN0_Handler+0xa4>)
   80394:	8831      	ldrh	r1, [r6, #0]
   80396:	4820      	ldr	r0, [pc, #128]	; (80418 <CAN0_Handler+0xac>)
   80398:	4c1b      	ldr	r4, [pc, #108]	; (80408 <CAN0_Handler+0x9c>)
   8039a:	47a0      	blx	r4
   8039c:	78b1      	ldrb	r1, [r6, #2]
   8039e:	481f      	ldr	r0, [pc, #124]	; (8041c <CAN0_Handler+0xb0>)
   803a0:	47a0      	blx	r4
   803a2:	2400      	movs	r4, #0
   803a4:	e016      	b.n	803d4 <CAN0_Handler+0x68>
   803a6:	4c1a      	ldr	r4, [pc, #104]	; (80410 <CAN0_Handler+0xa4>)
   803a8:	2101      	movs	r1, #1
   803aa:	4620      	mov	r0, r4
   803ac:	4b19      	ldr	r3, [pc, #100]	; (80414 <CAN0_Handler+0xa8>)
   803ae:	4798      	blx	r3
   803b0:	8823      	ldrh	r3, [r4, #0]
   803b2:	2b01      	cmp	r3, #1
   803b4:	d1ed      	bne.n	80392 <CAN0_Handler+0x26>
   803b6:	4620      	mov	r0, r4
   803b8:	4b19      	ldr	r3, [pc, #100]	; (80420 <CAN0_Handler+0xb4>)
   803ba:	4798      	blx	r3
   803bc:	e7e9      	b.n	80392 <CAN0_Handler+0x26>
   803be:	4819      	ldr	r0, [pc, #100]	; (80424 <CAN0_Handler+0xb8>)
   803c0:	4b11      	ldr	r3, [pc, #68]	; (80408 <CAN0_Handler+0x9c>)
   803c2:	4798      	blx	r3
   803c4:	e7e5      	b.n	80392 <CAN0_Handler+0x26>
   803c6:	4b12      	ldr	r3, [pc, #72]	; (80410 <CAN0_Handler+0xa4>)
   803c8:	4423      	add	r3, r4
   803ca:	78d9      	ldrb	r1, [r3, #3]
   803cc:	4816      	ldr	r0, [pc, #88]	; (80428 <CAN0_Handler+0xbc>)
   803ce:	4b0e      	ldr	r3, [pc, #56]	; (80408 <CAN0_Handler+0x9c>)
   803d0:	4798      	blx	r3
   803d2:	3401      	adds	r4, #1
   803d4:	4b0e      	ldr	r3, [pc, #56]	; (80410 <CAN0_Handler+0xa4>)
   803d6:	789b      	ldrb	r3, [r3, #2]
   803d8:	429c      	cmp	r4, r3
   803da:	dbf4      	blt.n	803c6 <CAN0_Handler+0x5a>
   803dc:	4813      	ldr	r0, [pc, #76]	; (8042c <CAN0_Handler+0xc0>)
   803de:	4b0a      	ldr	r3, [pc, #40]	; (80408 <CAN0_Handler+0x9c>)
   803e0:	4798      	blx	r3
   803e2:	f015 0f01 	tst.w	r5, #1
   803e6:	d105      	bne.n	803f4 <CAN0_Handler+0x88>
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   803e8:	f44f 6200 	mov.w	r2, #2048	; 0x800
   803ec:	4b10      	ldr	r3, [pc, #64]	; (80430 <CAN0_Handler+0xc4>)
   803ee:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184
   803f2:	bd70      	pop	{r4, r5, r6, pc}
   803f4:	480f      	ldr	r0, [pc, #60]	; (80434 <CAN0_Handler+0xc8>)
   803f6:	4b04      	ldr	r3, [pc, #16]	; (80408 <CAN0_Handler+0x9c>)
   803f8:	4798      	blx	r3
   803fa:	2201      	movs	r2, #1
   803fc:	4b03      	ldr	r3, [pc, #12]	; (8040c <CAN0_Handler+0xa0>)
   803fe:	609a      	str	r2, [r3, #8]
   80400:	e7f2      	b.n	803e8 <CAN0_Handler+0x7c>
   80402:	bf00      	nop
   80404:	00080cfc 	.word	0x00080cfc
   80408:	00080a75 	.word	0x00080a75
   8040c:	400b4000 	.word	0x400b4000
   80410:	20000458 	.word	0x20000458
   80414:	000802e1 	.word	0x000802e1
   80418:	00080d3c 	.word	0x00080d3c
   8041c:	00080d50 	.word	0x00080d50
   80420:	000805d5 	.word	0x000805d5
   80424:	00080d10 	.word	0x00080d10
   80428:	00080d6c 	.word	0x00080d6c
   8042c:	00080d38 	.word	0x00080d38
   80430:	e000e100 	.word	0xe000e100
   80434:	00080d70 	.word	0x00080d70

00080438 <Dummy_Handler>:
   80438:	e7fe      	b.n	80438 <Dummy_Handler>
	...

0008043c <Reset_Handler>:
   8043c:	b508      	push	{r3, lr}
   8043e:	4b11      	ldr	r3, [pc, #68]	; (80484 <Reset_Handler+0x48>)
   80440:	4a11      	ldr	r2, [pc, #68]	; (80488 <Reset_Handler+0x4c>)
   80442:	429a      	cmp	r2, r3
   80444:	d009      	beq.n	8045a <Reset_Handler+0x1e>
   80446:	4b0f      	ldr	r3, [pc, #60]	; (80484 <Reset_Handler+0x48>)
   80448:	4a0f      	ldr	r2, [pc, #60]	; (80488 <Reset_Handler+0x4c>)
   8044a:	e003      	b.n	80454 <Reset_Handler+0x18>
   8044c:	6811      	ldr	r1, [r2, #0]
   8044e:	6019      	str	r1, [r3, #0]
   80450:	3304      	adds	r3, #4
   80452:	3204      	adds	r2, #4
   80454:	490d      	ldr	r1, [pc, #52]	; (8048c <Reset_Handler+0x50>)
   80456:	428b      	cmp	r3, r1
   80458:	d3f8      	bcc.n	8044c <Reset_Handler+0x10>
   8045a:	4b0d      	ldr	r3, [pc, #52]	; (80490 <Reset_Handler+0x54>)
   8045c:	e002      	b.n	80464 <Reset_Handler+0x28>
   8045e:	2200      	movs	r2, #0
   80460:	601a      	str	r2, [r3, #0]
   80462:	3304      	adds	r3, #4
   80464:	4a0b      	ldr	r2, [pc, #44]	; (80494 <Reset_Handler+0x58>)
   80466:	4293      	cmp	r3, r2
   80468:	d3f9      	bcc.n	8045e <Reset_Handler+0x22>
   8046a:	4b0b      	ldr	r3, [pc, #44]	; (80498 <Reset_Handler+0x5c>)
   8046c:	f023 4360 	bic.w	r3, r3, #3758096384	; 0xe0000000
   80470:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
   80474:	4a09      	ldr	r2, [pc, #36]	; (8049c <Reset_Handler+0x60>)
   80476:	6093      	str	r3, [r2, #8]
   80478:	4b09      	ldr	r3, [pc, #36]	; (804a0 <Reset_Handler+0x64>)
   8047a:	4798      	blx	r3
   8047c:	4b09      	ldr	r3, [pc, #36]	; (804a4 <Reset_Handler+0x68>)
   8047e:	4798      	blx	r3
   80480:	e7fe      	b.n	80480 <Reset_Handler+0x44>
   80482:	bf00      	nop
   80484:	20000000 	.word	0x20000000
   80488:	00080e70 	.word	0x00080e70
   8048c:	20000434 	.word	0x20000434
   80490:	20000434 	.word	0x20000434
   80494:	200004cc 	.word	0x200004cc
   80498:	00080000 	.word	0x00080000
   8049c:	e000ed00 	.word	0xe000ed00
   804a0:	00080b8d 	.word	0x00080b8d
   804a4:	00080735 	.word	0x00080735

000804a8 <SystemInit>:
   804a8:	f44f 6380 	mov.w	r3, #1024	; 0x400
   804ac:	4a20      	ldr	r2, [pc, #128]	; (80530 <SystemInit+0x88>)
   804ae:	6013      	str	r3, [r2, #0]
   804b0:	f502 7200 	add.w	r2, r2, #512	; 0x200
   804b4:	6013      	str	r3, [r2, #0]
   804b6:	4b1f      	ldr	r3, [pc, #124]	; (80534 <SystemInit+0x8c>)
   804b8:	6a1b      	ldr	r3, [r3, #32]
   804ba:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   804be:	d107      	bne.n	804d0 <SystemInit+0x28>
   804c0:	4a1d      	ldr	r2, [pc, #116]	; (80538 <SystemInit+0x90>)
   804c2:	4b1c      	ldr	r3, [pc, #112]	; (80534 <SystemInit+0x8c>)
   804c4:	621a      	str	r2, [r3, #32]
   804c6:	4b1b      	ldr	r3, [pc, #108]	; (80534 <SystemInit+0x8c>)
   804c8:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   804ca:	f013 0f01 	tst.w	r3, #1
   804ce:	d0fa      	beq.n	804c6 <SystemInit+0x1e>
   804d0:	4a1a      	ldr	r2, [pc, #104]	; (8053c <SystemInit+0x94>)
   804d2:	4b18      	ldr	r3, [pc, #96]	; (80534 <SystemInit+0x8c>)
   804d4:	621a      	str	r2, [r3, #32]
   804d6:	4b17      	ldr	r3, [pc, #92]	; (80534 <SystemInit+0x8c>)
   804d8:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   804da:	f413 3f80 	tst.w	r3, #65536	; 0x10000
   804de:	d0fa      	beq.n	804d6 <SystemInit+0x2e>
   804e0:	4a14      	ldr	r2, [pc, #80]	; (80534 <SystemInit+0x8c>)
   804e2:	6b13      	ldr	r3, [r2, #48]	; 0x30
   804e4:	f023 0303 	bic.w	r3, r3, #3
   804e8:	f043 0301 	orr.w	r3, r3, #1
   804ec:	6313      	str	r3, [r2, #48]	; 0x30
   804ee:	4b11      	ldr	r3, [pc, #68]	; (80534 <SystemInit+0x8c>)
   804f0:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   804f2:	f013 0f08 	tst.w	r3, #8
   804f6:	d0fa      	beq.n	804ee <SystemInit+0x46>
   804f8:	4a11      	ldr	r2, [pc, #68]	; (80540 <SystemInit+0x98>)
   804fa:	4b0e      	ldr	r3, [pc, #56]	; (80534 <SystemInit+0x8c>)
   804fc:	629a      	str	r2, [r3, #40]	; 0x28
   804fe:	4b0d      	ldr	r3, [pc, #52]	; (80534 <SystemInit+0x8c>)
   80500:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   80502:	f013 0f02 	tst.w	r3, #2
   80506:	d0fa      	beq.n	804fe <SystemInit+0x56>
   80508:	2211      	movs	r2, #17
   8050a:	4b0a      	ldr	r3, [pc, #40]	; (80534 <SystemInit+0x8c>)
   8050c:	631a      	str	r2, [r3, #48]	; 0x30
   8050e:	4b09      	ldr	r3, [pc, #36]	; (80534 <SystemInit+0x8c>)
   80510:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   80512:	f013 0f08 	tst.w	r3, #8
   80516:	d0fa      	beq.n	8050e <SystemInit+0x66>
   80518:	2212      	movs	r2, #18
   8051a:	4b06      	ldr	r3, [pc, #24]	; (80534 <SystemInit+0x8c>)
   8051c:	631a      	str	r2, [r3, #48]	; 0x30
   8051e:	4b05      	ldr	r3, [pc, #20]	; (80534 <SystemInit+0x8c>)
   80520:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   80522:	f013 0f08 	tst.w	r3, #8
   80526:	d0fa      	beq.n	8051e <SystemInit+0x76>
   80528:	4a06      	ldr	r2, [pc, #24]	; (80544 <SystemInit+0x9c>)
   8052a:	4b07      	ldr	r3, [pc, #28]	; (80548 <SystemInit+0xa0>)
   8052c:	601a      	str	r2, [r3, #0]
   8052e:	4770      	bx	lr
   80530:	400e0a00 	.word	0x400e0a00
   80534:	400e0600 	.word	0x400e0600
   80538:	00370809 	.word	0x00370809
   8053c:	01370809 	.word	0x01370809
   80540:	200d3f01 	.word	0x200d3f01
   80544:	0501bd00 	.word	0x0501bd00
   80548:	20000000 	.word	0x20000000

0008054c <map>:

uint16_t map(uint16_t x, uint16_t in_min, uint16_t in_max, uint16_t out_min, uint16_t out_max) {
   8054c:	b410      	push	{r4}
  return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
   8054e:	1a44      	subs	r4, r0, r1
   80550:	f8bd 0004 	ldrh.w	r0, [sp, #4]
   80554:	1ac0      	subs	r0, r0, r3
   80556:	fb00 f004 	mul.w	r0, r0, r4
   8055a:	1a52      	subs	r2, r2, r1
   8055c:	fb90 f0f2 	sdiv	r0, r0, r2
   80560:	4418      	add	r0, r3
}
   80562:	b280      	uxth	r0, r0
   80564:	bc10      	pop	{r4}
   80566:	4770      	bx	lr

00080568 <pwn_init>:

void pwn_init(){
	REG_PWM_CLK=PWM_CLK_PREA(0)|PWM_CLK_DIVA(200); //84 Mhz /200
   80568:	22c8      	movs	r2, #200	; 0xc8
   8056a:	4b16      	ldr	r3, [pc, #88]	; (805c4 <pwn_init+0x5c>)
   8056c:	601a      	str	r2, [r3, #0]
	PMC->PMC_PCER1|=(1<<4); // Peripheral Clock Enable 1
   8056e:	4a16      	ldr	r2, [pc, #88]	; (805c8 <pwn_init+0x60>)
   80570:	f8d2 3100 	ldr.w	r3, [r2, #256]	; 0x100
   80574:	f043 0310 	orr.w	r3, r3, #16
   80578:	f8c2 3100 	str.w	r3, [r2, #256]	; 0x100
	REG_PIOC_PDR|=PIO_PDR_P19;
   8057c:	f602 4204 	addw	r2, r2, #3076	; 0xc04
   80580:	6813      	ldr	r3, [r2, #0]
   80582:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
   80586:	6013      	str	r3, [r2, #0]
	REG_PIOC_ABSR|=	PIO_ABSR_P19; //AB Select Register
   80588:	326c      	adds	r2, #108	; 0x6c
   8058a:	6813      	ldr	r3, [r2, #0]
   8058c:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
   80590:	6013      	str	r3, [r2, #0]
	REG_PWM_WPCR=PWM_WPCR_WPKEY(0x50574D); //PWM Write Protect Control Register
   80592:	4b0e      	ldr	r3, [pc, #56]	; (805cc <pwn_init+0x64>)
   80594:	4a0e      	ldr	r2, [pc, #56]	; (805d0 <pwn_init+0x68>)
   80596:	601a      	str	r2, [r3, #0]
	REG_PWM_WPCR|=PWM_WPCR_WPRG0|PWM_WPCR_WPRG2|PWM_WPCR_WPRG3| PWM_WPCR_WPCMD(0);
   80598:	681a      	ldr	r2, [r3, #0]
   8059a:	f042 0234 	orr.w	r2, r2, #52	; 0x34
   8059e:	601a      	str	r2, [r3, #0]
	REG_PWM_CMR5 = PWM_CMR_CPRE_CLKA; //PWM Channel Mode Register
   805a0:	220b      	movs	r2, #11
   805a2:	f503 73de 	add.w	r3, r3, #444	; 0x1bc
   805a6:	601a      	str	r2, [r3, #0]
	REG_PWM_CPRD5=8400; //PWM Channel Period Register
   805a8:	f242 02d0 	movw	r2, #8400	; 0x20d0
   805ac:	330c      	adds	r3, #12
   805ae:	601a      	str	r2, [r3, #0]
	REG_PWM_ENA=PWM_ENA_CHID5; // PWM Enable Register
   805b0:	2220      	movs	r2, #32
   805b2:	f5a3 732a 	sub.w	r3, r3, #680	; 0x2a8
   805b6:	601a      	str	r2, [r3, #0]
	REG_PWM_CDTY5=8400-630; //PWM Channel Duty Cycle Register
   805b8:	f641 625a 	movw	r2, #7770	; 0x1e5a
   805bc:	f503 7328 	add.w	r3, r3, #672	; 0x2a0
   805c0:	601a      	str	r2, [r3, #0]
   805c2:	4770      	bx	lr
   805c4:	40094000 	.word	0x40094000
   805c8:	400e0600 	.word	0x400e0600
   805cc:	400940e4 	.word	0x400940e4
   805d0:	50574d00 	.word	0x50574d00

000805d4 <pwm_set_dutycycle>:
}

void pwm_set_dutycycle(CAN_MESSAGE * can_slider){
   805d4:	b510      	push	{r4, lr}
   805d6:	b082      	sub	sp, #8
	REG_PWM_CDTY5 = 8400 - map(can_slider->data[1], 0, 100, 882, 378); // 378 slowest
   805d8:	7900      	ldrb	r0, [r0, #4]
   805da:	f44f 73bd 	mov.w	r3, #378	; 0x17a
   805de:	9300      	str	r3, [sp, #0]
   805e0:	f240 3372 	movw	r3, #882	; 0x372
   805e4:	2264      	movs	r2, #100	; 0x64
   805e6:	2100      	movs	r1, #0
   805e8:	4c04      	ldr	r4, [pc, #16]	; (805fc <pwm_set_dutycycle+0x28>)
   805ea:	47a0      	blx	r4
   805ec:	f5c0 5003 	rsb	r0, r0, #8384	; 0x20c0
   805f0:	3010      	adds	r0, #16
   805f2:	4b03      	ldr	r3, [pc, #12]	; (80600 <pwm_set_dutycycle+0x2c>)
   805f4:	6018      	str	r0, [r3, #0]
   805f6:	b002      	add	sp, #8
   805f8:	bd10      	pop	{r4, pc}
   805fa:	bf00      	nop
   805fc:	0008054d 	.word	0x0008054d
   80600:	400942a4 	.word	0x400942a4

00080604 <motor_init>:

uint8_t game_over=0;
uint8_t start_game=1;

void motor_init(){
	REG_PIOD_PER= NOT_OE || NOT_RST || SEL || EN || DIR  ; //PIO Controller PIO Enable Register
   80604:	2301      	movs	r3, #1
   80606:	4a04      	ldr	r2, [pc, #16]	; (80618 <motor_init+0x14>)
   80608:	6013      	str	r3, [r2, #0]
	REG_PIOD_OER= NOT_OE || NOT_RST || SEL || EN || DIR  ; //PIO Controller PIO Output Enable Register
   8060a:	3210      	adds	r2, #16
   8060c:	6013      	str	r3, [r2, #0]
	
	REG_PIOD_SODR= NOT_RST || EN; //PIO Controller Set Output Data Register, not encoder reset (P1) ,encoder mj1 enable high(P10)
   8060e:	3220      	adds	r2, #32
   80610:	6013      	str	r3, [r2, #0]
	REG_PIOD_CODR = NOT_OE || SEL || DIR; //PIO Controller Clear Output Data Register,encoder output enable (P0), encoder select(P2) ,mj1 set dir(P10)
   80612:	3204      	adds	r2, #4
   80614:	6013      	str	r3, [r2, #0]
   80616:	4770      	bx	lr
   80618:	400e1400 	.word	0x400e1400

0008061c <servo_init>:
	REG_PIOD_CODR= NOT_RST;
}

void servo_init(){

	REG_PIOC_PER=PIO_PER_P16; ////PIO Controller PIO Enable Register
   8061c:	4a10      	ldr	r2, [pc, #64]	; (80660 <servo_init+0x44>)
   8061e:	f44f 3380 	mov.w	r3, #65536	; 0x10000
   80622:	6013      	str	r3, [r2, #0]
	PIOC->PIO_ODR=PIO_ODR_P16; //PIO Controller Output Disable Register
   80624:	6153      	str	r3, [r2, #20]
	PIOC->PIO_PUDR=PIO_PUDR_P16; //PIO Pull Up Disable Register
   80626:	6613      	str	r3, [r2, #96]	; 0x60
	PMC->PMC_PCER0|=(1<<ID_PIOC); // Peripheral Clock Enable 0
   80628:	490e      	ldr	r1, [pc, #56]	; (80664 <servo_init+0x48>)
   8062a:	690a      	ldr	r2, [r1, #16]
   8062c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   80630:	610a      	str	r2, [r1, #16]
	REG_PIOC_AIMER=PIO_AIMER_P16;
   80632:	4a0d      	ldr	r2, [pc, #52]	; (80668 <servo_init+0x4c>)
   80634:	6013      	str	r3, [r2, #0]
	REG_PIOC_IER|=PIO_IER_P16;
   80636:	f501 6144 	add.w	r1, r1, #3136	; 0xc40
   8063a:	680a      	ldr	r2, [r1, #0]
   8063c:	431a      	orrs	r2, r3
   8063e:	600a      	str	r2, [r1, #0]
	REG_PIOC_ESR=PIO_ESR_P16;
   80640:	4a0a      	ldr	r2, [pc, #40]	; (8066c <servo_init+0x50>)
   80642:	6013      	str	r3, [r2, #0]
	REG_PIOC_REHLSR=PIO_REHLSR_P16;
   80644:	3214      	adds	r2, #20
   80646:	6013      	str	r3, [r2, #0]
	REG_PIOC_SCDR=PIO_SCDR_DIV(100); //debouncing delay
   80648:	2164      	movs	r1, #100	; 0x64
   8064a:	3a48      	subs	r2, #72	; 0x48
   8064c:	6011      	str	r1, [r2, #0]
	REG_PIOC_IFER=PIO_IFER_P16;  //enable debouncing delta
   8064e:	3a6c      	subs	r2, #108	; 0x6c
   80650:	6013      	str	r3, [r2, #0]
	REG_PIOC_DIFSR=PIO_DIFSR_P16; //enable debouncing filter for one specific
   80652:	3264      	adds	r2, #100	; 0x64
   80654:	6013      	str	r3, [r2, #0]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   80656:	f44f 5200 	mov.w	r2, #8192	; 0x2000
   8065a:	4b05      	ldr	r3, [pc, #20]	; (80670 <servo_init+0x54>)
   8065c:	601a      	str	r2, [r3, #0]
   8065e:	4770      	bx	lr
   80660:	400e1200 	.word	0x400e1200
   80664:	400e0600 	.word	0x400e0600
   80668:	400e12b0 	.word	0x400e12b0
   8066c:	400e12c0 	.word	0x400e12c0
   80670:	e000e100 	.word	0xe000e100

00080674 <game_is_over>:
	
}

uint8_t game_is_over(){
	return game_over;
}
   80674:	4b01      	ldr	r3, [pc, #4]	; (8067c <game_is_over+0x8>)
   80676:	7818      	ldrb	r0, [r3, #0]
   80678:	4770      	bx	lr
   8067a:	bf00      	nop
   8067c:	20000450 	.word	0x20000450

00080680 <PIOC_Handler>:
	
}

 void PIOC_Handler(){
	 
	uint32_t status=REG_PIOC_ISR;
   80680:	4b07      	ldr	r3, [pc, #28]	; (806a0 <PIOC_Handler+0x20>)
   80682:	681b      	ldr	r3, [r3, #0]
	 if(status & PIO_ISR_P16){
   80684:	f413 3f80 	tst.w	r3, #65536	; 0x10000
   80688:	d005      	beq.n	80696 <PIOC_Handler+0x16>
			//printf("interrupt captured\n\r");
			if (!start_game){
   8068a:	4b06      	ldr	r3, [pc, #24]	; (806a4 <PIOC_Handler+0x24>)
   8068c:	781b      	ldrb	r3, [r3, #0]
   8068e:	b11b      	cbz	r3, 80698 <PIOC_Handler+0x18>
				game_over= 1;
			}
			else start_game=0;
   80690:	2200      	movs	r2, #0
   80692:	4b04      	ldr	r3, [pc, #16]	; (806a4 <PIOC_Handler+0x24>)
   80694:	701a      	strb	r2, [r3, #0]
   80696:	4770      	bx	lr
				game_over= 1;
   80698:	2201      	movs	r2, #1
   8069a:	4b03      	ldr	r3, [pc, #12]	; (806a8 <PIOC_Handler+0x28>)
   8069c:	701a      	strb	r2, [r3, #0]
   8069e:	4770      	bx	lr
   806a0:	400e124c 	.word	0x400e124c
   806a4:	20000004 	.word	0x20000004
   806a8:	20000450 	.word	0x20000450

000806ac <start_timer>:


//sets timer at 1 Hz (Slow Clock 32768kHz and prescaler period 32768), reset enabled
void start_timer(){
	REG_RTT_MR=0x48000; //RTTRST=1, RTPRES=0x8000
   806ac:	f44f 2290 	mov.w	r2, #294912	; 0x48000
   806b0:	4b01      	ldr	r3, [pc, #4]	; (806b8 <start_timer+0xc>)
   806b2:	601a      	str	r2, [r3, #0]
   806b4:	4770      	bx	lr
   806b6:	bf00      	nop
   806b8:	400e1a30 	.word	0x400e1a30

000806bc <reset_timer>:
void reset_timer(){
   806bc:	b508      	push	{r3, lr}
	game_over=0;
   806be:	2200      	movs	r2, #0
   806c0:	4b02      	ldr	r3, [pc, #8]	; (806cc <reset_timer+0x10>)
   806c2:	701a      	strb	r2, [r3, #0]
	start_timer();
   806c4:	4b02      	ldr	r3, [pc, #8]	; (806d0 <reset_timer+0x14>)
   806c6:	4798      	blx	r3
   806c8:	bd08      	pop	{r3, pc}
   806ca:	bf00      	nop
   806cc:	20000450 	.word	0x20000450
   806d0:	000806ad 	.word	0x000806ad

000806d4 <read_value_timer>:
}

uint32_t read_value_timer(){
	uint32_t clk_value=	REG_RTT_VR; //value of counts since last reset 
   806d4:	4b01      	ldr	r3, [pc, #4]	; (806dc <read_value_timer+0x8>)
   806d6:	6818      	ldr	r0, [r3, #0]
	return clk_value;
}
   806d8:	4770      	bx	lr
   806da:	bf00      	nop
   806dc:	400e1a38 	.word	0x400e1a38

000806e0 <DAC_init>:
void DAC_init(){
	REG_PMC_PCR= PMC_PCR_EN | PMC_PCR_DIV_PERIPH_DIV_MCK | ID_DACC << PMC_PCR_PID_Pos;
   806e0:	4a0c      	ldr	r2, [pc, #48]	; (80714 <DAC_init+0x34>)
   806e2:	4b0d      	ldr	r3, [pc, #52]	; (80718 <DAC_init+0x38>)
   806e4:	601a      	str	r2, [r3, #0]
	REG_PMC_PCER1 |= 1<< (ID_DACC-32);
   806e6:	4a0d      	ldr	r2, [pc, #52]	; (8071c <DAC_init+0x3c>)
   806e8:	6813      	ldr	r3, [r2, #0]
   806ea:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   806ee:	6013      	str	r3, [r2, #0]
	REG_DACC_WPMR=DACC_WPMR_WPKEY(0x444143);
   806f0:	f102 6286 	add.w	r2, r2, #70254592	; 0x4300000
   806f4:	f502 324f 	add.w	r2, r2, #211968	; 0x33c00
   806f8:	4b09      	ldr	r3, [pc, #36]	; (80720 <DAC_init+0x40>)
   806fa:	601a      	str	r2, [r3, #0]
	REG_DACC_MR=  DACC_MR_WORD_HALF | DACC_MR_USER_SEL_CHANNEL1 | DACC_MR_TRGEN_DIS | DACC_MR_STARTUP_0; //DACC Mode Register, Half-Word Mode, Channel 1
   806fc:	f44f 3280 	mov.w	r2, #65536	; 0x10000
   80700:	3be0      	subs	r3, #224	; 0xe0
   80702:	601a      	str	r2, [r3, #0]


	REG_DACC_IER= 1 << DACC_IER_EOC;
   80704:	2204      	movs	r2, #4
   80706:	3320      	adds	r3, #32
   80708:	601a      	str	r2, [r3, #0]
	REG_DACC_CHER=DACC_CHER_CH1; //Channel Enable Register, enable channel 1
   8070a:	2202      	movs	r2, #2
   8070c:	3b14      	subs	r3, #20
   8070e:	601a      	str	r2, [r3, #0]
   80710:	4770      	bx	lr
   80712:	bf00      	nop
   80714:	10000026 	.word	0x10000026
   80718:	400e070c 	.word	0x400e070c
   8071c:	400e0700 	.word	0x400e0700
   80720:	400c80e4 	.word	0x400c80e4

00080724 <DAC_write>:
}


void DAC_write(uint16_t data){
	//REG_DACC_CDR=data & 0xFFFF;
	REG_DACC_CDR= DACC_CDR_DATA(data);
   80724:	4b02      	ldr	r3, [pc, #8]	; (80730 <DAC_write+0xc>)
   80726:	6018      	str	r0, [r3, #0]
	while(!DACC->DACC_ISR & DACC_ISR_EOC);	
   80728:	3b20      	subs	r3, #32
   8072a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   8072c:	4770      	bx	lr
   8072e:	bf00      	nop
   80730:	400c8020 	.word	0x400c8020

00080734 <main>:
}
printf("END CAN Message print. \n \r")	;
}
uint32_t clk_value=0;
int main(void)
{
   80734:	b500      	push	{lr}
   80736:	b085      	sub	sp, #20
    /* Initialize the SAM system */
    SystemInit();
   80738:	4b19      	ldr	r3, [pc, #100]	; (807a0 <main+0x6c>)
   8073a:	4798      	blx	r3
	configure_uart();
   8073c:	4b19      	ldr	r3, [pc, #100]	; (807a4 <main+0x70>)
   8073e:	4798      	blx	r3
	pwn_init();
   80740:	4b19      	ldr	r3, [pc, #100]	; (807a8 <main+0x74>)
   80742:	4798      	blx	r3
	can_init_def_tx_rx_mb(get_can_br());
   80744:	4b19      	ldr	r3, [pc, #100]	; (807ac <main+0x78>)
   80746:	4798      	blx	r3
   80748:	4b19      	ldr	r3, [pc, #100]	; (807b0 <main+0x7c>)
   8074a:	4798      	blx	r3
	servo_init();
   8074c:	4b19      	ldr	r3, [pc, #100]	; (807b4 <main+0x80>)
   8074e:	4798      	blx	r3
	motor_init();
   80750:	4b19      	ldr	r3, [pc, #100]	; (807b8 <main+0x84>)
   80752:	4798      	blx	r3
	DAC_init();
   80754:	4b19      	ldr	r3, [pc, #100]	; (807bc <main+0x88>)
   80756:	4798      	blx	r3
	CAN_MESSAGE score_message;
	score_message.id=SCORE_CAN_ID;
   80758:	2302      	movs	r3, #2
   8075a:	f8ad 3004 	strh.w	r3, [sp, #4]
	score_message.data_length=SCORE_CAN_DATA_LENGTH;
   8075e:	2301      	movs	r3, #1
   80760:	f88d 3006 	strb.w	r3, [sp, #6]

	DAC_write(1000);
   80764:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
   80768:	4b15      	ldr	r3, [pc, #84]	; (807c0 <main+0x8c>)
   8076a:	4798      	blx	r3
			
	
	
	
	printf("START GAME\n\r");
   8076c:	4815      	ldr	r0, [pc, #84]	; (807c4 <main+0x90>)
   8076e:	4b16      	ldr	r3, [pc, #88]	; (807c8 <main+0x94>)
   80770:	4798      	blx	r3
    while (1){
		
		if (game_is_over()){	
   80772:	4b16      	ldr	r3, [pc, #88]	; (807cc <main+0x98>)
   80774:	4798      	blx	r3
   80776:	2800      	cmp	r0, #0
   80778:	d0fb      	beq.n	80772 <main+0x3e>
			clk_value=read_value_timer();
   8077a:	4b15      	ldr	r3, [pc, #84]	; (807d0 <main+0x9c>)
   8077c:	4798      	blx	r3
   8077e:	4601      	mov	r1, r0
   80780:	4c14      	ldr	r4, [pc, #80]	; (807d4 <main+0xa0>)
   80782:	6060      	str	r0, [r4, #4]
			printf("Your score is: %d\n\r",clk_value);
   80784:	4814      	ldr	r0, [pc, #80]	; (807d8 <main+0xa4>)
   80786:	4b10      	ldr	r3, [pc, #64]	; (807c8 <main+0x94>)
   80788:	4798      	blx	r3
			score_message.data[0]=clk_value;
   8078a:	6863      	ldr	r3, [r4, #4]
   8078c:	f88d 3007 	strb.w	r3, [sp, #7]
			can_send(&score_message,0);
   80790:	2100      	movs	r1, #0
   80792:	a801      	add	r0, sp, #4
   80794:	4b11      	ldr	r3, [pc, #68]	; (807dc <main+0xa8>)
   80796:	4798      	blx	r3
			reset_timer();	
   80798:	4b11      	ldr	r3, [pc, #68]	; (807e0 <main+0xac>)
   8079a:	4798      	blx	r3
   8079c:	e7e9      	b.n	80772 <main+0x3e>
   8079e:	bf00      	nop
   807a0:	000804a9 	.word	0x000804a9
   807a4:	00080a99 	.word	0x00080a99
   807a8:	00080569 	.word	0x00080569
   807ac:	00080365 	.word	0x00080365
   807b0:	00080245 	.word	0x00080245
   807b4:	0008061d 	.word	0x0008061d
   807b8:	00080605 	.word	0x00080605
   807bc:	000806e1 	.word	0x000806e1
   807c0:	00080725 	.word	0x00080725
   807c4:	00080dfc 	.word	0x00080dfc
   807c8:	00080a75 	.word	0x00080a75
   807cc:	00080675 	.word	0x00080675
   807d0:	000806d5 	.word	0x000806d5
   807d4:	20000450 	.word	0x20000450
   807d8:	00080e0c 	.word	0x00080e0c
   807dc:	00080255 	.word	0x00080255
   807e0:	000806bd 	.word	0x000806bd

000807e4 <printchar>:
   807e4:	b508      	push	{r3, lr}
   807e6:	b2c8      	uxtb	r0, r1
   807e8:	4b01      	ldr	r3, [pc, #4]	; (807f0 <printchar+0xc>)
   807ea:	4798      	blx	r3
   807ec:	bd08      	pop	{r3, pc}
   807ee:	bf00      	nop
   807f0:	00080b01 	.word	0x00080b01

000807f4 <prints>:
   807f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   807f8:	4607      	mov	r7, r0
   807fa:	460e      	mov	r6, r1
   807fc:	1e15      	subs	r5, r2, #0
   807fe:	dd02      	ble.n	80806 <prints+0x12>
   80800:	460a      	mov	r2, r1
   80802:	2100      	movs	r1, #0
   80804:	e004      	b.n	80810 <prints+0x1c>
   80806:	f04f 0820 	mov.w	r8, #32
   8080a:	e00e      	b.n	8082a <prints+0x36>
   8080c:	3101      	adds	r1, #1
   8080e:	3201      	adds	r2, #1
   80810:	7810      	ldrb	r0, [r2, #0]
   80812:	2800      	cmp	r0, #0
   80814:	d1fa      	bne.n	8080c <prints+0x18>
   80816:	42a9      	cmp	r1, r5
   80818:	da01      	bge.n	8081e <prints+0x2a>
   8081a:	1a6d      	subs	r5, r5, r1
   8081c:	e000      	b.n	80820 <prints+0x2c>
   8081e:	2500      	movs	r5, #0
   80820:	f013 0f02 	tst.w	r3, #2
   80824:	d106      	bne.n	80834 <prints+0x40>
   80826:	f04f 0820 	mov.w	r8, #32
   8082a:	f013 0401 	ands.w	r4, r3, #1
   8082e:	d00a      	beq.n	80846 <prints+0x52>
   80830:	2400      	movs	r4, #0
   80832:	e010      	b.n	80856 <prints+0x62>
   80834:	f04f 0830 	mov.w	r8, #48	; 0x30
   80838:	e7f7      	b.n	8082a <prints+0x36>
   8083a:	4641      	mov	r1, r8
   8083c:	4638      	mov	r0, r7
   8083e:	4b0d      	ldr	r3, [pc, #52]	; (80874 <prints+0x80>)
   80840:	4798      	blx	r3
   80842:	3401      	adds	r4, #1
   80844:	3d01      	subs	r5, #1
   80846:	2d00      	cmp	r5, #0
   80848:	dcf7      	bgt.n	8083a <prints+0x46>
   8084a:	e004      	b.n	80856 <prints+0x62>
   8084c:	4638      	mov	r0, r7
   8084e:	4b09      	ldr	r3, [pc, #36]	; (80874 <prints+0x80>)
   80850:	4798      	blx	r3
   80852:	3401      	adds	r4, #1
   80854:	3601      	adds	r6, #1
   80856:	7831      	ldrb	r1, [r6, #0]
   80858:	2900      	cmp	r1, #0
   8085a:	d1f7      	bne.n	8084c <prints+0x58>
   8085c:	e005      	b.n	8086a <prints+0x76>
   8085e:	4641      	mov	r1, r8
   80860:	4638      	mov	r0, r7
   80862:	4b04      	ldr	r3, [pc, #16]	; (80874 <prints+0x80>)
   80864:	4798      	blx	r3
   80866:	3401      	adds	r4, #1
   80868:	3d01      	subs	r5, #1
   8086a:	2d00      	cmp	r5, #0
   8086c:	dcf7      	bgt.n	8085e <prints+0x6a>
   8086e:	4620      	mov	r0, r4
   80870:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80874:	000807e5 	.word	0x000807e5

00080878 <printi>:
   80878:	b5f0      	push	{r4, r5, r6, r7, lr}
   8087a:	b085      	sub	sp, #20
   8087c:	4607      	mov	r7, r0
   8087e:	980c      	ldr	r0, [sp, #48]	; 0x30
   80880:	b151      	cbz	r1, 80898 <printi+0x20>
   80882:	461e      	mov	r6, r3
   80884:	460c      	mov	r4, r1
   80886:	b113      	cbz	r3, 8088e <printi+0x16>
   80888:	2a0a      	cmp	r2, #10
   8088a:	d012      	beq.n	808b2 <printi+0x3a>
   8088c:	2600      	movs	r6, #0
   8088e:	ad04      	add	r5, sp, #16
   80890:	2300      	movs	r3, #0
   80892:	f805 3d01 	strb.w	r3, [r5, #-1]!
   80896:	e018      	b.n	808ca <printi+0x52>
   80898:	2330      	movs	r3, #48	; 0x30
   8089a:	f88d 3004 	strb.w	r3, [sp, #4]
   8089e:	2300      	movs	r3, #0
   808a0:	f88d 3005 	strb.w	r3, [sp, #5]
   808a4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   808a6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   808a8:	a901      	add	r1, sp, #4
   808aa:	4638      	mov	r0, r7
   808ac:	4c1b      	ldr	r4, [pc, #108]	; (8091c <printi+0xa4>)
   808ae:	47a0      	blx	r4
   808b0:	e029      	b.n	80906 <printi+0x8e>
   808b2:	2900      	cmp	r1, #0
   808b4:	db01      	blt.n	808ba <printi+0x42>
   808b6:	2600      	movs	r6, #0
   808b8:	e7e9      	b.n	8088e <printi+0x16>
   808ba:	424c      	negs	r4, r1
   808bc:	2601      	movs	r6, #1
   808be:	e7e6      	b.n	8088e <printi+0x16>
   808c0:	3330      	adds	r3, #48	; 0x30
   808c2:	f805 3d01 	strb.w	r3, [r5, #-1]!
   808c6:	fbb4 f4f2 	udiv	r4, r4, r2
   808ca:	b14c      	cbz	r4, 808e0 <printi+0x68>
   808cc:	fbb4 f3f2 	udiv	r3, r4, r2
   808d0:	fb02 4313 	mls	r3, r2, r3, r4
   808d4:	2b09      	cmp	r3, #9
   808d6:	ddf3      	ble.n	808c0 <printi+0x48>
   808d8:	f1a0 013a 	sub.w	r1, r0, #58	; 0x3a
   808dc:	440b      	add	r3, r1
   808de:	e7ef      	b.n	808c0 <printi+0x48>
   808e0:	b156      	cbz	r6, 808f8 <printi+0x80>
   808e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   808e4:	b11b      	cbz	r3, 808ee <printi+0x76>
   808e6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   808e8:	f013 0f02 	tst.w	r3, #2
   808ec:	d10d      	bne.n	8090a <printi+0x92>
   808ee:	232d      	movs	r3, #45	; 0x2d
   808f0:	f805 3c01 	strb.w	r3, [r5, #-1]
   808f4:	3d01      	subs	r5, #1
   808f6:	2600      	movs	r6, #0
   808f8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   808fa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   808fc:	4629      	mov	r1, r5
   808fe:	4638      	mov	r0, r7
   80900:	4c06      	ldr	r4, [pc, #24]	; (8091c <printi+0xa4>)
   80902:	47a0      	blx	r4
   80904:	4430      	add	r0, r6
   80906:	b005      	add	sp, #20
   80908:	bdf0      	pop	{r4, r5, r6, r7, pc}
   8090a:	212d      	movs	r1, #45	; 0x2d
   8090c:	4638      	mov	r0, r7
   8090e:	4b04      	ldr	r3, [pc, #16]	; (80920 <printi+0xa8>)
   80910:	4798      	blx	r3
   80912:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   80914:	3b01      	subs	r3, #1
   80916:	930a      	str	r3, [sp, #40]	; 0x28
   80918:	e7ee      	b.n	808f8 <printi+0x80>
   8091a:	bf00      	nop
   8091c:	000807f5 	.word	0x000807f5
   80920:	000807e5 	.word	0x000807e5

00080924 <print>:
   80924:	b5f0      	push	{r4, r5, r6, r7, lr}
   80926:	b089      	sub	sp, #36	; 0x24
   80928:	4606      	mov	r6, r0
   8092a:	460c      	mov	r4, r1
   8092c:	9205      	str	r2, [sp, #20]
   8092e:	2500      	movs	r5, #0
   80930:	e081      	b.n	80a36 <print+0x112>
   80932:	1ca2      	adds	r2, r4, #2
   80934:	2301      	movs	r3, #1
   80936:	e08b      	b.n	80a50 <print+0x12c>
   80938:	3401      	adds	r4, #1
   8093a:	f043 0302 	orr.w	r3, r3, #2
   8093e:	7822      	ldrb	r2, [r4, #0]
   80940:	2a30      	cmp	r2, #48	; 0x30
   80942:	d0f9      	beq.n	80938 <print+0x14>
   80944:	2200      	movs	r2, #0
   80946:	e006      	b.n	80956 <print+0x32>
   80948:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   8094c:	0050      	lsls	r0, r2, #1
   8094e:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
   80952:	4402      	add	r2, r0
   80954:	3401      	adds	r4, #1
   80956:	7821      	ldrb	r1, [r4, #0]
   80958:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
   8095c:	b2c0      	uxtb	r0, r0
   8095e:	2809      	cmp	r0, #9
   80960:	d9f2      	bls.n	80948 <print+0x24>
   80962:	2973      	cmp	r1, #115	; 0x73
   80964:	d018      	beq.n	80998 <print+0x74>
   80966:	2964      	cmp	r1, #100	; 0x64
   80968:	d022      	beq.n	809b0 <print+0x8c>
   8096a:	2978      	cmp	r1, #120	; 0x78
   8096c:	d02f      	beq.n	809ce <print+0xaa>
   8096e:	2958      	cmp	r1, #88	; 0x58
   80970:	d03c      	beq.n	809ec <print+0xc8>
   80972:	2975      	cmp	r1, #117	; 0x75
   80974:	d049      	beq.n	80a0a <print+0xe6>
   80976:	2963      	cmp	r1, #99	; 0x63
   80978:	d15c      	bne.n	80a34 <print+0x110>
   8097a:	9905      	ldr	r1, [sp, #20]
   8097c:	1d08      	adds	r0, r1, #4
   8097e:	9005      	str	r0, [sp, #20]
   80980:	7809      	ldrb	r1, [r1, #0]
   80982:	f88d 101c 	strb.w	r1, [sp, #28]
   80986:	2100      	movs	r1, #0
   80988:	f88d 101d 	strb.w	r1, [sp, #29]
   8098c:	a907      	add	r1, sp, #28
   8098e:	4630      	mov	r0, r6
   80990:	4f34      	ldr	r7, [pc, #208]	; (80a64 <print+0x140>)
   80992:	47b8      	blx	r7
   80994:	4405      	add	r5, r0
   80996:	e04d      	b.n	80a34 <print+0x110>
   80998:	9905      	ldr	r1, [sp, #20]
   8099a:	1d08      	adds	r0, r1, #4
   8099c:	9005      	str	r0, [sp, #20]
   8099e:	6809      	ldr	r1, [r1, #0]
   809a0:	b121      	cbz	r1, 809ac <print+0x88>
   809a2:	4630      	mov	r0, r6
   809a4:	4f2f      	ldr	r7, [pc, #188]	; (80a64 <print+0x140>)
   809a6:	47b8      	blx	r7
   809a8:	4405      	add	r5, r0
   809aa:	e043      	b.n	80a34 <print+0x110>
   809ac:	492e      	ldr	r1, [pc, #184]	; (80a68 <print+0x144>)
   809ae:	e7f8      	b.n	809a2 <print+0x7e>
   809b0:	9905      	ldr	r1, [sp, #20]
   809b2:	1d08      	adds	r0, r1, #4
   809b4:	9005      	str	r0, [sp, #20]
   809b6:	6809      	ldr	r1, [r1, #0]
   809b8:	2061      	movs	r0, #97	; 0x61
   809ba:	9002      	str	r0, [sp, #8]
   809bc:	9301      	str	r3, [sp, #4]
   809be:	9200      	str	r2, [sp, #0]
   809c0:	2301      	movs	r3, #1
   809c2:	220a      	movs	r2, #10
   809c4:	4630      	mov	r0, r6
   809c6:	4f29      	ldr	r7, [pc, #164]	; (80a6c <print+0x148>)
   809c8:	47b8      	blx	r7
   809ca:	4405      	add	r5, r0
   809cc:	e032      	b.n	80a34 <print+0x110>
   809ce:	9905      	ldr	r1, [sp, #20]
   809d0:	1d08      	adds	r0, r1, #4
   809d2:	9005      	str	r0, [sp, #20]
   809d4:	6809      	ldr	r1, [r1, #0]
   809d6:	2061      	movs	r0, #97	; 0x61
   809d8:	9002      	str	r0, [sp, #8]
   809da:	9301      	str	r3, [sp, #4]
   809dc:	9200      	str	r2, [sp, #0]
   809de:	2300      	movs	r3, #0
   809e0:	2210      	movs	r2, #16
   809e2:	4630      	mov	r0, r6
   809e4:	4f21      	ldr	r7, [pc, #132]	; (80a6c <print+0x148>)
   809e6:	47b8      	blx	r7
   809e8:	4405      	add	r5, r0
   809ea:	e023      	b.n	80a34 <print+0x110>
   809ec:	9905      	ldr	r1, [sp, #20]
   809ee:	1d08      	adds	r0, r1, #4
   809f0:	9005      	str	r0, [sp, #20]
   809f2:	6809      	ldr	r1, [r1, #0]
   809f4:	2041      	movs	r0, #65	; 0x41
   809f6:	9002      	str	r0, [sp, #8]
   809f8:	9301      	str	r3, [sp, #4]
   809fa:	9200      	str	r2, [sp, #0]
   809fc:	2300      	movs	r3, #0
   809fe:	2210      	movs	r2, #16
   80a00:	4630      	mov	r0, r6
   80a02:	4f1a      	ldr	r7, [pc, #104]	; (80a6c <print+0x148>)
   80a04:	47b8      	blx	r7
   80a06:	4405      	add	r5, r0
   80a08:	e014      	b.n	80a34 <print+0x110>
   80a0a:	9905      	ldr	r1, [sp, #20]
   80a0c:	1d08      	adds	r0, r1, #4
   80a0e:	9005      	str	r0, [sp, #20]
   80a10:	6809      	ldr	r1, [r1, #0]
   80a12:	2061      	movs	r0, #97	; 0x61
   80a14:	9002      	str	r0, [sp, #8]
   80a16:	9301      	str	r3, [sp, #4]
   80a18:	9200      	str	r2, [sp, #0]
   80a1a:	2300      	movs	r3, #0
   80a1c:	220a      	movs	r2, #10
   80a1e:	4630      	mov	r0, r6
   80a20:	4f12      	ldr	r7, [pc, #72]	; (80a6c <print+0x148>)
   80a22:	47b8      	blx	r7
   80a24:	4405      	add	r5, r0
   80a26:	e005      	b.n	80a34 <print+0x110>
   80a28:	4614      	mov	r4, r2
   80a2a:	7821      	ldrb	r1, [r4, #0]
   80a2c:	4630      	mov	r0, r6
   80a2e:	4b10      	ldr	r3, [pc, #64]	; (80a70 <print+0x14c>)
   80a30:	4798      	blx	r3
   80a32:	3501      	adds	r5, #1
   80a34:	3401      	adds	r4, #1
   80a36:	7823      	ldrb	r3, [r4, #0]
   80a38:	b163      	cbz	r3, 80a54 <print+0x130>
   80a3a:	2b25      	cmp	r3, #37	; 0x25
   80a3c:	d1f5      	bne.n	80a2a <print+0x106>
   80a3e:	1c62      	adds	r2, r4, #1
   80a40:	7863      	ldrb	r3, [r4, #1]
   80a42:	b13b      	cbz	r3, 80a54 <print+0x130>
   80a44:	2b25      	cmp	r3, #37	; 0x25
   80a46:	d0ef      	beq.n	80a28 <print+0x104>
   80a48:	2b2d      	cmp	r3, #45	; 0x2d
   80a4a:	f43f af72 	beq.w	80932 <print+0xe>
   80a4e:	2300      	movs	r3, #0
   80a50:	4614      	mov	r4, r2
   80a52:	e774      	b.n	8093e <print+0x1a>
   80a54:	b116      	cbz	r6, 80a5c <print+0x138>
   80a56:	6833      	ldr	r3, [r6, #0]
   80a58:	2200      	movs	r2, #0
   80a5a:	701a      	strb	r2, [r3, #0]
   80a5c:	4628      	mov	r0, r5
   80a5e:	b009      	add	sp, #36	; 0x24
   80a60:	bdf0      	pop	{r4, r5, r6, r7, pc}
   80a62:	bf00      	nop
   80a64:	000807f5 	.word	0x000807f5
   80a68:	00080e20 	.word	0x00080e20
   80a6c:	00080879 	.word	0x00080879
   80a70:	000807e5 	.word	0x000807e5

00080a74 <printf>:
   80a74:	b40f      	push	{r0, r1, r2, r3}
   80a76:	b500      	push	{lr}
   80a78:	b083      	sub	sp, #12
   80a7a:	aa04      	add	r2, sp, #16
   80a7c:	f852 1b04 	ldr.w	r1, [r2], #4
   80a80:	9201      	str	r2, [sp, #4]
   80a82:	2000      	movs	r0, #0
   80a84:	4b03      	ldr	r3, [pc, #12]	; (80a94 <printf+0x20>)
   80a86:	4798      	blx	r3
   80a88:	b003      	add	sp, #12
   80a8a:	f85d eb04 	ldr.w	lr, [sp], #4
   80a8e:	b004      	add	sp, #16
   80a90:	4770      	bx	lr
   80a92:	bf00      	nop
   80a94:	00080925 	.word	0x00080925

00080a98 <configure_uart>:
   80a98:	4b16      	ldr	r3, [pc, #88]	; (80af4 <configure_uart+0x5c>)
   80a9a:	2200      	movs	r2, #0
   80a9c:	701a      	strb	r2, [r3, #0]
   80a9e:	705a      	strb	r2, [r3, #1]
   80aa0:	4b15      	ldr	r3, [pc, #84]	; (80af8 <configure_uart+0x60>)
   80aa2:	f44f 7140 	mov.w	r1, #768	; 0x300
   80aa6:	6459      	str	r1, [r3, #68]	; 0x44
   80aa8:	6059      	str	r1, [r3, #4]
   80aaa:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   80aac:	6f18      	ldr	r0, [r3, #112]	; 0x70
   80aae:	4002      	ands	r2, r0
   80ab0:	f422 7240 	bic.w	r2, r2, #768	; 0x300
   80ab4:	671a      	str	r2, [r3, #112]	; 0x70
   80ab6:	6659      	str	r1, [r3, #100]	; 0x64
   80ab8:	f44f 7280 	mov.w	r2, #256	; 0x100
   80abc:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
   80ac0:	611a      	str	r2, [r3, #16]
   80ac2:	f503 7300 	add.w	r3, r3, #512	; 0x200
   80ac6:	21ac      	movs	r1, #172	; 0xac
   80ac8:	6019      	str	r1, [r3, #0]
   80aca:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
   80ace:	6219      	str	r1, [r3, #32]
   80ad0:	f44f 6100 	mov.w	r1, #2048	; 0x800
   80ad4:	6059      	str	r1, [r3, #4]
   80ad6:	f240 2102 	movw	r1, #514	; 0x202
   80ada:	f8c3 1120 	str.w	r1, [r3, #288]	; 0x120
   80ade:	f04f 31ff 	mov.w	r1, #4294967295
   80ae2:	60d9      	str	r1, [r3, #12]
   80ae4:	21e1      	movs	r1, #225	; 0xe1
   80ae6:	6099      	str	r1, [r3, #8]
   80ae8:	4904      	ldr	r1, [pc, #16]	; (80afc <configure_uart+0x64>)
   80aea:	600a      	str	r2, [r1, #0]
   80aec:	2250      	movs	r2, #80	; 0x50
   80aee:	601a      	str	r2, [r3, #0]
   80af0:	4770      	bx	lr
   80af2:	bf00      	nop
   80af4:	20000464 	.word	0x20000464
   80af8:	400e0e00 	.word	0x400e0e00
   80afc:	e000e100 	.word	0xe000e100

00080b00 <uart_putchar>:
   80b00:	4b07      	ldr	r3, [pc, #28]	; (80b20 <uart_putchar+0x20>)
   80b02:	695b      	ldr	r3, [r3, #20]
   80b04:	f013 0f02 	tst.w	r3, #2
   80b08:	d008      	beq.n	80b1c <uart_putchar+0x1c>
   80b0a:	4b05      	ldr	r3, [pc, #20]	; (80b20 <uart_putchar+0x20>)
   80b0c:	61d8      	str	r0, [r3, #28]
   80b0e:	4b04      	ldr	r3, [pc, #16]	; (80b20 <uart_putchar+0x20>)
   80b10:	695b      	ldr	r3, [r3, #20]
   80b12:	f413 7f00 	tst.w	r3, #512	; 0x200
   80b16:	d0fa      	beq.n	80b0e <uart_putchar+0xe>
   80b18:	2000      	movs	r0, #0
   80b1a:	4770      	bx	lr
   80b1c:	2001      	movs	r0, #1
   80b1e:	4770      	bx	lr
   80b20:	400e0800 	.word	0x400e0800

00080b24 <UART_Handler>:
   80b24:	b508      	push	{r3, lr}
   80b26:	4b15      	ldr	r3, [pc, #84]	; (80b7c <UART_Handler+0x58>)
   80b28:	695b      	ldr	r3, [r3, #20]
   80b2a:	f013 0fe0 	tst.w	r3, #224	; 0xe0
   80b2e:	d003      	beq.n	80b38 <UART_Handler+0x14>
   80b30:	f44f 71a8 	mov.w	r1, #336	; 0x150
   80b34:	4a11      	ldr	r2, [pc, #68]	; (80b7c <UART_Handler+0x58>)
   80b36:	6011      	str	r1, [r2, #0]
   80b38:	f013 0f01 	tst.w	r3, #1
   80b3c:	d012      	beq.n	80b64 <UART_Handler+0x40>
   80b3e:	4810      	ldr	r0, [pc, #64]	; (80b80 <UART_Handler+0x5c>)
   80b40:	7842      	ldrb	r2, [r0, #1]
   80b42:	1c53      	adds	r3, r2, #1
   80b44:	4259      	negs	r1, r3
   80b46:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   80b4a:	f001 013f 	and.w	r1, r1, #63	; 0x3f
   80b4e:	bf58      	it	pl
   80b50:	424b      	negpl	r3, r1
   80b52:	7801      	ldrb	r1, [r0, #0]
   80b54:	428b      	cmp	r3, r1
   80b56:	d006      	beq.n	80b66 <UART_Handler+0x42>
   80b58:	4908      	ldr	r1, [pc, #32]	; (80b7c <UART_Handler+0x58>)
   80b5a:	6988      	ldr	r0, [r1, #24]
   80b5c:	4908      	ldr	r1, [pc, #32]	; (80b80 <UART_Handler+0x5c>)
   80b5e:	440a      	add	r2, r1
   80b60:	7090      	strb	r0, [r2, #2]
   80b62:	704b      	strb	r3, [r1, #1]
   80b64:	bd08      	pop	{r3, pc}
   80b66:	4807      	ldr	r0, [pc, #28]	; (80b84 <UART_Handler+0x60>)
   80b68:	4b07      	ldr	r3, [pc, #28]	; (80b88 <UART_Handler+0x64>)
   80b6a:	4798      	blx	r3
   80b6c:	4b04      	ldr	r3, [pc, #16]	; (80b80 <UART_Handler+0x5c>)
   80b6e:	7859      	ldrb	r1, [r3, #1]
   80b70:	4a02      	ldr	r2, [pc, #8]	; (80b7c <UART_Handler+0x58>)
   80b72:	6992      	ldr	r2, [r2, #24]
   80b74:	440b      	add	r3, r1
   80b76:	709a      	strb	r2, [r3, #2]
   80b78:	bd08      	pop	{r3, pc}
   80b7a:	bf00      	nop
   80b7c:	400e0800 	.word	0x400e0800
   80b80:	20000464 	.word	0x20000464
   80b84:	00080e28 	.word	0x00080e28
   80b88:	00080a75 	.word	0x00080a75

00080b8c <__libc_init_array>:
   80b8c:	b570      	push	{r4, r5, r6, lr}
   80b8e:	4e0f      	ldr	r6, [pc, #60]	; (80bcc <__libc_init_array+0x40>)
   80b90:	4d0f      	ldr	r5, [pc, #60]	; (80bd0 <__libc_init_array+0x44>)
   80b92:	1b76      	subs	r6, r6, r5
   80b94:	10b6      	asrs	r6, r6, #2
   80b96:	bf18      	it	ne
   80b98:	2400      	movne	r4, #0
   80b9a:	d005      	beq.n	80ba8 <__libc_init_array+0x1c>
   80b9c:	3401      	adds	r4, #1
   80b9e:	f855 3b04 	ldr.w	r3, [r5], #4
   80ba2:	4798      	blx	r3
   80ba4:	42a6      	cmp	r6, r4
   80ba6:	d1f9      	bne.n	80b9c <__libc_init_array+0x10>
   80ba8:	4e0a      	ldr	r6, [pc, #40]	; (80bd4 <__libc_init_array+0x48>)
   80baa:	4d0b      	ldr	r5, [pc, #44]	; (80bd8 <__libc_init_array+0x4c>)
   80bac:	f000 f94e 	bl	80e4c <_init>
   80bb0:	1b76      	subs	r6, r6, r5
   80bb2:	10b6      	asrs	r6, r6, #2
   80bb4:	bf18      	it	ne
   80bb6:	2400      	movne	r4, #0
   80bb8:	d006      	beq.n	80bc8 <__libc_init_array+0x3c>
   80bba:	3401      	adds	r4, #1
   80bbc:	f855 3b04 	ldr.w	r3, [r5], #4
   80bc0:	4798      	blx	r3
   80bc2:	42a6      	cmp	r6, r4
   80bc4:	d1f9      	bne.n	80bba <__libc_init_array+0x2e>
   80bc6:	bd70      	pop	{r4, r5, r6, pc}
   80bc8:	bd70      	pop	{r4, r5, r6, pc}
   80bca:	bf00      	nop
   80bcc:	00080e58 	.word	0x00080e58
   80bd0:	00080e58 	.word	0x00080e58
   80bd4:	00080e60 	.word	0x00080e60
   80bd8:	00080e58 	.word	0x00080e58

00080bdc <register_fini>:
   80bdc:	4b02      	ldr	r3, [pc, #8]	; (80be8 <register_fini+0xc>)
   80bde:	b113      	cbz	r3, 80be6 <register_fini+0xa>
   80be0:	4802      	ldr	r0, [pc, #8]	; (80bec <register_fini+0x10>)
   80be2:	f000 b805 	b.w	80bf0 <atexit>
   80be6:	4770      	bx	lr
   80be8:	00000000 	.word	0x00000000
   80bec:	00080bfd 	.word	0x00080bfd

00080bf0 <atexit>:
   80bf0:	2300      	movs	r3, #0
   80bf2:	4601      	mov	r1, r0
   80bf4:	461a      	mov	r2, r3
   80bf6:	4618      	mov	r0, r3
   80bf8:	f000 b81e 	b.w	80c38 <__register_exitproc>

00080bfc <__libc_fini_array>:
   80bfc:	b538      	push	{r3, r4, r5, lr}
   80bfe:	4c0a      	ldr	r4, [pc, #40]	; (80c28 <__libc_fini_array+0x2c>)
   80c00:	4d0a      	ldr	r5, [pc, #40]	; (80c2c <__libc_fini_array+0x30>)
   80c02:	1b64      	subs	r4, r4, r5
   80c04:	10a4      	asrs	r4, r4, #2
   80c06:	d00a      	beq.n	80c1e <__libc_fini_array+0x22>
   80c08:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
   80c0c:	3b01      	subs	r3, #1
   80c0e:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   80c12:	3c01      	subs	r4, #1
   80c14:	f855 3904 	ldr.w	r3, [r5], #-4
   80c18:	4798      	blx	r3
   80c1a:	2c00      	cmp	r4, #0
   80c1c:	d1f9      	bne.n	80c12 <__libc_fini_array+0x16>
   80c1e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   80c22:	f000 b91d 	b.w	80e60 <_fini>
   80c26:	bf00      	nop
   80c28:	00080e70 	.word	0x00080e70
   80c2c:	00080e6c 	.word	0x00080e6c

00080c30 <__retarget_lock_acquire_recursive>:
   80c30:	4770      	bx	lr
   80c32:	bf00      	nop

00080c34 <__retarget_lock_release_recursive>:
   80c34:	4770      	bx	lr
   80c36:	bf00      	nop

00080c38 <__register_exitproc>:
   80c38:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   80c3c:	4d2c      	ldr	r5, [pc, #176]	; (80cf0 <__register_exitproc+0xb8>)
   80c3e:	4606      	mov	r6, r0
   80c40:	6828      	ldr	r0, [r5, #0]
   80c42:	4698      	mov	r8, r3
   80c44:	460f      	mov	r7, r1
   80c46:	4691      	mov	r9, r2
   80c48:	f7ff fff2 	bl	80c30 <__retarget_lock_acquire_recursive>
   80c4c:	4b29      	ldr	r3, [pc, #164]	; (80cf4 <__register_exitproc+0xbc>)
   80c4e:	681c      	ldr	r4, [r3, #0]
   80c50:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
   80c54:	2b00      	cmp	r3, #0
   80c56:	d03e      	beq.n	80cd6 <__register_exitproc+0x9e>
   80c58:	685a      	ldr	r2, [r3, #4]
   80c5a:	2a1f      	cmp	r2, #31
   80c5c:	dc1c      	bgt.n	80c98 <__register_exitproc+0x60>
   80c5e:	f102 0e01 	add.w	lr, r2, #1
   80c62:	b176      	cbz	r6, 80c82 <__register_exitproc+0x4a>
   80c64:	2101      	movs	r1, #1
   80c66:	eb03 0482 	add.w	r4, r3, r2, lsl #2
   80c6a:	f8c4 9088 	str.w	r9, [r4, #136]	; 0x88
   80c6e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
   80c72:	4091      	lsls	r1, r2
   80c74:	4308      	orrs	r0, r1
   80c76:	2e02      	cmp	r6, #2
   80c78:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   80c7c:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
   80c80:	d023      	beq.n	80cca <__register_exitproc+0x92>
   80c82:	3202      	adds	r2, #2
   80c84:	f8c3 e004 	str.w	lr, [r3, #4]
   80c88:	6828      	ldr	r0, [r5, #0]
   80c8a:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   80c8e:	f7ff ffd1 	bl	80c34 <__retarget_lock_release_recursive>
   80c92:	2000      	movs	r0, #0
   80c94:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   80c98:	4b17      	ldr	r3, [pc, #92]	; (80cf8 <__register_exitproc+0xc0>)
   80c9a:	b30b      	cbz	r3, 80ce0 <__register_exitproc+0xa8>
   80c9c:	f44f 70c8 	mov.w	r0, #400	; 0x190
   80ca0:	f3af 8000 	nop.w
   80ca4:	4603      	mov	r3, r0
   80ca6:	b1d8      	cbz	r0, 80ce0 <__register_exitproc+0xa8>
   80ca8:	2000      	movs	r0, #0
   80caa:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
   80cae:	f04f 0e01 	mov.w	lr, #1
   80cb2:	6058      	str	r0, [r3, #4]
   80cb4:	6019      	str	r1, [r3, #0]
   80cb6:	4602      	mov	r2, r0
   80cb8:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   80cbc:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   80cc0:	f8c3 018c 	str.w	r0, [r3, #396]	; 0x18c
   80cc4:	2e00      	cmp	r6, #0
   80cc6:	d0dc      	beq.n	80c82 <__register_exitproc+0x4a>
   80cc8:	e7cc      	b.n	80c64 <__register_exitproc+0x2c>
   80cca:	f8d3 018c 	ldr.w	r0, [r3, #396]	; 0x18c
   80cce:	4301      	orrs	r1, r0
   80cd0:	f8c3 118c 	str.w	r1, [r3, #396]	; 0x18c
   80cd4:	e7d5      	b.n	80c82 <__register_exitproc+0x4a>
   80cd6:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
   80cda:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   80cde:	e7bb      	b.n	80c58 <__register_exitproc+0x20>
   80ce0:	6828      	ldr	r0, [r5, #0]
   80ce2:	f7ff ffa7 	bl	80c34 <__retarget_lock_release_recursive>
   80ce6:	f04f 30ff 	mov.w	r0, #4294967295
   80cea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   80cee:	bf00      	nop
   80cf0:	20000430 	.word	0x20000430
   80cf4:	00080e48 	.word	0x00080e48
   80cf8:	00000000 	.word	0x00000000
   80cfc:	304e4143 	.word	0x304e4143
   80d00:	746e6920 	.word	0x746e6920
   80d04:	75727265 	.word	0x75727265
   80d08:	0d0a7470 	.word	0x0d0a7470
   80d0c:	00000000 	.word	0x00000000
   80d10:	304e4143 	.word	0x304e4143
   80d14:	73656d20 	.word	0x73656d20
   80d18:	65676173 	.word	0x65676173
   80d1c:	72726120 	.word	0x72726120
   80d20:	64657669 	.word	0x64657669
   80d24:	206e6920 	.word	0x206e6920
   80d28:	2d6e6f6e 	.word	0x2d6e6f6e
   80d2c:	64657375 	.word	0x64657375
   80d30:	69616d20 	.word	0x69616d20
   80d34:	786f626c 	.word	0x786f626c
   80d38:	00000d0a 	.word	0x00000d0a
   80d3c:	7373656d 	.word	0x7373656d
   80d40:	20656761 	.word	0x20656761
   80d44:	203a6469 	.word	0x203a6469
   80d48:	0d0a6425 	.word	0x0d0a6425
   80d4c:	00000000 	.word	0x00000000
   80d50:	7373656d 	.word	0x7373656d
   80d54:	20656761 	.word	0x20656761
   80d58:	61746164 	.word	0x61746164
   80d5c:	6e656c20 	.word	0x6e656c20
   80d60:	3a687467 	.word	0x3a687467
   80d64:	0a642520 	.word	0x0a642520
   80d68:	0000000d 	.word	0x0000000d
   80d6c:	00206425 	.word	0x00206425
   80d70:	304e4143 	.word	0x304e4143
   80d74:	30424d20 	.word	0x30424d20
   80d78:	61657220 	.word	0x61657220
   80d7c:	74207964 	.word	0x74207964
   80d80:	6573206f 	.word	0x6573206f
   80d84:	0a20646e 	.word	0x0a20646e
   80d88:	0000000d 	.word	0x0000000d
   80d8c:	52415453 	.word	0x52415453
   80d90:	41432054 	.word	0x41432054
   80d94:	654d204e 	.word	0x654d204e
   80d98:	67617373 	.word	0x67617373
   80d9c:	72702065 	.word	0x72702065
   80da0:	2e746e69 	.word	0x2e746e69
   80da4:	0d200a20 	.word	0x0d200a20
   80da8:	00000000 	.word	0x00000000
   80dac:	203a4449 	.word	0x203a4449
   80db0:	0a206425 	.word	0x0a206425
   80db4:	00000d20 	.word	0x00000d20
   80db8:	676e654c 	.word	0x676e654c
   80dbc:	203a6874 	.word	0x203a6874
   80dc0:	0a206425 	.word	0x0a206425
   80dc4:	00000d20 	.word	0x00000d20
   80dc8:	6b636150 	.word	0x6b636150
   80dcc:	20656761 	.word	0x20656761
   80dd0:	5d64255b 	.word	0x5d64255b
   80dd4:	6425203a 	.word	0x6425203a
   80dd8:	0d200a20 	.word	0x0d200a20
   80ddc:	00000000 	.word	0x00000000
   80de0:	20444e45 	.word	0x20444e45
   80de4:	204e4143 	.word	0x204e4143
   80de8:	7373654d 	.word	0x7373654d
   80dec:	20656761 	.word	0x20656761
   80df0:	6e697270 	.word	0x6e697270
   80df4:	0a202e74 	.word	0x0a202e74
   80df8:	00000d20 	.word	0x00000d20
   80dfc:	52415453 	.word	0x52415453
   80e00:	41472054 	.word	0x41472054
   80e04:	0d0a454d 	.word	0x0d0a454d
   80e08:	00000000 	.word	0x00000000
   80e0c:	72756f59 	.word	0x72756f59
   80e10:	6f637320 	.word	0x6f637320
   80e14:	69206572 	.word	0x69206572
   80e18:	25203a73 	.word	0x25203a73
   80e1c:	000d0a64 	.word	0x000d0a64
   80e20:	6c756e28 	.word	0x6c756e28
   80e24:	0000296c 	.word	0x0000296c
   80e28:	3a525245 	.word	0x3a525245
   80e2c:	52415520 	.word	0x52415520
   80e30:	58522054 	.word	0x58522054
   80e34:	66756220 	.word	0x66756220
   80e38:	20726566 	.word	0x20726566
   80e3c:	66207369 	.word	0x66207369
   80e40:	0a6c6c75 	.word	0x0a6c6c75
   80e44:	0000000d 	.word	0x0000000d

00080e48 <_global_impure_ptr>:
   80e48:	20000008                                ... 

00080e4c <_init>:
   80e4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   80e4e:	bf00      	nop
   80e50:	bcf8      	pop	{r3, r4, r5, r6, r7}
   80e52:	bc08      	pop	{r3}
   80e54:	469e      	mov	lr, r3
   80e56:	4770      	bx	lr

00080e58 <__init_array_start>:
   80e58:	00080bdd 	.word	0x00080bdd

00080e5c <__frame_dummy_init_array_entry>:
   80e5c:	00080119                                ....

00080e60 <_fini>:
   80e60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   80e62:	bf00      	nop
   80e64:	bcf8      	pop	{r3, r4, r5, r6, r7}
   80e66:	bc08      	pop	{r3}
   80e68:	469e      	mov	lr, r3
   80e6a:	4770      	bx	lr

00080e6c <__fini_array_start>:
   80e6c:	000800f5 	.word	0x000800f5
