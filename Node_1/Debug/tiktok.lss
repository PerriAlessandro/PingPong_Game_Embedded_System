
tiktok.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000026e  00800100  00001c62  00001cf6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001c62  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000030  0080036e  0080036e  00001f64  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001f64  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001fc0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000218  00000000  00000000  00001ffc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002c33  00000000  00000000  00002214  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a1d  00000000  00000000  00004e47  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000130e  00000000  00000000  00005864  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000688  00000000  00000000  00006b74  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000984  00000000  00000000  000071fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001333  00000000  00000000  00007b80  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000238  00000000  00000000  00008eb3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
       4:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	08 1c       	adc	r0, r8
     152:	36 63       	ori	r19, 0x36	; 54
     154:	41 00       	.word	0x0041	; ????
     156:	00 00       	nop
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	00 41       	sbci	r16, 0x10	; 16
     162:	63 36       	cpi	r22, 0x63	; 99
     164:	1c 08       	sbc	r1, r12
     166:	00 00       	nop
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	7c 7e       	andi	r23, 0xEC	; 236
     17a:	13 13       	cpse	r17, r19
     17c:	7e 7c       	andi	r23, 0xCE	; 206
     17e:	00 00       	nop
     180:	41 7f       	andi	r20, 0xF1	; 241
     182:	7f 49       	sbci	r23, 0x9F	; 159
     184:	49 7f       	andi	r20, 0xF9	; 249
     186:	36 00       	.word	0x0036	; ????
     188:	1c 3e       	cpi	r17, 0xEC	; 236
     18a:	63 41       	sbci	r22, 0x13	; 19
     18c:	41 63       	ori	r20, 0x31	; 49
     18e:	22 00       	.word	0x0022	; ????
     190:	41 7f       	andi	r20, 0xF1	; 241
     192:	7f 41       	sbci	r23, 0x1F	; 31
     194:	63 7f       	andi	r22, 0xF3	; 243
     196:	1c 00       	.word	0x001c	; ????
     198:	41 7f       	andi	r20, 0xF1	; 241
     19a:	7f 49       	sbci	r23, 0x9F	; 159
     19c:	5d 41       	sbci	r21, 0x1D	; 29
     19e:	63 00       	.word	0x0063	; ????
     1a0:	41 7f       	andi	r20, 0xF1	; 241
     1a2:	7f 49       	sbci	r23, 0x9F	; 159
     1a4:	1d 01       	movw	r2, r26
     1a6:	03 00       	.word	0x0003	; ????
     1a8:	1c 3e       	cpi	r17, 0xEC	; 236
     1aa:	63 41       	sbci	r22, 0x13	; 19
     1ac:	51 73       	andi	r21, 0x31	; 49
     1ae:	72 00       	.word	0x0072	; ????
     1b0:	7f 7f       	andi	r23, 0xFF	; 255
     1b2:	08 08       	sbc	r0, r8
     1b4:	7f 7f       	andi	r23, 0xFF	; 255
     1b6:	00 00       	nop
     1b8:	00 41       	sbci	r16, 0x10	; 16
     1ba:	7f 7f       	andi	r23, 0xFF	; 255
     1bc:	41 00       	.word	0x0041	; ????
     1be:	00 00       	nop
     1c0:	30 70       	andi	r19, 0x00	; 0
     1c2:	40 41       	sbci	r20, 0x10	; 16
     1c4:	7f 3f       	cpi	r23, 0xFF	; 255
     1c6:	01 00       	.word	0x0001	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 08       	sbc	r7, r15
     1cc:	1c 77       	andi	r17, 0x7C	; 124
     1ce:	63 00       	.word	0x0063	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 41       	sbci	r23, 0x1F	; 31
     1d4:	40 60       	ori	r20, 0x00	; 0
     1d6:	70 00       	.word	0x0070	; ????
     1d8:	7f 7f       	andi	r23, 0xFF	; 255
     1da:	06 0c       	add	r0, r6
     1dc:	06 7f       	andi	r16, 0xF6	; 246
     1de:	7f 00       	.word	0x007f	; ????
     1e0:	7f 7f       	andi	r23, 0xFF	; 255
     1e2:	06 0c       	add	r0, r6
     1e4:	18 7f       	andi	r17, 0xF8	; 248
     1e6:	7f 00       	.word	0x007f	; ????
     1e8:	1c 3e       	cpi	r17, 0xEC	; 236
     1ea:	63 41       	sbci	r22, 0x13	; 19
     1ec:	63 3e       	cpi	r22, 0xE3	; 227
     1ee:	1c 00       	.word	0x001c	; ????
     1f0:	41 7f       	andi	r20, 0xF1	; 241
     1f2:	7f 49       	sbci	r23, 0x9F	; 159
     1f4:	09 0f       	add	r16, r25
     1f6:	06 00       	.word	0x0006	; ????
     1f8:	1e 3f       	cpi	r17, 0xFE	; 254
     1fa:	21 71       	andi	r18, 0x11	; 17
     1fc:	7f 5e       	subi	r23, 0xEF	; 239
     1fe:	00 00       	nop
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 19       	sub	r23, r15
     204:	39 6f       	ori	r19, 0xF9	; 249
     206:	46 00       	.word	0x0046	; ????
     208:	26 67       	ori	r18, 0x76	; 118
     20a:	4d 59       	subi	r20, 0x9D	; 157
     20c:	7b 32       	cpi	r23, 0x2B	; 43
     20e:	00 00       	nop
     210:	03 41       	sbci	r16, 0x13	; 19
     212:	7f 7f       	andi	r23, 0xFF	; 255
     214:	41 03       	mulsu	r20, r17
     216:	00 00       	nop
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	7f 7f       	andi	r23, 0xFF	; 255
     21e:	00 00       	nop
     220:	1f 3f       	cpi	r17, 0xFF	; 255
     222:	60 60       	ori	r22, 0x00	; 0
     224:	3f 1f       	adc	r19, r31
     226:	00 00       	nop
     228:	7f 7f       	andi	r23, 0xFF	; 255
     22a:	30 18       	sub	r3, r0
     22c:	30 7f       	andi	r19, 0xF0	; 240
     22e:	7f 00       	.word	0x007f	; ????
     230:	63 77       	andi	r22, 0x73	; 115
     232:	1c 08       	sbc	r1, r12
     234:	1c 77       	andi	r17, 0x7C	; 124
     236:	63 00       	.word	0x0063	; ????
     238:	07 4f       	sbci	r16, 0xF7	; 247
     23a:	78 78       	andi	r23, 0x88	; 136
     23c:	4f 07       	cpc	r20, r31
     23e:	00 00       	nop
     240:	67 73       	andi	r22, 0x37	; 55
     242:	59 4d       	sbci	r21, 0xD9	; 217
     244:	47 63       	ori	r20, 0x37	; 55
     246:	71 00       	.word	0x0071	; ????
     248:	00 7f       	andi	r16, 0xF0	; 240
     24a:	7f 41       	sbci	r23, 0x1F	; 31
     24c:	41 00       	.word	0x0041	; ????
     24e:	00 00       	nop
     250:	01 03       	mulsu	r16, r17
     252:	06 0c       	add	r0, r6
     254:	18 30       	cpi	r17, 0x08	; 8
     256:	60 00       	.word	0x0060	; ????
     258:	00 41       	sbci	r16, 0x10	; 16
     25a:	41 7f       	andi	r20, 0xF1	; 241
     25c:	7f 00       	.word	0x007f	; ????
     25e:	00 00       	nop
     260:	08 0c       	add	r0, r8
     262:	06 03       	mulsu	r16, r22
     264:	06 0c       	add	r0, r6
     266:	08 00       	.word	0x0008	; ????
     268:	80 80       	ld	r8, Z
     26a:	80 80       	ld	r8, Z
     26c:	80 80       	ld	r8, Z
     26e:	80 80       	ld	r8, Z
     270:	00 00       	nop
     272:	03 07       	cpc	r16, r19
     274:	04 00       	.word	0x0004	; ????
     276:	00 00       	nop
     278:	20 74       	andi	r18, 0x40	; 64
     27a:	54 54       	subi	r21, 0x44	; 68
     27c:	3c 78       	andi	r19, 0x8C	; 140
     27e:	40 00       	.word	0x0040	; ????
     280:	41 3f       	cpi	r20, 0xF1	; 241
     282:	7f 44       	sbci	r23, 0x4F	; 79
     284:	44 7c       	andi	r20, 0xC4	; 196
     286:	38 00       	.word	0x0038	; ????
     288:	38 7c       	andi	r19, 0xC8	; 200
     28a:	44 44       	sbci	r20, 0x44	; 68
     28c:	6c 28       	or	r6, r12
     28e:	00 00       	nop
     290:	30 78       	andi	r19, 0x80	; 128
     292:	48 49       	sbci	r20, 0x98	; 152
     294:	3f 7f       	andi	r19, 0xFF	; 255
     296:	40 00       	.word	0x0040	; ????
     298:	38 7c       	andi	r19, 0xC8	; 200
     29a:	54 54       	subi	r21, 0x44	; 68
     29c:	5c 18       	sub	r5, r12
     29e:	00 00       	nop
     2a0:	48 7e       	andi	r20, 0xE8	; 232
     2a2:	7f 49       	sbci	r23, 0x9F	; 159
     2a4:	03 02       	muls	r16, r19
     2a6:	00 00       	nop
     2a8:	98 bc       	out	0x28, r9	; 40
     2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2ac:	f8 7c       	andi	r31, 0xC8	; 200
     2ae:	04 00       	.word	0x0004	; ????
     2b0:	41 7f       	andi	r20, 0xF1	; 241
     2b2:	7f 08       	sbc	r7, r15
     2b4:	04 7c       	andi	r16, 0xC4	; 196
     2b6:	78 00       	.word	0x0078	; ????
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	7d 7d       	andi	r23, 0xDD	; 221
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <OLED_print_char+0x18>
     2c2:	84 fd       	sbrc	r24, 4
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
     368:	11 24       	eor	r1, r1
     36a:	1f be       	out	0x3f, r1	; 63
     36c:	cf ef       	ldi	r28, 0xFF	; 255
     36e:	d4 e0       	ldi	r29, 0x04	; 4
     370:	de bf       	out	0x3e, r29	; 62
     372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
     374:	13 e0       	ldi	r17, 0x03	; 3
     376:	a0 e0       	ldi	r26, 0x00	; 0
     378:	b1 e0       	ldi	r27, 0x01	; 1
     37a:	e2 e6       	ldi	r30, 0x62	; 98
     37c:	fc e1       	ldi	r31, 0x1C	; 28
     37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
     380:	05 90       	lpm	r0, Z+
     382:	0d 92       	st	X+, r0
     384:	ae 36       	cpi	r26, 0x6E	; 110
     386:	b1 07       	cpc	r27, r17
     388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
     38a:	23 e0       	ldi	r18, 0x03	; 3
     38c:	ae e6       	ldi	r26, 0x6E	; 110
     38e:	b3 e0       	ldi	r27, 0x03	; 3
     390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
     392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
     394:	ae 39       	cpi	r26, 0x9E	; 158
     396:	b2 07       	cpc	r27, r18
     398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
     39a:	0e 94 2b 09 	call	0x1256	; 0x1256 <main>
     39e:	0c 94 2f 0e 	jmp	0x1c5e	; 0x1c5e <_exit>

000003a2 <__bad_interrupt>:
     3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <uart_receive>:
	slider_pos_msg.data[0] =slider.left;
	slider_pos_msg.data[1] =slider.right;
	slider_pos_msg.data[2] =button;
	
	CAN_transmit(&slider_pos_msg,0);
     3a6:	5f 9b       	sbis	0x0b, 7	; 11
     3a8:	03 c0       	rjmp	.+6      	; 0x3b0 <uart_receive+0xa>
     3aa:	8c b1       	in	r24, 0x0c	; 12
     3ac:	90 e0       	ldi	r25, 0x00	; 0
     3ae:	08 95       	ret
     3b0:	80 e0       	ldi	r24, 0x00	; 0
     3b2:	90 e0       	ldi	r25, 0x00	; 0
     3b4:	08 95       	ret

000003b6 <usart_putchar>:
     3b6:	5d 9b       	sbis	0x0b, 5	; 11
     3b8:	fe cf       	rjmp	.-4      	; 0x3b6 <usart_putchar>
     3ba:	8c b9       	out	0x0c, r24	; 12
     3bc:	08 95       	ret

000003be <usart_putchar_printf>:
     3be:	cf 93       	push	r28
     3c0:	c8 2f       	mov	r28, r24
     3c2:	8a 30       	cpi	r24, 0x0A	; 10
     3c4:	21 f4       	brne	.+8      	; 0x3ce <usart_putchar_printf+0x10>
     3c6:	8d e0       	ldi	r24, 0x0D	; 13
     3c8:	90 e0       	ldi	r25, 0x00	; 0
     3ca:	0e 94 db 01 	call	0x3b6	; 0x3b6 <usart_putchar>
     3ce:	8c 2f       	mov	r24, r28
     3d0:	90 e0       	ldi	r25, 0x00	; 0
     3d2:	0e 94 db 01 	call	0x3b6	; 0x3b6 <usart_putchar>
     3d6:	80 e0       	ldi	r24, 0x00	; 0
     3d8:	90 e0       	ldi	r25, 0x00	; 0
     3da:	cf 91       	pop	r28
     3dc:	08 95       	ret

000003de <uart_init>:
     3de:	10 bc       	out	0x20, r1	; 32
     3e0:	8f e1       	ldi	r24, 0x1F	; 31
     3e2:	89 b9       	out	0x09, r24	; 9
     3e4:	88 e1       	ldi	r24, 0x18	; 24
     3e6:	8a b9       	out	0x0a, r24	; 10
     3e8:	8e e8       	ldi	r24, 0x8E	; 142
     3ea:	80 bd       	out	0x20, r24	; 32
     3ec:	63 ed       	ldi	r22, 0xD3	; 211
     3ee:	71 e0       	ldi	r23, 0x01	; 1
     3f0:	8f ed       	ldi	r24, 0xDF	; 223
     3f2:	91 e0       	ldi	r25, 0x01	; 1
     3f4:	0e 94 91 0a 	call	0x1522	; 0x1522 <fdevopen>
     3f8:	08 95       	ret

000003fa <xmem_init>:
     3fa:	85 b7       	in	r24, 0x35	; 53
     3fc:	80 68       	ori	r24, 0x80	; 128
     3fe:	85 bf       	out	0x35, r24	; 53
     400:	80 b7       	in	r24, 0x30	; 48
     402:	80 62       	ori	r24, 0x20	; 32
     404:	80 bf       	out	0x30, r24	; 48
     406:	08 95       	ret

00000408 <xmem_write>:
     408:	fa 01       	movw	r30, r20
     40a:	e6 0f       	add	r30, r22
     40c:	f7 1f       	adc	r31, r23
     40e:	80 83       	st	Z, r24
     410:	08 95       	ret

00000412 <xmem_read>:
     412:	86 0f       	add	r24, r22
     414:	97 1f       	adc	r25, r23
     416:	fc 01       	movw	r30, r24
     418:	80 81       	ld	r24, Z
     41a:	08 95       	ret

0000041c <PWM_init>:
     41c:	81 b3       	in	r24, 0x11	; 17
     41e:	80 61       	ori	r24, 0x10	; 16
     420:	81 bb       	out	0x11, r24	; 17
     422:	eb e8       	ldi	r30, 0x8B	; 139
     424:	f0 e0       	ldi	r31, 0x00	; 0
     426:	80 81       	ld	r24, Z
     428:	80 64       	ori	r24, 0x40	; 64
     42a:	80 83       	st	Z, r24
     42c:	ea e8       	ldi	r30, 0x8A	; 138
     42e:	f0 e0       	ldi	r31, 0x00	; 0
     430:	80 81       	ld	r24, Z
     432:	89 60       	ori	r24, 0x09	; 9
     434:	80 83       	st	Z, r24
     436:	10 92 87 00 	sts	0x0087, r1	; 0x800087 <__TEXT_REGION_LENGTH__+0x7fc087>
     43a:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <__TEXT_REGION_LENGTH__+0x7fc086>
     43e:	08 95       	ret

00000440 <ADC_init_read>:
     440:	40 e0       	ldi	r20, 0x00	; 0
     442:	54 e1       	ldi	r21, 0x14	; 20
     444:	61 e0       	ldi	r22, 0x01	; 1
     446:	70 e0       	ldi	r23, 0x00	; 0
     448:	80 e8       	ldi	r24, 0x80	; 128
     44a:	0e 94 04 02 	call	0x408	; 0x408 <xmem_write>
     44e:	08 95       	ret

00000450 <SPI_MasterInit>:
     450:	80 eb       	ldi	r24, 0xB0	; 176
     452:	87 bb       	out	0x17, r24	; 23
     454:	81 e5       	ldi	r24, 0x51	; 81
     456:	8d b9       	out	0x0d, r24	; 13
     458:	08 95       	ret

0000045a <SPI_MasterTransmit>:
     45a:	8f b9       	out	0x0f, r24	; 15
     45c:	77 9b       	sbis	0x0e, 7	; 14
     45e:	fe cf       	rjmp	.-4      	; 0x45c <SPI_MasterTransmit+0x2>
     460:	8f b1       	in	r24, 0x0f	; 15
     462:	08 95       	ret

00000464 <MCP2515_activate_slave>:
     464:	88 b3       	in	r24, 0x18	; 24
     466:	8f 7e       	andi	r24, 0xEF	; 239
     468:	88 bb       	out	0x18, r24	; 24
     46a:	08 95       	ret

0000046c <MCP2515_deactivate_slave>:
     46c:	88 b3       	in	r24, 0x18	; 24
     46e:	80 61       	ori	r24, 0x10	; 16
     470:	88 bb       	out	0x18, r24	; 24
     472:	08 95       	ret

00000474 <MCP2515_reset>:
     474:	0e 94 32 02 	call	0x464	; 0x464 <MCP2515_activate_slave>
     478:	80 ec       	ldi	r24, 0xC0	; 192
     47a:	0e 94 2d 02 	call	0x45a	; 0x45a <SPI_MasterTransmit>
     47e:	0e 94 36 02 	call	0x46c	; 0x46c <MCP2515_deactivate_slave>
     482:	08 95       	ret

00000484 <MCP2515_read>:
     484:	cf 93       	push	r28
     486:	c8 2f       	mov	r28, r24
     488:	0e 94 32 02 	call	0x464	; 0x464 <MCP2515_activate_slave>
     48c:	83 e0       	ldi	r24, 0x03	; 3
     48e:	0e 94 2d 02 	call	0x45a	; 0x45a <SPI_MasterTransmit>
     492:	8c 2f       	mov	r24, r28
     494:	0e 94 2d 02 	call	0x45a	; 0x45a <SPI_MasterTransmit>
     498:	80 e0       	ldi	r24, 0x00	; 0
     49a:	0e 94 2d 02 	call	0x45a	; 0x45a <SPI_MasterTransmit>
     49e:	c8 2f       	mov	r28, r24
     4a0:	0e 94 36 02 	call	0x46c	; 0x46c <MCP2515_deactivate_slave>
     4a4:	8c 2f       	mov	r24, r28
     4a6:	cf 91       	pop	r28
     4a8:	08 95       	ret

000004aa <MCP2515_write>:
     4aa:	cf 93       	push	r28
     4ac:	df 93       	push	r29
     4ae:	d8 2f       	mov	r29, r24
     4b0:	c6 2f       	mov	r28, r22
     4b2:	0e 94 32 02 	call	0x464	; 0x464 <MCP2515_activate_slave>
     4b6:	82 e0       	ldi	r24, 0x02	; 2
     4b8:	0e 94 2d 02 	call	0x45a	; 0x45a <SPI_MasterTransmit>
     4bc:	8d 2f       	mov	r24, r29
     4be:	0e 94 2d 02 	call	0x45a	; 0x45a <SPI_MasterTransmit>
     4c2:	8c 2f       	mov	r24, r28
     4c4:	0e 94 2d 02 	call	0x45a	; 0x45a <SPI_MasterTransmit>
     4c8:	0e 94 36 02 	call	0x46c	; 0x46c <MCP2515_deactivate_slave>
     4cc:	df 91       	pop	r29
     4ce:	cf 91       	pop	r28
     4d0:	08 95       	ret

000004d2 <MCP2515_request_to_send>:
     4d2:	cf 93       	push	r28
     4d4:	c8 2f       	mov	r28, r24
     4d6:	0e 94 32 02 	call	0x464	; 0x464 <MCP2515_activate_slave>
     4da:	8c 2f       	mov	r24, r28
     4dc:	0e 94 2d 02 	call	0x45a	; 0x45a <SPI_MasterTransmit>
     4e0:	0e 94 36 02 	call	0x46c	; 0x46c <MCP2515_deactivate_slave>
     4e4:	cf 91       	pop	r28
     4e6:	08 95       	ret

000004e8 <MCP2515_bit_modify>:
     4e8:	1f 93       	push	r17
     4ea:	cf 93       	push	r28
     4ec:	df 93       	push	r29
     4ee:	18 2f       	mov	r17, r24
     4f0:	d6 2f       	mov	r29, r22
     4f2:	c4 2f       	mov	r28, r20
     4f4:	0e 94 32 02 	call	0x464	; 0x464 <MCP2515_activate_slave>
     4f8:	85 e0       	ldi	r24, 0x05	; 5
     4fa:	0e 94 2d 02 	call	0x45a	; 0x45a <SPI_MasterTransmit>
     4fe:	81 2f       	mov	r24, r17
     500:	0e 94 2d 02 	call	0x45a	; 0x45a <SPI_MasterTransmit>
     504:	8d 2f       	mov	r24, r29
     506:	0e 94 2d 02 	call	0x45a	; 0x45a <SPI_MasterTransmit>
     50a:	8c 2f       	mov	r24, r28
     50c:	0e 94 2d 02 	call	0x45a	; 0x45a <SPI_MasterTransmit>
     510:	0e 94 36 02 	call	0x46c	; 0x46c <MCP2515_deactivate_slave>
     514:	df 91       	pop	r29
     516:	cf 91       	pop	r28
     518:	1f 91       	pop	r17
     51a:	08 95       	ret

0000051c <MCP2515_init>:
     51c:	0e 94 28 02 	call	0x450	; 0x450 <SPI_MasterInit>
     520:	0e 94 3a 02 	call	0x474	; 0x474 <MCP2515_reset>
     524:	40 e8       	ldi	r20, 0x80	; 128
     526:	60 ee       	ldi	r22, 0xE0	; 224
     528:	8f e0       	ldi	r24, 0x0F	; 15
     52a:	0e 94 74 02 	call	0x4e8	; 0x4e8 <MCP2515_bit_modify>
     52e:	8e e0       	ldi	r24, 0x0E	; 14
     530:	0e 94 42 02 	call	0x484	; 0x484 <MCP2515_read>
     534:	80 7e       	andi	r24, 0xE0	; 224
     536:	80 38       	cpi	r24, 0x80	; 128
     538:	31 f0       	breq	.+12     	; 0x546 <MCP2515_init+0x2a>
     53a:	89 ef       	ldi	r24, 0xF9	; 249
     53c:	91 e0       	ldi	r25, 0x01	; 1
     53e:	0e 94 f2 0a 	call	0x15e4	; 0x15e4 <puts>
     542:	81 e0       	ldi	r24, 0x01	; 1
     544:	08 95       	ret
     546:	45 e0       	ldi	r20, 0x05	; 5
     548:	6f ef       	ldi	r22, 0xFF	; 255
     54a:	88 e2       	ldi	r24, 0x28	; 40
     54c:	0e 94 74 02 	call	0x4e8	; 0x4e8 <MCP2515_bit_modify>
     550:	41 eb       	ldi	r20, 0xB1	; 177
     552:	6f ef       	ldi	r22, 0xFF	; 255
     554:	89 e2       	ldi	r24, 0x29	; 41
     556:	0e 94 74 02 	call	0x4e8	; 0x4e8 <MCP2515_bit_modify>
     55a:	43 e0       	ldi	r20, 0x03	; 3
     55c:	6f ef       	ldi	r22, 0xFF	; 255
     55e:	8a e2       	ldi	r24, 0x2A	; 42
     560:	0e 94 74 02 	call	0x4e8	; 0x4e8 <MCP2515_bit_modify>
     564:	40 e0       	ldi	r20, 0x00	; 0
     566:	60 ee       	ldi	r22, 0xE0	; 224
     568:	8f e0       	ldi	r24, 0x0F	; 15
     56a:	0e 94 74 02 	call	0x4e8	; 0x4e8 <MCP2515_bit_modify>
     56e:	43 e0       	ldi	r20, 0x03	; 3
     570:	63 e0       	ldi	r22, 0x03	; 3
     572:	8b e2       	ldi	r24, 0x2B	; 43
     574:	0e 94 74 02 	call	0x4e8	; 0x4e8 <MCP2515_bit_modify>
     578:	80 e0       	ldi	r24, 0x00	; 0
     57a:	08 95       	ret

0000057c <set_msg_id>:
     57c:	fc 01       	movw	r30, r24
     57e:	71 83       	std	Z+1, r23	; 0x01
     580:	60 83       	st	Z, r22
     582:	08 95       	ret

00000584 <set_msg_length>:
     584:	fc 01       	movw	r30, r24
     586:	62 83       	std	Z+2, r22	; 0x02
     588:	08 95       	ret

0000058a <CAN_transmit>:
     58a:	cf 92       	push	r12
     58c:	df 92       	push	r13
     58e:	ef 92       	push	r14
     590:	ff 92       	push	r15
     592:	0f 93       	push	r16
     594:	1f 93       	push	r17
     596:	cf 93       	push	r28
     598:	df 93       	push	r29
     59a:	7c 01       	movw	r14, r24
     59c:	fc 01       	movw	r30, r24
     59e:	80 81       	ld	r24, Z
     5a0:	91 81       	ldd	r25, Z+1	; 0x01
     5a2:	c8 2f       	mov	r28, r24
     5a4:	c2 95       	swap	r28
     5a6:	cc 0f       	add	r28, r28
     5a8:	c0 7e       	andi	r28, 0xE0	; 224
     5aa:	9c 01       	movw	r18, r24
     5ac:	36 95       	lsr	r19
     5ae:	27 95       	ror	r18
     5b0:	36 95       	lsr	r19
     5b2:	27 95       	ror	r18
     5b4:	36 95       	lsr	r19
     5b6:	27 95       	ror	r18
     5b8:	12 81       	ldd	r17, Z+2	; 0x02
     5ba:	66 23       	and	r22, r22
     5bc:	71 f0       	breq	.+28     	; 0x5da <CAN_transmit+0x50>
     5be:	61 30       	cpi	r22, 0x01	; 1
     5c0:	c1 f4       	brne	.+48     	; 0x5f2 <CAN_transmit+0x68>
     5c2:	0f 2e       	mov	r0, r31
     5c4:	f2 e8       	ldi	r31, 0x82	; 130
     5c6:	df 2e       	mov	r13, r31
     5c8:	f0 2d       	mov	r31, r0
     5ca:	06 e4       	ldi	r16, 0x46	; 70
     5cc:	d5 e4       	ldi	r29, 0x45	; 69
     5ce:	0f 2e       	mov	r0, r31
     5d0:	f2 e4       	ldi	r31, 0x42	; 66
     5d2:	cf 2e       	mov	r12, r31
     5d4:	f0 2d       	mov	r31, r0
     5d6:	81 e4       	ldi	r24, 0x41	; 65
     5d8:	17 c0       	rjmp	.+46     	; 0x608 <CAN_transmit+0x7e>
     5da:	0f 2e       	mov	r0, r31
     5dc:	f1 e8       	ldi	r31, 0x81	; 129
     5de:	df 2e       	mov	r13, r31
     5e0:	f0 2d       	mov	r31, r0
     5e2:	06 e3       	ldi	r16, 0x36	; 54
     5e4:	d5 e3       	ldi	r29, 0x35	; 53
     5e6:	0f 2e       	mov	r0, r31
     5e8:	f2 e3       	ldi	r31, 0x32	; 50
     5ea:	cf 2e       	mov	r12, r31
     5ec:	f0 2d       	mov	r31, r0
     5ee:	81 e3       	ldi	r24, 0x31	; 49
     5f0:	0b c0       	rjmp	.+22     	; 0x608 <CAN_transmit+0x7e>
     5f2:	0f 2e       	mov	r0, r31
     5f4:	f4 e8       	ldi	r31, 0x84	; 132
     5f6:	df 2e       	mov	r13, r31
     5f8:	f0 2d       	mov	r31, r0
     5fa:	06 e5       	ldi	r16, 0x56	; 86
     5fc:	d5 e5       	ldi	r29, 0x55	; 85
     5fe:	0f 2e       	mov	r0, r31
     600:	f2 e5       	ldi	r31, 0x52	; 82
     602:	cf 2e       	mov	r12, r31
     604:	f0 2d       	mov	r31, r0
     606:	81 e5       	ldi	r24, 0x51	; 81
     608:	62 2f       	mov	r22, r18
     60a:	0e 94 55 02 	call	0x4aa	; 0x4aa <MCP2515_write>
     60e:	6c 2f       	mov	r22, r28
     610:	8c 2d       	mov	r24, r12
     612:	0e 94 55 02 	call	0x4aa	; 0x4aa <MCP2515_write>
     616:	61 2f       	mov	r22, r17
     618:	8d 2f       	mov	r24, r29
     61a:	0e 94 55 02 	call	0x4aa	; 0x4aa <MCP2515_write>
     61e:	c0 e0       	ldi	r28, 0x00	; 0
     620:	d0 e0       	ldi	r29, 0x00	; 0
     622:	09 c0       	rjmp	.+18     	; 0x636 <CAN_transmit+0xac>
     624:	f7 01       	movw	r30, r14
     626:	ec 0f       	add	r30, r28
     628:	fd 1f       	adc	r31, r29
     62a:	63 81       	ldd	r22, Z+3	; 0x03
     62c:	8c 2f       	mov	r24, r28
     62e:	80 0f       	add	r24, r16
     630:	0e 94 55 02 	call	0x4aa	; 0x4aa <MCP2515_write>
     634:	21 96       	adiw	r28, 0x01	; 1
     636:	81 2f       	mov	r24, r17
     638:	90 e0       	ldi	r25, 0x00	; 0
     63a:	c8 17       	cp	r28, r24
     63c:	d9 07       	cpc	r29, r25
     63e:	94 f3       	brlt	.-28     	; 0x624 <CAN_transmit+0x9a>
     640:	8d 2d       	mov	r24, r13
     642:	0e 94 69 02 	call	0x4d2	; 0x4d2 <MCP2515_request_to_send>
     646:	df 91       	pop	r29
     648:	cf 91       	pop	r28
     64a:	1f 91       	pop	r17
     64c:	0f 91       	pop	r16
     64e:	ff 90       	pop	r15
     650:	ef 90       	pop	r14
     652:	df 90       	pop	r13
     654:	cf 90       	pop	r12
     656:	08 95       	ret

00000658 <CAN_receive>:
     658:	ef 92       	push	r14
     65a:	ff 92       	push	r15
     65c:	0f 93       	push	r16
     65e:	1f 93       	push	r17
     660:	cf 93       	push	r28
     662:	7c 01       	movw	r14, r24
     664:	8c e2       	ldi	r24, 0x2C	; 44
     666:	0e 94 42 02 	call	0x484	; 0x484 <MCP2515_read>
     66a:	c8 2f       	mov	r28, r24
     66c:	c2 70       	andi	r28, 0x02	; 2
     66e:	81 ff       	sbrs	r24, 1
     670:	05 c0       	rjmp	.+10     	; 0x67c <CAN_receive+0x24>
     672:	40 e0       	ldi	r20, 0x00	; 0
     674:	62 e0       	ldi	r22, 0x02	; 2
     676:	8c e2       	ldi	r24, 0x2C	; 44
     678:	0e 94 74 02 	call	0x4e8	; 0x4e8 <MCP2515_bit_modify>
     67c:	cc 23       	and	r28, r28
     67e:	61 f1       	breq	.+88     	; 0x6d8 <CAN_receive+0x80>
     680:	81 e7       	ldi	r24, 0x71	; 113
     682:	0e 94 42 02 	call	0x484	; 0x484 <MCP2515_read>
     686:	c8 2f       	mov	r28, r24
     688:	cc 0f       	add	r28, r28
     68a:	cc 0f       	add	r28, r28
     68c:	cc 0f       	add	r28, r28
     68e:	82 e7       	ldi	r24, 0x72	; 114
     690:	0e 94 42 02 	call	0x484	; 0x484 <MCP2515_read>
     694:	82 95       	swap	r24
     696:	86 95       	lsr	r24
     698:	87 70       	andi	r24, 0x07	; 7
     69a:	8c 2b       	or	r24, r28
     69c:	68 2f       	mov	r22, r24
     69e:	70 e0       	ldi	r23, 0x00	; 0
     6a0:	c7 01       	movw	r24, r14
     6a2:	0e 94 be 02 	call	0x57c	; 0x57c <set_msg_id>
     6a6:	85 e7       	ldi	r24, 0x75	; 117
     6a8:	0e 94 42 02 	call	0x484	; 0x484 <MCP2515_read>
     6ac:	68 2f       	mov	r22, r24
     6ae:	6f 70       	andi	r22, 0x0F	; 15
     6b0:	c7 01       	movw	r24, r14
     6b2:	0e 94 c2 02 	call	0x584	; 0x584 <set_msg_length>
     6b6:	c0 e0       	ldi	r28, 0x00	; 0
     6b8:	0b c0       	rjmp	.+22     	; 0x6d0 <CAN_receive+0x78>
     6ba:	0c 2f       	mov	r16, r28
     6bc:	10 e0       	ldi	r17, 0x00	; 0
     6be:	86 e7       	ldi	r24, 0x76	; 118
     6c0:	8c 0f       	add	r24, r28
     6c2:	0e 94 42 02 	call	0x484	; 0x484 <MCP2515_read>
     6c6:	f7 01       	movw	r30, r14
     6c8:	e0 0f       	add	r30, r16
     6ca:	f1 1f       	adc	r31, r17
     6cc:	83 83       	std	Z+3, r24	; 0x03
     6ce:	cf 5f       	subi	r28, 0xFF	; 255
     6d0:	f7 01       	movw	r30, r14
     6d2:	82 81       	ldd	r24, Z+2	; 0x02
     6d4:	c8 17       	cp	r28, r24
     6d6:	88 f3       	brcs	.-30     	; 0x6ba <CAN_receive+0x62>
     6d8:	cf 91       	pop	r28
     6da:	1f 91       	pop	r17
     6dc:	0f 91       	pop	r16
     6de:	ff 90       	pop	r15
     6e0:	ef 90       	pop	r14
     6e2:	08 95       	ret

000006e4 <get_joypos>:
     6e4:	0f 93       	push	r16
     6e6:	1f 93       	push	r17
     6e8:	cf 93       	push	r28
     6ea:	df 93       	push	r29
     6ec:	00 d0       	rcall	.+0      	; 0x6ee <get_joypos+0xa>
     6ee:	00 d0       	rcall	.+0      	; 0x6f0 <get_joypos+0xc>
     6f0:	00 d0       	rcall	.+0      	; 0x6f2 <get_joypos+0xe>
     6f2:	cd b7       	in	r28, 0x3d	; 61
     6f4:	de b7       	in	r29, 0x3e	; 62
     6f6:	0e 94 20 02 	call	0x440	; 0x440 <ADC_init_read>
     6fa:	60 e0       	ldi	r22, 0x00	; 0
     6fc:	74 e1       	ldi	r23, 0x14	; 20
     6fe:	80 e0       	ldi	r24, 0x00	; 0
     700:	90 e0       	ldi	r25, 0x00	; 0
     702:	0e 94 09 02 	call	0x412	; 0x412 <xmem_read>
     706:	07 e8       	ldi	r16, 0x87	; 135
     708:	13 e0       	ldi	r17, 0x03	; 3
     70a:	f8 01       	movw	r30, r16
     70c:	80 83       	st	Z, r24
     70e:	60 e0       	ldi	r22, 0x00	; 0
     710:	74 e1       	ldi	r23, 0x14	; 20
     712:	80 e0       	ldi	r24, 0x00	; 0
     714:	90 e0       	ldi	r25, 0x00	; 0
     716:	0e 94 09 02 	call	0x412	; 0x412 <xmem_read>
     71a:	f8 01       	movw	r30, r16
     71c:	81 83       	std	Z+1, r24	; 0x01
     71e:	60 e0       	ldi	r22, 0x00	; 0
     720:	74 e1       	ldi	r23, 0x14	; 20
     722:	80 e0       	ldi	r24, 0x00	; 0
     724:	90 e0       	ldi	r25, 0x00	; 0
     726:	0e 94 09 02 	call	0x412	; 0x412 <xmem_read>
     72a:	60 e0       	ldi	r22, 0x00	; 0
     72c:	74 e1       	ldi	r23, 0x14	; 20
     72e:	80 e0       	ldi	r24, 0x00	; 0
     730:	90 e0       	ldi	r25, 0x00	; 0
     732:	0e 94 09 02 	call	0x412	; 0x412 <xmem_read>
     736:	81 ee       	ldi	r24, 0xE1	; 225
     738:	94 e0       	ldi	r25, 0x04	; 4
     73a:	01 97       	sbiw	r24, 0x01	; 1
     73c:	f1 f7       	brne	.-4      	; 0x73a <get_joypos+0x56>
     73e:	00 c0       	rjmp	.+0      	; 0x740 <get_joypos+0x5c>
     740:	00 00       	nop
     742:	f8 01       	movw	r30, r16
     744:	80 81       	ld	r24, Z
     746:	9f e5       	ldi	r25, 0x5F	; 95
     748:	98 0f       	add	r25, r24
     74a:	9e 30       	cpi	r25, 0x0E	; 14
     74c:	30 f4       	brcc	.+12     	; 0x75a <get_joypos+0x76>
     74e:	10 82       	st	Z, r1
     750:	85 e8       	ldi	r24, 0x85	; 133
     752:	92 e0       	ldi	r25, 0x02	; 2
     754:	93 83       	std	Z+3, r25	; 0x03
     756:	82 83       	std	Z+2, r24	; 0x02
     758:	32 c0       	rjmp	.+100    	; 0x7be <get_joypos+0xda>
     75a:	80 3a       	cpi	r24, 0xA0	; 160
     75c:	88 f4       	brcc	.+34     	; 0x780 <get_joypos+0x9c>
     75e:	f4 e6       	ldi	r31, 0x64	; 100
     760:	8f 9f       	mul	r24, r31
     762:	c0 01       	movw	r24, r0
     764:	11 24       	eor	r1, r1
     766:	66 ea       	ldi	r22, 0xA6	; 166
     768:	70 e0       	ldi	r23, 0x00	; 0
     76a:	0e 94 48 09 	call	0x1290	; 0x1290 <__divmodhi4>
     76e:	e7 e8       	ldi	r30, 0x87	; 135
     770:	f3 e0       	ldi	r31, 0x03	; 3
     772:	64 56       	subi	r22, 0x64	; 100
     774:	60 83       	st	Z, r22
     776:	8d e8       	ldi	r24, 0x8D	; 141
     778:	92 e0       	ldi	r25, 0x02	; 2
     77a:	93 83       	std	Z+3, r25	; 0x03
     77c:	82 83       	std	Z+2, r24	; 0x02
     77e:	1f c0       	rjmp	.+62     	; 0x7be <get_joypos+0xda>
     780:	8f 3a       	cpi	r24, 0xAF	; 175
     782:	b0 f0       	brcs	.+44     	; 0x7b0 <get_joypos+0xcc>
     784:	28 2f       	mov	r18, r24
     786:	30 e0       	ldi	r19, 0x00	; 0
     788:	2a 5a       	subi	r18, 0xAA	; 170
     78a:	31 09       	sbc	r19, r1
     78c:	44 e6       	ldi	r20, 0x64	; 100
     78e:	42 9f       	mul	r20, r18
     790:	c0 01       	movw	r24, r0
     792:	43 9f       	mul	r20, r19
     794:	90 0d       	add	r25, r0
     796:	11 24       	eor	r1, r1
     798:	65 e5       	ldi	r22, 0x55	; 85
     79a:	70 e0       	ldi	r23, 0x00	; 0
     79c:	0e 94 48 09 	call	0x1290	; 0x1290 <__divmodhi4>
     7a0:	e7 e8       	ldi	r30, 0x87	; 135
     7a2:	f3 e0       	ldi	r31, 0x03	; 3
     7a4:	60 83       	st	Z, r22
     7a6:	82 e9       	ldi	r24, 0x92	; 146
     7a8:	92 e0       	ldi	r25, 0x02	; 2
     7aa:	93 83       	std	Z+3, r25	; 0x03
     7ac:	82 83       	std	Z+2, r24	; 0x02
     7ae:	07 c0       	rjmp	.+14     	; 0x7be <get_joypos+0xda>
     7b0:	e7 e8       	ldi	r30, 0x87	; 135
     7b2:	f3 e0       	ldi	r31, 0x03	; 3
     7b4:	10 82       	st	Z, r1
     7b6:	88 e9       	ldi	r24, 0x98	; 152
     7b8:	92 e0       	ldi	r25, 0x02	; 2
     7ba:	93 83       	std	Z+3, r25	; 0x03
     7bc:	82 83       	std	Z+2, r24	; 0x02
     7be:	80 91 88 03 	lds	r24, 0x0388	; 0x800388 <joystick+0x1>
     7c2:	94 e6       	ldi	r25, 0x64	; 100
     7c4:	98 0f       	add	r25, r24
     7c6:	9e 30       	cpi	r25, 0x0E	; 14
     7c8:	40 f4       	brcc	.+16     	; 0x7da <get_joypos+0xf6>
     7ca:	e7 e8       	ldi	r30, 0x87	; 135
     7cc:	f3 e0       	ldi	r31, 0x03	; 3
     7ce:	11 82       	std	Z+1, r1	; 0x01
     7d0:	85 e8       	ldi	r24, 0x85	; 133
     7d2:	92 e0       	ldi	r25, 0x02	; 2
     7d4:	95 83       	std	Z+5, r25	; 0x05
     7d6:	84 83       	std	Z+4, r24	; 0x04
     7d8:	32 c0       	rjmp	.+100    	; 0x83e <get_joypos+0x15a>
     7da:	8c 39       	cpi	r24, 0x9C	; 156
     7dc:	88 f4       	brcc	.+34     	; 0x800 <get_joypos+0x11c>
     7de:	24 e6       	ldi	r18, 0x64	; 100
     7e0:	82 9f       	mul	r24, r18
     7e2:	c0 01       	movw	r24, r0
     7e4:	11 24       	eor	r1, r1
     7e6:	66 ea       	ldi	r22, 0xA6	; 166
     7e8:	70 e0       	ldi	r23, 0x00	; 0
     7ea:	0e 94 48 09 	call	0x1290	; 0x1290 <__divmodhi4>
     7ee:	e7 e8       	ldi	r30, 0x87	; 135
     7f0:	f3 e0       	ldi	r31, 0x03	; 3
     7f2:	64 56       	subi	r22, 0x64	; 100
     7f4:	61 83       	std	Z+1, r22	; 0x01
     7f6:	8c e9       	ldi	r24, 0x9C	; 156
     7f8:	92 e0       	ldi	r25, 0x02	; 2
     7fa:	95 83       	std	Z+5, r25	; 0x05
     7fc:	84 83       	std	Z+4, r24	; 0x04
     7fe:	1f c0       	rjmp	.+62     	; 0x83e <get_joypos+0x15a>
     800:	8a 3a       	cpi	r24, 0xAA	; 170
     802:	b0 f0       	brcs	.+44     	; 0x830 <get_joypos+0x14c>
     804:	28 2f       	mov	r18, r24
     806:	30 e0       	ldi	r19, 0x00	; 0
     808:	2a 5a       	subi	r18, 0xAA	; 170
     80a:	31 09       	sbc	r19, r1
     80c:	44 e6       	ldi	r20, 0x64	; 100
     80e:	42 9f       	mul	r20, r18
     810:	c0 01       	movw	r24, r0
     812:	43 9f       	mul	r20, r19
     814:	90 0d       	add	r25, r0
     816:	11 24       	eor	r1, r1
     818:	65 e5       	ldi	r22, 0x55	; 85
     81a:	70 e0       	ldi	r23, 0x00	; 0
     81c:	0e 94 48 09 	call	0x1290	; 0x1290 <__divmodhi4>
     820:	e7 e8       	ldi	r30, 0x87	; 135
     822:	f3 e0       	ldi	r31, 0x03	; 3
     824:	61 83       	std	Z+1, r22	; 0x01
     826:	81 ea       	ldi	r24, 0xA1	; 161
     828:	92 e0       	ldi	r25, 0x02	; 2
     82a:	95 83       	std	Z+5, r25	; 0x05
     82c:	84 83       	std	Z+4, r24	; 0x04
     82e:	07 c0       	rjmp	.+14     	; 0x83e <get_joypos+0x15a>
     830:	e7 e8       	ldi	r30, 0x87	; 135
     832:	f3 e0       	ldi	r31, 0x03	; 3
     834:	11 82       	std	Z+1, r1	; 0x01
     836:	88 e9       	ldi	r24, 0x98	; 152
     838:	92 e0       	ldi	r25, 0x02	; 2
     83a:	95 83       	std	Z+5, r25	; 0x05
     83c:	84 83       	std	Z+4, r24	; 0x04
     83e:	86 e0       	ldi	r24, 0x06	; 6
     840:	e7 e8       	ldi	r30, 0x87	; 135
     842:	f3 e0       	ldi	r31, 0x03	; 3
     844:	de 01       	movw	r26, r28
     846:	11 96       	adiw	r26, 0x01	; 1
     848:	01 90       	ld	r0, Z+
     84a:	0d 92       	st	X+, r0
     84c:	8a 95       	dec	r24
     84e:	e1 f7       	brne	.-8      	; 0x848 <get_joypos+0x164>
     850:	29 81       	ldd	r18, Y+1	; 0x01
     852:	3a 81       	ldd	r19, Y+2	; 0x02
     854:	4b 81       	ldd	r20, Y+3	; 0x03
     856:	5c 81       	ldd	r21, Y+4	; 0x04
     858:	6d 81       	ldd	r22, Y+5	; 0x05
     85a:	7e 81       	ldd	r23, Y+6	; 0x06
     85c:	80 e0       	ldi	r24, 0x00	; 0
     85e:	90 e0       	ldi	r25, 0x00	; 0
     860:	26 96       	adiw	r28, 0x06	; 6
     862:	0f b6       	in	r0, 0x3f	; 63
     864:	f8 94       	cli
     866:	de bf       	out	0x3e, r29	; 62
     868:	0f be       	out	0x3f, r0	; 63
     86a:	cd bf       	out	0x3d, r28	; 61
     86c:	df 91       	pop	r29
     86e:	cf 91       	pop	r28
     870:	1f 91       	pop	r17
     872:	0f 91       	pop	r16
     874:	08 95       	ret

00000876 <get_sliderpos>:
     876:	ef 92       	push	r14
     878:	ff 92       	push	r15
     87a:	0f 93       	push	r16
     87c:	1f 93       	push	r17
     87e:	cf 93       	push	r28
     880:	0e 94 20 02 	call	0x440	; 0x440 <ADC_init_read>
     884:	60 e0       	ldi	r22, 0x00	; 0
     886:	74 e1       	ldi	r23, 0x14	; 20
     888:	80 e0       	ldi	r24, 0x00	; 0
     88a:	90 e0       	ldi	r25, 0x00	; 0
     88c:	0e 94 09 02 	call	0x412	; 0x412 <xmem_read>
     890:	60 e0       	ldi	r22, 0x00	; 0
     892:	74 e1       	ldi	r23, 0x14	; 20
     894:	80 e0       	ldi	r24, 0x00	; 0
     896:	90 e0       	ldi	r25, 0x00	; 0
     898:	0e 94 09 02 	call	0x412	; 0x412 <xmem_read>
     89c:	60 e0       	ldi	r22, 0x00	; 0
     89e:	74 e1       	ldi	r23, 0x14	; 20
     8a0:	80 e0       	ldi	r24, 0x00	; 0
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	0e 94 09 02 	call	0x412	; 0x412 <xmem_read>
     8a8:	c4 e6       	ldi	r28, 0x64	; 100
     8aa:	c8 9f       	mul	r28, r24
     8ac:	c0 01       	movw	r24, r0
     8ae:	11 24       	eor	r1, r1
     8b0:	ee 24       	eor	r14, r14
     8b2:	ea 94       	dec	r14
     8b4:	f1 2c       	mov	r15, r1
     8b6:	b7 01       	movw	r22, r14
     8b8:	0e 94 48 09 	call	0x1290	; 0x1290 <__divmodhi4>
     8bc:	02 e7       	ldi	r16, 0x72	; 114
     8be:	13 e0       	ldi	r17, 0x03	; 3
     8c0:	f8 01       	movw	r30, r16
     8c2:	60 83       	st	Z, r22
     8c4:	60 e0       	ldi	r22, 0x00	; 0
     8c6:	74 e1       	ldi	r23, 0x14	; 20
     8c8:	80 e0       	ldi	r24, 0x00	; 0
     8ca:	90 e0       	ldi	r25, 0x00	; 0
     8cc:	0e 94 09 02 	call	0x412	; 0x412 <xmem_read>
     8d0:	c8 9f       	mul	r28, r24
     8d2:	c0 01       	movw	r24, r0
     8d4:	11 24       	eor	r1, r1
     8d6:	b7 01       	movw	r22, r14
     8d8:	0e 94 48 09 	call	0x1290	; 0x1290 <__divmodhi4>
     8dc:	f8 01       	movw	r30, r16
     8de:	61 83       	std	Z+1, r22	; 0x01
     8e0:	81 ee       	ldi	r24, 0xE1	; 225
     8e2:	94 e0       	ldi	r25, 0x04	; 4
     8e4:	01 97       	sbiw	r24, 0x01	; 1
     8e6:	f1 f7       	brne	.-4      	; 0x8e4 <get_sliderpos+0x6e>
     8e8:	00 c0       	rjmp	.+0      	; 0x8ea <get_sliderpos+0x74>
     8ea:	00 00       	nop
     8ec:	80 91 72 03 	lds	r24, 0x0372	; 0x800372 <slider>
     8f0:	90 91 73 03 	lds	r25, 0x0373	; 0x800373 <slider+0x1>
     8f4:	cf 91       	pop	r28
     8f6:	1f 91       	pop	r17
     8f8:	0f 91       	pop	r16
     8fa:	ff 90       	pop	r15
     8fc:	ef 90       	pop	r14
     8fe:	08 95       	ret

00000900 <button_status>:
     900:	86 b3       	in	r24, 0x16	; 22
     902:	81 70       	andi	r24, 0x01	; 1
     904:	08 95       	ret

00000906 <CAN_send_joypos>:
     906:	1f 93       	push	r17
     908:	cf 93       	push	r28
     90a:	df 93       	push	r29
     90c:	cd b7       	in	r28, 0x3d	; 61
     90e:	de b7       	in	r29, 0x3e	; 62
     910:	2b 97       	sbiw	r28, 0x0b	; 11
     912:	0f b6       	in	r0, 0x3f	; 63
     914:	f8 94       	cli
     916:	de bf       	out	0x3e, r29	; 62
     918:	0f be       	out	0x3f, r0	; 63
     91a:	cd bf       	out	0x3d, r28	; 61
     91c:	0e 94 72 03 	call	0x6e4	; 0x6e4 <get_joypos>
     920:	20 93 87 03 	sts	0x0387, r18	; 0x800387 <joystick>
     924:	30 93 88 03 	sts	0x0388, r19	; 0x800388 <joystick+0x1>
     928:	40 93 89 03 	sts	0x0389, r20	; 0x800389 <joystick+0x2>
     92c:	50 93 8a 03 	sts	0x038A, r21	; 0x80038a <joystick+0x3>
     930:	60 93 8b 03 	sts	0x038B, r22	; 0x80038b <joystick+0x4>
     934:	70 93 8c 03 	sts	0x038C, r23	; 0x80038c <joystick+0x5>
     938:	0e 94 80 04 	call	0x900	; 0x900 <button_status>
     93c:	18 2f       	mov	r17, r24
     93e:	0e 94 3b 04 	call	0x876	; 0x876 <get_sliderpos>
     942:	90 93 73 03 	sts	0x0373, r25	; 0x800373 <slider+0x1>
     946:	80 93 72 03 	sts	0x0372, r24	; 0x800372 <slider>
     94a:	61 e0       	ldi	r22, 0x01	; 1
     94c:	70 e0       	ldi	r23, 0x00	; 0
     94e:	ce 01       	movw	r24, r28
     950:	01 96       	adiw	r24, 0x01	; 1
     952:	0e 94 be 02 	call	0x57c	; 0x57c <set_msg_id>
     956:	65 e0       	ldi	r22, 0x05	; 5
     958:	ce 01       	movw	r24, r28
     95a:	01 96       	adiw	r24, 0x01	; 1
     95c:	0e 94 c2 02 	call	0x584	; 0x584 <set_msg_length>
     960:	80 91 89 03 	lds	r24, 0x0389	; 0x800389 <joystick+0x2>
     964:	90 91 8a 03 	lds	r25, 0x038A	; 0x80038a <joystick+0x3>
     968:	8d 58       	subi	r24, 0x8D	; 141
     96a:	92 40       	sbci	r25, 0x02	; 2
     96c:	31 f4       	brne	.+12     	; 0x97a <CAN_send_joypos+0x74>
     96e:	80 91 87 03 	lds	r24, 0x0387	; 0x800387 <joystick>
     972:	81 95       	neg	r24
     974:	8c 83       	std	Y+4, r24	; 0x04
     976:	1e 82       	std	Y+6, r1	; 0x06
     978:	05 c0       	rjmp	.+10     	; 0x984 <CAN_send_joypos+0x7e>
     97a:	80 91 87 03 	lds	r24, 0x0387	; 0x800387 <joystick>
     97e:	8c 83       	std	Y+4, r24	; 0x04
     980:	81 e0       	ldi	r24, 0x01	; 1
     982:	8e 83       	std	Y+6, r24	; 0x06
     984:	80 91 8b 03 	lds	r24, 0x038B	; 0x80038b <joystick+0x4>
     988:	90 91 8c 03 	lds	r25, 0x038C	; 0x80038c <joystick+0x5>
     98c:	8c 59       	subi	r24, 0x9C	; 156
     98e:	92 40       	sbci	r25, 0x02	; 2
     990:	29 f4       	brne	.+10     	; 0x99c <CAN_send_joypos+0x96>
     992:	80 91 88 03 	lds	r24, 0x0388	; 0x800388 <joystick+0x1>
     996:	81 95       	neg	r24
     998:	8d 83       	std	Y+5, r24	; 0x05
     99a:	03 c0       	rjmp	.+6      	; 0x9a2 <CAN_send_joypos+0x9c>
     99c:	80 91 88 03 	lds	r24, 0x0388	; 0x800388 <joystick+0x1>
     9a0:	8d 83       	std	Y+5, r24	; 0x05
     9a2:	1f 83       	std	Y+7, r17	; 0x07
     9a4:	80 91 73 03 	lds	r24, 0x0373	; 0x800373 <slider+0x1>
     9a8:	88 87       	std	Y+8, r24	; 0x08
     9aa:	60 e0       	ldi	r22, 0x00	; 0
     9ac:	ce 01       	movw	r24, r28
     9ae:	01 96       	adiw	r24, 0x01	; 1
     9b0:	0e 94 c5 02 	call	0x58a	; 0x58a <CAN_transmit>
     9b4:	2b 96       	adiw	r28, 0x0b	; 11
     9b6:	0f b6       	in	r0, 0x3f	; 63
     9b8:	f8 94       	cli
     9ba:	de bf       	out	0x3e, r29	; 62
     9bc:	0f be       	out	0x3f, r0	; 63
     9be:	cd bf       	out	0x3d, r28	; 61
     9c0:	df 91       	pop	r29
     9c2:	cf 91       	pop	r28
     9c4:	1f 91       	pop	r17
     9c6:	08 95       	ret

000009c8 <button_init>:
     9c8:	81 e0       	ldi	r24, 0x01	; 1
     9ca:	88 bb       	out	0x18, r24	; 24
     9cc:	87 b3       	in	r24, 0x17	; 23
     9ce:	8e 7f       	andi	r24, 0xFE	; 254
     9d0:	87 bb       	out	0x17, r24	; 23
     9d2:	08 95       	ret

000009d4 <OLED_write_command>:
#define FONTSIZE 8

void OLED_write_command(uint8_t command) //volatile
{
	volatile char* base_addr=BASE_ADDRESS_OLED_COMMAND;
	base_addr[0]=command;
     9d4:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xc62>
     9d8:	08 95       	ret

000009da <OLED_write_data>:


void OLED_write_data(uint8_t data) //volatile
{
	volatile char* base_addr=BASE_ADDRESS_OLED_DATA;
	base_addr[0]=data;
     9da:	80 93 00 12 	sts	0x1200, r24	; 0x801200 <__bss_end+0xe62>
     9de:	08 95       	ret

000009e0 <OLED_init>:
}

void OLED_init()
 {
	OLED_write_command(0xae); // display off
     9e0:	8e ea       	ldi	r24, 0xAE	; 174
     9e2:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <OLED_write_command>
	OLED_write_command(0xa1); //segment remap
     9e6:	81 ea       	ldi	r24, 0xA1	; 161
     9e8:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <OLED_write_command>
	OLED_write_command(0Xda); //common pads hardware: alternative
     9ec:	8a ed       	ldi	r24, 0xDA	; 218
     9ee:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <OLED_write_command>
	OLED_write_command(0x12);
     9f2:	82 e1       	ldi	r24, 0x12	; 18
     9f4:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <OLED_write_command>
	OLED_write_command(0xc8); //common output scan direction:com63~com0
     9f8:	88 ec       	ldi	r24, 0xC8	; 200
     9fa:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <OLED_write_command>
	OLED_write_command(0xa8); //multiplex ration mode:63
     9fe:	88 ea       	ldi	r24, 0xA8	; 168
     a00:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <OLED_write_command>
	OLED_write_command(0x3f);
     a04:	8f e3       	ldi	r24, 0x3F	; 63
     a06:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <OLED_write_command>
	OLED_write_command(0xd5); //display divide ratio/osc. freq. mode
     a0a:	85 ed       	ldi	r24, 0xD5	; 213
     a0c:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <OLED_write_command>
	OLED_write_command(0x80);
     a10:	80 e8       	ldi	r24, 0x80	; 128
     a12:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <OLED_write_command>
	OLED_write_command(0x81); //contrast control
     a16:	81 e8       	ldi	r24, 0x81	; 129
     a18:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <OLED_write_command>
	OLED_write_command(0x50);
     a1c:	80 e5       	ldi	r24, 0x50	; 80
     a1e:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <OLED_write_command>
	OLED_write_command(0xd9); //set pre-charge period
     a22:	89 ed       	ldi	r24, 0xD9	; 217
     a24:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <OLED_write_command>
	OLED_write_command(0x21);
     a28:	81 e2       	ldi	r24, 0x21	; 33
     a2a:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <OLED_write_command>
	OLED_write_command(0x20); //Set Memory Addressing Mode
     a2e:	80 e2       	ldi	r24, 0x20	; 32
     a30:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <OLED_write_command>
	OLED_write_command(0x02); //THERE WAS WRITTEN 02
     a34:	82 e0       	ldi	r24, 0x02	; 2
     a36:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <OLED_write_command>
	OLED_write_command(0xdb); //VCOM deselect level mode
     a3a:	8b ed       	ldi	r24, 0xDB	; 219
     a3c:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <OLED_write_command>
	OLED_write_command(0x30);
     a40:	80 e3       	ldi	r24, 0x30	; 48
     a42:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <OLED_write_command>
	OLED_write_command(0xad); //master configuration
     a46:	8d ea       	ldi	r24, 0xAD	; 173
     a48:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <OLED_write_command>
	OLED_write_command(0x00);
     a4c:	80 e0       	ldi	r24, 0x00	; 0
     a4e:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <OLED_write_command>
	OLED_write_command(0xa4); //out follows RAM content
     a52:	84 ea       	ldi	r24, 0xA4	; 164
     a54:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <OLED_write_command>
	OLED_write_command(0xa7); //set awesome display
     a58:	87 ea       	ldi	r24, 0xA7	; 167
     a5a:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <OLED_write_command>
	OLED_write_command(0xaf); // display on
     a5e:	8f ea       	ldi	r24, 0xAF	; 175
     a60:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <OLED_write_command>
	   
	OLED_write_command(0xd3);
     a64:	83 ed       	ldi	r24, 0xD3	; 211
     a66:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <OLED_write_command>
	OLED_write_command(0x02);
     a6a:	82 e0       	ldi	r24, 0x02	; 2
     a6c:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <OLED_write_command>
     a70:	08 95       	ret

00000a72 <OLED_goto_line>:
	
} 


void OLED_goto_line(uint8_t line){
	if(line>=0 && line<8){
     a72:	88 30       	cpi	r24, 0x08	; 8
     a74:	18 f4       	brcc	.+6      	; 0xa7c <OLED_goto_line+0xa>
		OLED_write_command(0xb0+line);	
     a76:	80 55       	subi	r24, 0x50	; 80
     a78:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <OLED_write_command>
     a7c:	08 95       	ret

00000a7e <OLED_goto_col>:
	}
}

void OLED_goto_col(uint8_t column){
     a7e:	cf 93       	push	r28
	if(column>=0 && column<128){	
     a80:	88 23       	and	r24, r24
     a82:	54 f0       	brlt	.+20     	; 0xa98 <OLED_goto_col+0x1a>
     a84:	c8 2f       	mov	r28, r24
		OLED_write_command(0x00+(column & 0x0F)); //set the lower column address
     a86:	8f 70       	andi	r24, 0x0F	; 15
     a88:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <OLED_write_command>
		OLED_write_command(0x10+((column & 0xF0) >> 4)); //set the upper column address
     a8c:	8c 2f       	mov	r24, r28
     a8e:	82 95       	swap	r24
     a90:	8f 70       	andi	r24, 0x0F	; 15
     a92:	80 5f       	subi	r24, 0xF0	; 240
     a94:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <OLED_write_command>
	}
}
     a98:	cf 91       	pop	r28
     a9a:	08 95       	ret

00000a9c <OLED_goto_pos>:


void OLED_goto_pos(uint8_t line, uint8_t column){
     a9c:	cf 93       	push	r28
     a9e:	c6 2f       	mov	r28, r22
	OLED_goto_line(line);
     aa0:	0e 94 39 05 	call	0xa72	; 0xa72 <OLED_goto_line>
	OLED_goto_col(column);
     aa4:	8c 2f       	mov	r24, r28
     aa6:	0e 94 3f 05 	call	0xa7e	; 0xa7e <OLED_goto_col>
}
     aaa:	cf 91       	pop	r28
     aac:	08 95       	ret

00000aae <OLED_clear>:

void OLED_clear(){
     aae:	cf 93       	push	r28
     ab0:	df 93       	push	r29
	for(uint8_t i=0;i<N_ROWS;i++){
     ab2:	d0 e0       	ldi	r29, 0x00	; 0
     ab4:	0d c0       	rjmp	.+26     	; 0xad0 <OLED_clear+0x22>
		OLED_goto_pos(i,0);
     ab6:	60 e0       	ldi	r22, 0x00	; 0
     ab8:	8d 2f       	mov	r24, r29
     aba:	0e 94 4e 05 	call	0xa9c	; 0xa9c <OLED_goto_pos>
		for(uint8_t j=0;j<N_COLS;j++){
     abe:	c0 e0       	ldi	r28, 0x00	; 0
     ac0:	04 c0       	rjmp	.+8      	; 0xaca <OLED_clear+0x1c>
			OLED_write_data(0x00);
     ac2:	80 e0       	ldi	r24, 0x00	; 0
     ac4:	0e 94 ed 04 	call	0x9da	; 0x9da <OLED_write_data>
}

void OLED_clear(){
	for(uint8_t i=0;i<N_ROWS;i++){
		OLED_goto_pos(i,0);
		for(uint8_t j=0;j<N_COLS;j++){
     ac8:	cf 5f       	subi	r28, 0xFF	; 255
     aca:	cc 23       	and	r28, r28
     acc:	d4 f7       	brge	.-12     	; 0xac2 <OLED_clear+0x14>
	OLED_goto_line(line);
	OLED_goto_col(column);
}

void OLED_clear(){
	for(uint8_t i=0;i<N_ROWS;i++){
     ace:	df 5f       	subi	r29, 0xFF	; 255
     ad0:	d8 30       	cpi	r29, 0x08	; 8
     ad2:	88 f3       	brcs	.-30     	; 0xab6 <OLED_clear+0x8>
		OLED_goto_pos(i,0);
		for(uint8_t j=0;j<N_COLS;j++){
			OLED_write_data(0x00);
		}		
	}
}
     ad4:	df 91       	pop	r29
     ad6:	cf 91       	pop	r28
     ad8:	08 95       	ret

00000ada <OLED_clear_arrow>:

void OLED_clear_arrow(){
     ada:	cf 93       	push	r28
     adc:	df 93       	push	r29
	for(uint8_t i=2;i<6;i++){
     ade:	d2 e0       	ldi	r29, 0x02	; 2
     ae0:	0d c0       	rjmp	.+26     	; 0xafc <OLED_clear_arrow+0x22>
		OLED_goto_pos(i,0);
     ae2:	60 e0       	ldi	r22, 0x00	; 0
     ae4:	8d 2f       	mov	r24, r29
     ae6:	0e 94 4e 05 	call	0xa9c	; 0xa9c <OLED_goto_pos>
		for(uint8_t j=0;j<21;j++){
     aea:	c0 e0       	ldi	r28, 0x00	; 0
     aec:	04 c0       	rjmp	.+8      	; 0xaf6 <OLED_clear_arrow+0x1c>
			OLED_write_data(0x00);
     aee:	80 e0       	ldi	r24, 0x00	; 0
     af0:	0e 94 ed 04 	call	0x9da	; 0x9da <OLED_write_data>
}

void OLED_clear_arrow(){
	for(uint8_t i=2;i<6;i++){
		OLED_goto_pos(i,0);
		for(uint8_t j=0;j<21;j++){
     af4:	cf 5f       	subi	r28, 0xFF	; 255
     af6:	c5 31       	cpi	r28, 0x15	; 21
     af8:	d0 f3       	brcs	.-12     	; 0xaee <OLED_clear_arrow+0x14>
		}		
	}
}

void OLED_clear_arrow(){
	for(uint8_t i=2;i<6;i++){
     afa:	df 5f       	subi	r29, 0xFF	; 255
     afc:	d6 30       	cpi	r29, 0x06	; 6
     afe:	88 f3       	brcs	.-30     	; 0xae2 <OLED_clear_arrow+0x8>
		OLED_goto_pos(i,0);
		for(uint8_t j=0;j<21;j++){
			OLED_write_data(0x00);
		}
	}
}
     b00:	df 91       	pop	r29
     b02:	cf 91       	pop	r28
     b04:	08 95       	ret

00000b06 <OLED_print_arrow>:


void OLED_print_arrow(uint8_t row, uint8_t col){
	
	
	OLED_goto_pos(row,col);
     b06:	0e 94 4e 05 	call	0xa9c	; 0xa9c <OLED_goto_pos>
	OLED_write_data(0b00011000);
     b0a:	88 e1       	ldi	r24, 0x18	; 24
     b0c:	0e 94 ed 04 	call	0x9da	; 0x9da <OLED_write_data>
	OLED_write_data(0b00011000);
     b10:	88 e1       	ldi	r24, 0x18	; 24
     b12:	0e 94 ed 04 	call	0x9da	; 0x9da <OLED_write_data>
	OLED_write_data(0b01111110);
     b16:	8e e7       	ldi	r24, 0x7E	; 126
     b18:	0e 94 ed 04 	call	0x9da	; 0x9da <OLED_write_data>
	OLED_write_data(0b00111100);
     b1c:	8c e3       	ldi	r24, 0x3C	; 60
     b1e:	0e 94 ed 04 	call	0x9da	; 0x9da <OLED_write_data>
	OLED_write_data(0b00011000);
     b22:	88 e1       	ldi	r24, 0x18	; 24
     b24:	0e 94 ed 04 	call	0x9da	; 0x9da <OLED_write_data>
     b28:	08 95       	ret

00000b2a <OLED_print_char>:
	
}

void OLED_print_char(char c){
     b2a:	cf 93       	push	r28
     b2c:	df 93       	push	r29
     b2e:	d8 2f       	mov	r29, r24
	for(uint8_t i=0; i<FONTSIZE; i++){
     b30:	c0 e0       	ldi	r28, 0x00	; 0
     b32:	11 c0       	rjmp	.+34     	; 0xb56 <OLED_print_char+0x2c>
		uint8_t byte = pgm_read_byte(&(font8[c - 32][i]));
     b34:	ed 2f       	mov	r30, r29
     b36:	f0 e0       	ldi	r31, 0x00	; 0
     b38:	b0 97       	sbiw	r30, 0x20	; 32
     b3a:	ee 0f       	add	r30, r30
     b3c:	ff 1f       	adc	r31, r31
     b3e:	ee 0f       	add	r30, r30
     b40:	ff 1f       	adc	r31, r31
     b42:	ee 0f       	add	r30, r30
     b44:	ff 1f       	adc	r31, r31
     b46:	ec 0f       	add	r30, r28
     b48:	f1 1d       	adc	r31, r1
     b4a:	e0 59       	subi	r30, 0x90	; 144
     b4c:	ff 4f       	sbci	r31, 0xFF	; 255
     b4e:	84 91       	lpm	r24, Z
		OLED_write_data(byte);
     b50:	0e 94 ed 04 	call	0x9da	; 0x9da <OLED_write_data>
	OLED_write_data(0b00011000);
	
}

void OLED_print_char(char c){
	for(uint8_t i=0; i<FONTSIZE; i++){
     b54:	cf 5f       	subi	r28, 0xFF	; 255
     b56:	c8 30       	cpi	r28, 0x08	; 8
     b58:	68 f3       	brcs	.-38     	; 0xb34 <OLED_print_char+0xa>
		uint8_t byte = pgm_read_byte(&(font8[c - 32][i]));
		OLED_write_data(byte);
	}
}
     b5a:	df 91       	pop	r29
     b5c:	cf 91       	pop	r28
     b5e:	08 95       	ret

00000b60 <OLED_print_string>:


void OLED_print_string(const char * str){	 
     b60:	0f 93       	push	r16
     b62:	1f 93       	push	r17
     b64:	cf 93       	push	r28
     b66:	8c 01       	movw	r16, r24
	 uint8_t i=0;
     b68:	c0 e0       	ldi	r28, 0x00	; 0
	 while(str[i]!= '\0'){
     b6a:	03 c0       	rjmp	.+6      	; 0xb72 <OLED_print_string+0x12>
		 OLED_print_char(str[i]);
     b6c:	0e 94 95 05 	call	0xb2a	; 0xb2a <OLED_print_char>
		 i++; 
     b70:	cf 5f       	subi	r28, 0xFF	; 255
}


void OLED_print_string(const char * str){	 
	 uint8_t i=0;
	 while(str[i]!= '\0'){
     b72:	f8 01       	movw	r30, r16
     b74:	ec 0f       	add	r30, r28
     b76:	f1 1d       	adc	r31, r1
     b78:	80 81       	ld	r24, Z
     b7a:	81 11       	cpse	r24, r1
     b7c:	f7 cf       	rjmp	.-18     	; 0xb6c <OLED_print_string+0xc>
		 OLED_print_char(str[i]);
		 i++; 
	 }
     b7e:	cf 91       	pop	r28
     b80:	1f 91       	pop	r17
     b82:	0f 91       	pop	r16
     b84:	08 95       	ret

00000b86 <f_play>:
		playing=0;
		counter_trials +=1;
	}
}

void f_play(){
     b86:	1f 93       	push	r17
     b88:	cf 93       	push	r28
     b8a:	df 93       	push	r29
     b8c:	cd b7       	in	r28, 0x3d	; 61
     b8e:	de b7       	in	r29, 0x3e	; 62
     b90:	2b 97       	sbiw	r28, 0x0b	; 11
     b92:	0f b6       	in	r0, 0x3f	; 63
     b94:	f8 94       	cli
     b96:	de bf       	out	0x3e, r29	; 62
     b98:	0f be       	out	0x3f, r0	; 63
     b9a:	cd bf       	out	0x3d, r28	; 61
	OLED_clear();
     b9c:	0e 94 57 05 	call	0xaae	; 0xaae <OLED_clear>
	OLED_goto_pos(3,32);
     ba0:	60 e2       	ldi	r22, 0x20	; 32
     ba2:	83 e0       	ldi	r24, 0x03	; 3
     ba4:	0e 94 4e 05 	call	0xa9c	; 0xa9c <OLED_goto_pos>
	if(!playing){
     ba8:	80 91 6f 03 	lds	r24, 0x036F	; 0x80036f <playing>
     bac:	81 11       	cpse	r24, r1
     bae:	14 c0       	rjmp	.+40     	; 0xbd8 <f_play+0x52>
		CAN_message msg;
		set_msg_id(&msg ,PLAY_CAN_ID);
     bb0:	65 e0       	ldi	r22, 0x05	; 5
     bb2:	70 e0       	ldi	r23, 0x00	; 0
     bb4:	ce 01       	movw	r24, r28
     bb6:	01 96       	adiw	r24, 0x01	; 1
     bb8:	0e 94 be 02 	call	0x57c	; 0x57c <set_msg_id>
		set_msg_length(&msg, 1);
     bbc:	61 e0       	ldi	r22, 0x01	; 1
     bbe:	ce 01       	movw	r24, r28
     bc0:	01 96       	adiw	r24, 0x01	; 1
     bc2:	0e 94 c2 02 	call	0x584	; 0x584 <set_msg_length>
		msg.data[0] = 1;
     bc6:	11 e0       	ldi	r17, 0x01	; 1
     bc8:	1c 83       	std	Y+4, r17	; 0x04
		CAN_transmit(&msg,0);	
     bca:	60 e0       	ldi	r22, 0x00	; 0
     bcc:	ce 01       	movw	r24, r28
     bce:	01 96       	adiw	r24, 0x01	; 1
     bd0:	0e 94 c5 02 	call	0x58a	; 0x58a <CAN_transmit>
		playing=1;
     bd4:	10 93 6f 03 	sts	0x036F, r17	; 0x80036f <playing>
	}

	OLED_print_string("Playing");
     bd8:	84 ea       	ldi	r24, 0xA4	; 164
     bda:	92 e0       	ldi	r25, 0x02	; 2
     bdc:	0e 94 b0 05 	call	0xb60	; 0xb60 <OLED_print_string>
}
     be0:	2b 96       	adiw	r28, 0x0b	; 11
     be2:	0f b6       	in	r0, 0x3f	; 63
     be4:	f8 94       	cli
     be6:	de bf       	out	0x3e, r29	; 62
     be8:	0f be       	out	0x3f, r0	; 63
     bea:	cd bf       	out	0x3d, r28	; 61
     bec:	df 91       	pop	r29
     bee:	cf 91       	pop	r28
     bf0:	1f 91       	pop	r17
     bf2:	08 95       	ret

00000bf4 <f_sr_highscore>:

void f_sr_highscore(){
     bf4:	0f 93       	push	r16
     bf6:	1f 93       	push	r17
     bf8:	cf 93       	push	r28
     bfa:	df 93       	push	r29
     bfc:	cd b7       	in	r28, 0x3d	; 61
     bfe:	de b7       	in	r29, 0x3e	; 62
     c00:	64 97       	sbiw	r28, 0x14	; 20
     c02:	0f b6       	in	r0, 0x3f	; 63
     c04:	f8 94       	cli
     c06:	de bf       	out	0x3e, r29	; 62
     c08:	0f be       	out	0x3f, r0	; 63
     c0a:	cd bf       	out	0x3d, r28	; 61
	OLED_clear();
     c0c:	0e 94 57 05 	call	0xaae	; 0xaae <OLED_clear>
	OLED_goto_pos(3,32);
     c10:	60 e2       	ldi	r22, 0x20	; 32
     c12:	83 e0       	ldi	r24, 0x03	; 3
     c14:	0e 94 4e 05 	call	0xa9c	; 0xa9c <OLED_goto_pos>
	char hs[20];
	sprintf(hs,"HS: %d",highscore);
     c18:	80 91 70 03 	lds	r24, 0x0370	; 0x800370 <highscore>
     c1c:	1f 92       	push	r1
     c1e:	8f 93       	push	r24
     c20:	8c ea       	ldi	r24, 0xAC	; 172
     c22:	92 e0       	ldi	r25, 0x02	; 2
     c24:	9f 93       	push	r25
     c26:	8f 93       	push	r24
     c28:	8e 01       	movw	r16, r28
     c2a:	0f 5f       	subi	r16, 0xFF	; 255
     c2c:	1f 4f       	sbci	r17, 0xFF	; 255
     c2e:	1f 93       	push	r17
     c30:	0f 93       	push	r16
     c32:	0e 94 22 0b 	call	0x1644	; 0x1644 <sprintf>
	OLED_print_string(hs);
     c36:	c8 01       	movw	r24, r16
     c38:	0e 94 b0 05 	call	0xb60	; 0xb60 <OLED_print_string>
	
	OLED_goto_pos(5,32);
     c3c:	60 e2       	ldi	r22, 0x20	; 32
     c3e:	85 e0       	ldi	r24, 0x05	; 5
     c40:	0e 94 4e 05 	call	0xa9c	; 0xa9c <OLED_goto_pos>
	sprintf(hs,"Trials: %d",counter_trials);
     c44:	80 91 6e 03 	lds	r24, 0x036E	; 0x80036e <__data_end>
     c48:	1f 92       	push	r1
     c4a:	8f 93       	push	r24
     c4c:	83 eb       	ldi	r24, 0xB3	; 179
     c4e:	92 e0       	ldi	r25, 0x02	; 2
     c50:	9f 93       	push	r25
     c52:	8f 93       	push	r24
     c54:	1f 93       	push	r17
     c56:	0f 93       	push	r16
     c58:	0e 94 22 0b 	call	0x1644	; 0x1644 <sprintf>
	OLED_print_string(hs);
     c5c:	c8 01       	movw	r24, r16
     c5e:	0e 94 b0 05 	call	0xb60	; 0xb60 <OLED_print_string>
}
     c62:	0f b6       	in	r0, 0x3f	; 63
     c64:	f8 94       	cli
     c66:	de bf       	out	0x3e, r29	; 62
     c68:	0f be       	out	0x3f, r0	; 63
     c6a:	cd bf       	out	0x3d, r28	; 61
     c6c:	64 96       	adiw	r28, 0x14	; 20
     c6e:	0f b6       	in	r0, 0x3f	; 63
     c70:	f8 94       	cli
     c72:	de bf       	out	0x3e, r29	; 62
     c74:	0f be       	out	0x3f, r0	; 63
     c76:	cd bf       	out	0x3d, r28	; 61
     c78:	df 91       	pop	r29
     c7a:	cf 91       	pop	r28
     c7c:	1f 91       	pop	r17
     c7e:	0f 91       	pop	r16
     c80:	08 95       	ret

00000c82 <f_calibrate>:

void f_calibrate(){
	OLED_clear();
     c82:	0e 94 57 05 	call	0xaae	; 0xaae <OLED_clear>
	OLED_goto_pos(3,32);
     c86:	60 e2       	ldi	r22, 0x20	; 32
     c88:	83 e0       	ldi	r24, 0x03	; 3
     c8a:	0e 94 4e 05 	call	0xa9c	; 0xa9c <OLED_goto_pos>
	OLED_print_string("calibrate");
     c8e:	8e eb       	ldi	r24, 0xBE	; 190
     c90:	92 e0       	ldi	r25, 0x02	; 2
     c92:	0e 94 b0 05 	call	0xb60	; 0xb60 <OLED_print_string>
     c96:	08 95       	ret

00000c98 <f_set_diff>:
}

void f_set_diff(){
	OLED_clear();
     c98:	0e 94 57 05 	call	0xaae	; 0xaae <OLED_clear>
	OLED_goto_pos(3,32);
     c9c:	60 e2       	ldi	r22, 0x20	; 32
     c9e:	83 e0       	ldi	r24, 0x03	; 3
     ca0:	0e 94 4e 05 	call	0xa9c	; 0xa9c <OLED_goto_pos>
	OLED_print_string("set diff");
     ca4:	88 ec       	ldi	r24, 0xC8	; 200
     ca6:	92 e0       	ldi	r25, 0x02	; 2
     ca8:	0e 94 b0 05 	call	0xb60	; 0xb60 <OLED_print_string>
     cac:	08 95       	ret

00000cae <f_quit>:
}

void f_quit(){
	OLED_clear();
     cae:	0e 94 57 05 	call	0xaae	; 0xaae <OLED_clear>
	OLED_goto_pos(3,32);
     cb2:	60 e2       	ldi	r22, 0x20	; 32
     cb4:	83 e0       	ldi	r24, 0x03	; 3
     cb6:	0e 94 4e 05 	call	0xa9c	; 0xa9c <OLED_goto_pos>
	OLED_print_string("bye bye");
     cba:	81 ed       	ldi	r24, 0xD1	; 209
     cbc:	92 e0       	ldi	r25, 0x02	; 2
     cbe:	0e 94 b0 05 	call	0xb60	; 0xb60 <OLED_print_string>
     cc2:	08 95       	ret

00000cc4 <new_node>:
	struct node* child [5];
	void (*fun_ptr)();
	uint8_t index;
	} node;

node* new_node(char* name, node* parent) {
     cc4:	0f 93       	push	r16
     cc6:	1f 93       	push	r17
     cc8:	cf 93       	push	r28
     cca:	df 93       	push	r29
     ccc:	8c 01       	movw	r16, r24
     cce:	eb 01       	movw	r28, r22
	node* n = malloc(sizeof(node));
     cd0:	81 e1       	ldi	r24, 0x11	; 17
     cd2:	90 e0       	ldi	r25, 0x00	; 0
     cd4:	0e 94 70 09 	call	0x12e0	; 0x12e0 <malloc>
	n->title = name;
     cd8:	fc 01       	movw	r30, r24
     cda:	11 83       	std	Z+1, r17	; 0x01
     cdc:	00 83       	st	Z, r16
	n->parent = parent;
     cde:	d3 83       	std	Z+3, r29	; 0x03
     ce0:	c2 83       	std	Z+2, r28	; 0x02
	for(int i=0; i<5; i++){
     ce2:	20 e0       	ldi	r18, 0x00	; 0
     ce4:	30 e0       	ldi	r19, 0x00	; 0
     ce6:	0a c0       	rjmp	.+20     	; 0xcfc <new_node+0x38>
		(n->child)[i] = NULL;
     ce8:	f9 01       	movw	r30, r18
     cea:	32 96       	adiw	r30, 0x02	; 2
     cec:	ee 0f       	add	r30, r30
     cee:	ff 1f       	adc	r31, r31
     cf0:	e8 0f       	add	r30, r24
     cf2:	f9 1f       	adc	r31, r25
     cf4:	11 82       	std	Z+1, r1	; 0x01
     cf6:	10 82       	st	Z, r1

node* new_node(char* name, node* parent) {
	node* n = malloc(sizeof(node));
	n->title = name;
	n->parent = parent;
	for(int i=0; i<5; i++){
     cf8:	2f 5f       	subi	r18, 0xFF	; 255
     cfa:	3f 4f       	sbci	r19, 0xFF	; 255
     cfc:	25 30       	cpi	r18, 0x05	; 5
     cfe:	31 05       	cpc	r19, r1
     d00:	9c f3       	brlt	.-26     	; 0xce8 <new_node+0x24>
		(n->child)[i] = NULL;
	}
	n->index = NULL;
     d02:	fc 01       	movw	r30, r24
     d04:	10 8a       	std	Z+16, r1	; 0x10
	return n;
}
     d06:	df 91       	pop	r29
     d08:	cf 91       	pop	r28
     d0a:	1f 91       	pop	r17
     d0c:	0f 91       	pop	r16
     d0e:	08 95       	ret

00000d10 <display_highscore>:



void display_highscore(uint8_t hs){	
	
	if(hs>highscore){
     d10:	90 91 70 03 	lds	r25, 0x0370	; 0x800370 <highscore>
     d14:	98 17       	cp	r25, r24
     d16:	10 f4       	brcc	.+4      	; 0xd1c <display_highscore+0xc>
		highscore=hs;
     d18:	80 93 70 03 	sts	0x0370, r24	; 0x800370 <highscore>
     d1c:	08 95       	ret

00000d1e <set_current_node>:
	}
		
}

void set_current_node(node*n){
	curr_mode=n;
     d1e:	90 93 82 03 	sts	0x0382, r25	; 0x800382 <curr_mode+0x1>
     d22:	80 93 81 03 	sts	0x0381, r24	; 0x800381 <curr_mode>
     d26:	08 95       	ret

00000d28 <get_current_node>:
}

node* get_current_node(void){
	return curr_mode;
}
     d28:	80 91 81 03 	lds	r24, 0x0381	; 0x800381 <curr_mode>
     d2c:	90 91 82 03 	lds	r25, 0x0382	; 0x800382 <curr_mode+0x1>
     d30:	08 95       	ret

00000d32 <set_child>:



void set_child(node* parent, node* child, uint8_t i){
	parent->child[i] = child;
     d32:	24 2f       	mov	r18, r20
     d34:	30 e0       	ldi	r19, 0x00	; 0
     d36:	2e 5f       	subi	r18, 0xFE	; 254
     d38:	3f 4f       	sbci	r19, 0xFF	; 255
     d3a:	22 0f       	add	r18, r18
     d3c:	33 1f       	adc	r19, r19
     d3e:	82 0f       	add	r24, r18
     d40:	93 1f       	adc	r25, r19
     d42:	fc 01       	movw	r30, r24
     d44:	71 83       	std	Z+1, r23	; 0x01
     d46:	60 83       	st	Z, r22
	child->index = i;
     d48:	fb 01       	movw	r30, r22
     d4a:	40 8b       	std	Z+16, r20	; 0x10
     d4c:	08 95       	ret

00000d4e <set_fun>:
}

void set_fun(node* n, void (* fun_ptr)(void)){
	n->fun_ptr= fun_ptr;
     d4e:	fc 01       	movw	r30, r24
     d50:	77 87       	std	Z+15, r23	; 0x0f
     d52:	66 87       	std	Z+14, r22	; 0x0e
     d54:	08 95       	ret

00000d56 <move_arrow>:
	OLED_goto_pos(3,32);
	OLED_print_string("bye bye");
}

void move_arrow(uint8_t dir){
	if (dir==0 ){
     d56:	81 11       	cpse	r24, r1
     d58:	07 c0       	rjmp	.+14     	; 0xd68 <move_arrow+0x12>
	  OLED_clear_arrow();  
     d5a:	0e 94 6d 05 	call	0xada	; 0xada <OLED_clear_arrow>
	  OLED_print_arrow(5,15);
     d5e:	6f e0       	ldi	r22, 0x0F	; 15
     d60:	85 e0       	ldi	r24, 0x05	; 5
     d62:	0e 94 83 05 	call	0xb06	; 0xb06 <OLED_print_arrow>
     d66:	08 95       	ret
	  } 
	else if (dir == 1){
     d68:	81 30       	cpi	r24, 0x01	; 1
     d6a:	31 f4       	brne	.+12     	; 0xd78 <move_arrow+0x22>
	OLED_clear_arrow();
     d6c:	0e 94 6d 05 	call	0xada	; 0xada <OLED_clear_arrow>
	OLED_print_arrow(3,15);
     d70:	6f e0       	ldi	r22, 0x0F	; 15
     d72:	83 e0       	ldi	r24, 0x03	; 3
     d74:	0e 94 83 05 	call	0xb06	; 0xb06 <OLED_print_arrow>
     d78:	08 95       	ret

00000d7a <GUI_main_menu>:
	OLED_goto_pos(5,32);
	OLED_print_string("See hs");		
	
}

void GUI_main_menu(uint8_t page,uint8_t back){
     d7a:	0f 93       	push	r16
     d7c:	1f 93       	push	r17
     d7e:	cf 93       	push	r28
     d80:	df 93       	push	r29
     d82:	cd b7       	in	r28, 0x3d	; 61
     d84:	de b7       	in	r29, 0x3e	; 62
     d86:	2b 97       	sbiw	r28, 0x0b	; 11
     d88:	0f b6       	in	r0, 0x3f	; 63
     d8a:	f8 94       	cli
     d8c:	de bf       	out	0x3e, r29	; 62
     d8e:	0f be       	out	0x3f, r0	; 63
     d90:	cd bf       	out	0x3d, r28	; 61
     d92:	08 2f       	mov	r16, r24
     d94:	16 2f       	mov	r17, r22
	set_current_node(main_menu);
     d96:	80 91 8f 03 	lds	r24, 0x038F	; 0x80038f <main_menu>
     d9a:	90 91 90 03 	lds	r25, 0x0390	; 0x800390 <main_menu+0x1>
     d9e:	0e 94 8f 06 	call	0xd1e	; 0xd1e <set_current_node>
	OLED_clear();
     da2:	0e 94 57 05 	call	0xaae	; 0xaae <OLED_clear>
	OLED_goto_pos(1,8);
     da6:	68 e0       	ldi	r22, 0x08	; 8
     da8:	81 e0       	ldi	r24, 0x01	; 1
     daa:	0e 94 4e 05 	call	0xa9c	; 0xa9c <OLED_goto_pos>
	OLED_print_string("PING PONG GAME");
     dae:	89 ed       	ldi	r24, 0xD9	; 217
     db0:	92 e0       	ldi	r25, 0x02	; 2
     db2:	0e 94 b0 05 	call	0xb60	; 0xb60 <OLED_print_string>
	uint8_t dir;
	
	CAN_message msg;
	set_msg_id(&msg ,STOP_PLAY_CAN_ID);
     db6:	66 e0       	ldi	r22, 0x06	; 6
     db8:	70 e0       	ldi	r23, 0x00	; 0
     dba:	ce 01       	movw	r24, r28
     dbc:	01 96       	adiw	r24, 0x01	; 1
     dbe:	0e 94 be 02 	call	0x57c	; 0x57c <set_msg_id>
	set_msg_length(&msg, 1);
     dc2:	61 e0       	ldi	r22, 0x01	; 1
     dc4:	ce 01       	movw	r24, r28
     dc6:	01 96       	adiw	r24, 0x01	; 1
     dc8:	0e 94 c2 02 	call	0x584	; 0x584 <set_msg_length>
	msg.data[0] = 1;
     dcc:	81 e0       	ldi	r24, 0x01	; 1
     dce:	8c 83       	std	Y+4, r24	; 0x04
	CAN_transmit(&msg,0);	
     dd0:	60 e0       	ldi	r22, 0x00	; 0
     dd2:	ce 01       	movw	r24, r28
     dd4:	01 96       	adiw	r24, 0x01	; 1
     dd6:	0e 94 c5 02 	call	0x58a	; 0x58a <CAN_transmit>
	
	if (back==0)
     dda:	11 11       	cpse	r17, r1
     ddc:	04 c0       	rjmp	.+8      	; 0xde6 <GUI_main_menu+0x6c>
	dir=curr_arrow_pos%2; 
     dde:	10 91 71 03 	lds	r17, 0x0371	; 0x800371 <curr_arrow_pos>
     de2:	11 70       	andi	r17, 0x01	; 1
     de4:	05 c0       	rjmp	.+10     	; 0xdf0 <GUI_main_menu+0x76>
	else 
	dir=!(curr_arrow_pos%2); 
     de6:	10 91 71 03 	lds	r17, 0x0371	; 0x800371 <curr_arrow_pos>
     dea:	81 e0       	ldi	r24, 0x01	; 1
     dec:	18 27       	eor	r17, r24
     dee:	11 70       	andi	r17, 0x01	; 1
	

	if(page ==2){
     df0:	02 30       	cpi	r16, 0x02	; 2
     df2:	61 f4       	brne	.+24     	; 0xe0c <GUI_main_menu+0x92>
		OLED_goto_pos(3,32);
     df4:	60 e2       	ldi	r22, 0x20	; 32
     df6:	83 e0       	ldi	r24, 0x03	; 3
     df8:	0e 94 4e 05 	call	0xa9c	; 0xa9c <OLED_goto_pos>
		OLED_print_string("Quit");
     dfc:	88 ee       	ldi	r24, 0xE8	; 232
     dfe:	92 e0       	ldi	r25, 0x02	; 2
     e00:	0e 94 b0 05 	call	0xb60	; 0xb60 <OLED_print_string>
		move_arrow(dir);
     e04:	81 2f       	mov	r24, r17
     e06:	0e 94 ab 06 	call	0xd56	; 0xd56 <move_arrow>
     e0a:	29 c0       	rjmp	.+82     	; 0xe5e <GUI_main_menu+0xe4>
		
	}
	else if(page == 1){
     e0c:	01 30       	cpi	r16, 0x01	; 1
     e0e:	a1 f4       	brne	.+40     	; 0xe38 <GUI_main_menu+0xbe>
		OLED_goto_pos(3,32);
     e10:	60 e2       	ldi	r22, 0x20	; 32
     e12:	83 e0       	ldi	r24, 0x03	; 3
     e14:	0e 94 4e 05 	call	0xa9c	; 0xa9c <OLED_goto_pos>
		OLED_print_string("Calibrate");
     e18:	8d ee       	ldi	r24, 0xED	; 237
     e1a:	92 e0       	ldi	r25, 0x02	; 2
     e1c:	0e 94 b0 05 	call	0xb60	; 0xb60 <OLED_print_string>
		OLED_goto_pos(5,32);
     e20:	60 e2       	ldi	r22, 0x20	; 32
     e22:	85 e0       	ldi	r24, 0x05	; 5
     e24:	0e 94 4e 05 	call	0xa9c	; 0xa9c <OLED_goto_pos>
		OLED_print_string("Set difficulty");
     e28:	87 ef       	ldi	r24, 0xF7	; 247
     e2a:	92 e0       	ldi	r25, 0x02	; 2
     e2c:	0e 94 b0 05 	call	0xb60	; 0xb60 <OLED_print_string>
		move_arrow(dir);
     e30:	81 2f       	mov	r24, r17
     e32:	0e 94 ab 06 	call	0xd56	; 0xd56 <move_arrow>
     e36:	13 c0       	rjmp	.+38     	; 0xe5e <GUI_main_menu+0xe4>
	}
	else {
		OLED_goto_pos(3,32);
     e38:	60 e2       	ldi	r22, 0x20	; 32
     e3a:	83 e0       	ldi	r24, 0x03	; 3
     e3c:	0e 94 4e 05 	call	0xa9c	; 0xa9c <OLED_goto_pos>
		OLED_print_string("Play");
     e40:	86 e0       	ldi	r24, 0x06	; 6
     e42:	93 e0       	ldi	r25, 0x03	; 3
     e44:	0e 94 b0 05 	call	0xb60	; 0xb60 <OLED_print_string>
		OLED_goto_pos(5,32);
     e48:	60 e2       	ldi	r22, 0x20	; 32
     e4a:	85 e0       	ldi	r24, 0x05	; 5
     e4c:	0e 94 4e 05 	call	0xa9c	; 0xa9c <OLED_goto_pos>
		OLED_print_string("See/reset hs");		
     e50:	8b e0       	ldi	r24, 0x0B	; 11
     e52:	93 e0       	ldi	r25, 0x03	; 3
     e54:	0e 94 b0 05 	call	0xb60	; 0xb60 <OLED_print_string>
		move_arrow(dir);
     e58:	81 2f       	mov	r24, r17
     e5a:	0e 94 ab 06 	call	0xd56	; 0xd56 <move_arrow>
	}
}
     e5e:	2b 96       	adiw	r28, 0x0b	; 11
     e60:	0f b6       	in	r0, 0x3f	; 63
     e62:	f8 94       	cli
     e64:	de bf       	out	0x3e, r29	; 62
     e66:	0f be       	out	0x3f, r0	; 63
     e68:	cd bf       	out	0x3d, r28	; 61
     e6a:	df 91       	pop	r29
     e6c:	cf 91       	pop	r28
     e6e:	1f 91       	pop	r17
     e70:	0f 91       	pop	r16
     e72:	08 95       	ret

00000e74 <check_game>:
	n->fun_ptr= fun_ptr;
}


void check_game(CAN_message * score_message)
{
     e74:	cf 93       	push	r28
     e76:	df 93       	push	r29
	if (score_message->id==SCORE_CAN_ID){
     e78:	fc 01       	movw	r30, r24
     e7a:	20 81       	ld	r18, Z
     e7c:	31 81       	ldd	r19, Z+1	; 0x01
     e7e:	22 30       	cpi	r18, 0x02	; 2
     e80:	31 05       	cpc	r19, r1
     e82:	29 f5       	brne	.+74     	; 0xece <check_game+0x5a>
     e84:	ec 01       	movw	r28, r24
		display_highscore(score_message->data[0]);
     e86:	83 81       	ldd	r24, Z+3	; 0x03
     e88:	0e 94 88 06 	call	0xd10	; 0xd10 <display_highscore>
		printf("highscore received: %d\n\r",score_message->data[0]);
     e8c:	8b 81       	ldd	r24, Y+3	; 0x03
     e8e:	1f 92       	push	r1
     e90:	8f 93       	push	r24
     e92:	88 e1       	ldi	r24, 0x18	; 24
     e94:	93 e0       	ldi	r25, 0x03	; 3
     e96:	9f 93       	push	r25
     e98:	8f 93       	push	r24
     e9a:	0e 94 dc 0a 	call	0x15b8	; 0x15b8 <printf>
		score_message->id=99;
     e9e:	83 e6       	ldi	r24, 0x63	; 99
     ea0:	90 e0       	ldi	r25, 0x00	; 0
     ea2:	99 83       	std	Y+1, r25	; 0x01
     ea4:	88 83       	st	Y, r24
		set_current_node(get_current_node()->parent);
     ea6:	0e 94 94 06 	call	0xd28	; 0xd28 <get_current_node>
     eaa:	fc 01       	movw	r30, r24
     eac:	82 81       	ldd	r24, Z+2	; 0x02
     eae:	93 81       	ldd	r25, Z+3	; 0x03
     eb0:	0e 94 8f 06 	call	0xd1e	; 0xd1e <set_current_node>
		GUI_main_menu();
     eb4:	0e 94 bd 06 	call	0xd7a	; 0xd7a <GUI_main_menu>
		playing=0;
     eb8:	10 92 6f 03 	sts	0x036F, r1	; 0x80036f <playing>
		counter_trials +=1;
     ebc:	80 91 6e 03 	lds	r24, 0x036E	; 0x80036e <__data_end>
     ec0:	8f 5f       	subi	r24, 0xFF	; 255
     ec2:	80 93 6e 03 	sts	0x036E, r24	; 0x80036e <__data_end>
     ec6:	0f 90       	pop	r0
     ec8:	0f 90       	pop	r0
     eca:	0f 90       	pop	r0
     ecc:	0f 90       	pop	r0
	}
}
     ece:	df 91       	pop	r29
     ed0:	cf 91       	pop	r28
     ed2:	08 95       	ret

00000ed4 <GUI_init>:
	
}


void GUI_init(){
	OLED_clear();
     ed4:	0e 94 57 05 	call	0xaae	; 0xaae <OLED_clear>
	OLED_goto_pos(1,8);
     ed8:	68 e0       	ldi	r22, 0x08	; 8
     eda:	81 e0       	ldi	r24, 0x01	; 1
     edc:	0e 94 4e 05 	call	0xa9c	; 0xa9c <OLED_goto_pos>
	OLED_print_string("PING PONG GAME");
     ee0:	89 ed       	ldi	r24, 0xD9	; 217
     ee2:	92 e0       	ldi	r25, 0x02	; 2
     ee4:	0e 94 b0 05 	call	0xb60	; 0xb60 <OLED_print_string>
	OLED_goto_pos(3,32);
     ee8:	60 e2       	ldi	r22, 0x20	; 32
     eea:	83 e0       	ldi	r24, 0x03	; 3
     eec:	0e 94 4e 05 	call	0xa9c	; 0xa9c <OLED_goto_pos>
	OLED_print_string("Play");
     ef0:	86 e0       	ldi	r24, 0x06	; 6
     ef2:	93 e0       	ldi	r25, 0x03	; 3
     ef4:	0e 94 b0 05 	call	0xb60	; 0xb60 <OLED_print_string>
	OLED_goto_pos(5,32);
     ef8:	60 e2       	ldi	r22, 0x20	; 32
     efa:	85 e0       	ldi	r24, 0x05	; 5
     efc:	0e 94 4e 05 	call	0xa9c	; 0xa9c <OLED_goto_pos>
	OLED_print_string("See hs");		
     f00:	81 e3       	ldi	r24, 0x31	; 49
     f02:	93 e0       	ldi	r25, 0x03	; 3
     f04:	0e 94 b0 05 	call	0xb60	; 0xb60 <OLED_print_string>
     f08:	08 95       	ret

00000f0a <GUI_menu_init>:
	}
}

void GUI_menu_init(){
	
	main_menu= new_node("Main Menu", NULL);
     f0a:	60 e0       	ldi	r22, 0x00	; 0
     f0c:	70 e0       	ldi	r23, 0x00	; 0
     f0e:	88 e3       	ldi	r24, 0x38	; 56
     f10:	93 e0       	ldi	r25, 0x03	; 3
     f12:	0e 94 62 06 	call	0xcc4	; 0xcc4 <new_node>
     f16:	90 93 90 03 	sts	0x0390, r25	; 0x800390 <main_menu+0x1>
     f1a:	80 93 8f 03 	sts	0x038F, r24	; 0x80038f <main_menu>
	curr_mode= main_menu;
     f1e:	90 93 82 03 	sts	0x0382, r25	; 0x800382 <curr_mode+0x1>
     f22:	80 93 81 03 	sts	0x0381, r24	; 0x800381 <curr_mode>
	play= new_node("Play", main_menu);
     f26:	bc 01       	movw	r22, r24
     f28:	86 e0       	ldi	r24, 0x06	; 6
     f2a:	93 e0       	ldi	r25, 0x03	; 3
     f2c:	0e 94 62 06 	call	0xcc4	; 0xcc4 <new_node>
     f30:	90 93 86 03 	sts	0x0386, r25	; 0x800386 <play+0x1>
     f34:	80 93 85 03 	sts	0x0385, r24	; 0x800385 <play>
	sr_highscore= new_node("See Highscore", main_menu);
     f38:	60 91 8f 03 	lds	r22, 0x038F	; 0x80038f <main_menu>
     f3c:	70 91 90 03 	lds	r23, 0x0390	; 0x800390 <main_menu+0x1>
     f40:	82 e4       	ldi	r24, 0x42	; 66
     f42:	93 e0       	ldi	r25, 0x03	; 3
     f44:	0e 94 62 06 	call	0xcc4	; 0xcc4 <new_node>
     f48:	90 93 84 03 	sts	0x0384, r25	; 0x800384 <sr_highscore+0x1>
     f4c:	80 93 83 03 	sts	0x0383, r24	; 0x800383 <sr_highscore>
	calibrate= new_node("Calibrate", main_menu);
     f50:	60 91 8f 03 	lds	r22, 0x038F	; 0x80038f <main_menu>
     f54:	70 91 90 03 	lds	r23, 0x0390	; 0x800390 <main_menu+0x1>
     f58:	8d ee       	ldi	r24, 0xED	; 237
     f5a:	92 e0       	ldi	r25, 0x02	; 2
     f5c:	0e 94 62 06 	call	0xcc4	; 0xcc4 <new_node>
     f60:	90 93 8e 03 	sts	0x038E, r25	; 0x80038e <calibrate+0x1>
     f64:	80 93 8d 03 	sts	0x038D, r24	; 0x80038d <calibrate>
	set_diff= new_node("Set Difficulty", main_menu);
     f68:	60 91 8f 03 	lds	r22, 0x038F	; 0x80038f <main_menu>
     f6c:	70 91 90 03 	lds	r23, 0x0390	; 0x800390 <main_menu+0x1>
     f70:	80 e5       	ldi	r24, 0x50	; 80
     f72:	93 e0       	ldi	r25, 0x03	; 3
     f74:	0e 94 62 06 	call	0xcc4	; 0xcc4 <new_node>
     f78:	90 93 92 03 	sts	0x0392, r25	; 0x800392 <set_diff+0x1>
     f7c:	80 93 91 03 	sts	0x0391, r24	; 0x800391 <set_diff>
	quit= new_node("Quit", main_menu);
     f80:	60 91 8f 03 	lds	r22, 0x038F	; 0x80038f <main_menu>
     f84:	70 91 90 03 	lds	r23, 0x0390	; 0x800390 <main_menu+0x1>
     f88:	88 ee       	ldi	r24, 0xE8	; 232
     f8a:	92 e0       	ldi	r25, 0x02	; 2
     f8c:	0e 94 62 06 	call	0xcc4	; 0xcc4 <new_node>
     f90:	90 93 80 03 	sts	0x0380, r25	; 0x800380 <quit+0x1>
     f94:	80 93 7f 03 	sts	0x037F, r24	; 0x80037f <quit>
	
	set_child(main_menu, play, 0);
     f98:	60 91 85 03 	lds	r22, 0x0385	; 0x800385 <play>
     f9c:	70 91 86 03 	lds	r23, 0x0386	; 0x800386 <play+0x1>
     fa0:	40 e0       	ldi	r20, 0x00	; 0
     fa2:	80 91 8f 03 	lds	r24, 0x038F	; 0x80038f <main_menu>
     fa6:	90 91 90 03 	lds	r25, 0x0390	; 0x800390 <main_menu+0x1>
     faa:	0e 94 99 06 	call	0xd32	; 0xd32 <set_child>
	set_child(main_menu, sr_highscore, 1);
     fae:	60 91 83 03 	lds	r22, 0x0383	; 0x800383 <sr_highscore>
     fb2:	70 91 84 03 	lds	r23, 0x0384	; 0x800384 <sr_highscore+0x1>
     fb6:	41 e0       	ldi	r20, 0x01	; 1
     fb8:	80 91 8f 03 	lds	r24, 0x038F	; 0x80038f <main_menu>
     fbc:	90 91 90 03 	lds	r25, 0x0390	; 0x800390 <main_menu+0x1>
     fc0:	0e 94 99 06 	call	0xd32	; 0xd32 <set_child>
	set_child(main_menu, calibrate, 2);
     fc4:	60 91 8d 03 	lds	r22, 0x038D	; 0x80038d <calibrate>
     fc8:	70 91 8e 03 	lds	r23, 0x038E	; 0x80038e <calibrate+0x1>
     fcc:	42 e0       	ldi	r20, 0x02	; 2
     fce:	80 91 8f 03 	lds	r24, 0x038F	; 0x80038f <main_menu>
     fd2:	90 91 90 03 	lds	r25, 0x0390	; 0x800390 <main_menu+0x1>
     fd6:	0e 94 99 06 	call	0xd32	; 0xd32 <set_child>
	set_child(main_menu, set_diff, 3);	
     fda:	60 91 91 03 	lds	r22, 0x0391	; 0x800391 <set_diff>
     fde:	70 91 92 03 	lds	r23, 0x0392	; 0x800392 <set_diff+0x1>
     fe2:	43 e0       	ldi	r20, 0x03	; 3
     fe4:	80 91 8f 03 	lds	r24, 0x038F	; 0x80038f <main_menu>
     fe8:	90 91 90 03 	lds	r25, 0x0390	; 0x800390 <main_menu+0x1>
     fec:	0e 94 99 06 	call	0xd32	; 0xd32 <set_child>
	set_child(main_menu, quit, 4);	
     ff0:	60 91 7f 03 	lds	r22, 0x037F	; 0x80037f <quit>
     ff4:	70 91 80 03 	lds	r23, 0x0380	; 0x800380 <quit+0x1>
     ff8:	44 e0       	ldi	r20, 0x04	; 4
     ffa:	80 91 8f 03 	lds	r24, 0x038F	; 0x80038f <main_menu>
     ffe:	90 91 90 03 	lds	r25, 0x0390	; 0x800390 <main_menu+0x1>
    1002:	0e 94 99 06 	call	0xd32	; 0xd32 <set_child>
	
	set_fun(main_menu,GUI_main_menu);
    1006:	6d eb       	ldi	r22, 0xBD	; 189
    1008:	76 e0       	ldi	r23, 0x06	; 6
    100a:	80 91 8f 03 	lds	r24, 0x038F	; 0x80038f <main_menu>
    100e:	90 91 90 03 	lds	r25, 0x0390	; 0x800390 <main_menu+0x1>
    1012:	0e 94 a7 06 	call	0xd4e	; 0xd4e <set_fun>
	set_fun(play,f_play);
    1016:	63 ec       	ldi	r22, 0xC3	; 195
    1018:	75 e0       	ldi	r23, 0x05	; 5
    101a:	80 91 85 03 	lds	r24, 0x0385	; 0x800385 <play>
    101e:	90 91 86 03 	lds	r25, 0x0386	; 0x800386 <play+0x1>
    1022:	0e 94 a7 06 	call	0xd4e	; 0xd4e <set_fun>
	set_fun(sr_highscore,f_sr_highscore);
    1026:	6a ef       	ldi	r22, 0xFA	; 250
    1028:	75 e0       	ldi	r23, 0x05	; 5
    102a:	80 91 83 03 	lds	r24, 0x0383	; 0x800383 <sr_highscore>
    102e:	90 91 84 03 	lds	r25, 0x0384	; 0x800384 <sr_highscore+0x1>
    1032:	0e 94 a7 06 	call	0xd4e	; 0xd4e <set_fun>
	set_fun(calibrate,f_calibrate);
    1036:	61 e4       	ldi	r22, 0x41	; 65
    1038:	76 e0       	ldi	r23, 0x06	; 6
    103a:	80 91 8d 03 	lds	r24, 0x038D	; 0x80038d <calibrate>
    103e:	90 91 8e 03 	lds	r25, 0x038E	; 0x80038e <calibrate+0x1>
    1042:	0e 94 a7 06 	call	0xd4e	; 0xd4e <set_fun>
	set_fun(set_diff,f_set_diff);
    1046:	6c e4       	ldi	r22, 0x4C	; 76
    1048:	76 e0       	ldi	r23, 0x06	; 6
    104a:	80 91 91 03 	lds	r24, 0x0391	; 0x800391 <set_diff>
    104e:	90 91 92 03 	lds	r25, 0x0392	; 0x800392 <set_diff+0x1>
    1052:	0e 94 a7 06 	call	0xd4e	; 0xd4e <set_fun>
	set_fun(quit,f_quit);
    1056:	67 e5       	ldi	r22, 0x57	; 87
    1058:	76 e0       	ldi	r23, 0x06	; 6
    105a:	80 91 7f 03 	lds	r24, 0x037F	; 0x80037f <quit>
    105e:	90 91 80 03 	lds	r25, 0x0380	; 0x800380 <quit+0x1>
    1062:	0e 94 a7 06 	call	0xd4e	; 0xd4e <set_fun>
	GUI_init();
    1066:	0e 94 6a 07 	call	0xed4	; 0xed4 <GUI_init>
	OLED_print_arrow(3,15);
    106a:	6f e0       	ldi	r22, 0x0F	; 15
    106c:	83 e0       	ldi	r24, 0x03	; 3
    106e:	0e 94 83 05 	call	0xb06	; 0xb06 <OLED_print_arrow>
    1072:	08 95       	ret

00001074 <menu_navigation>:
}


void menu_navigation(){
		
	joystick = get_joypos();
    1074:	0e 94 72 03 	call	0x6e4	; 0x6e4 <get_joypos>
    1078:	20 93 87 03 	sts	0x0387, r18	; 0x800387 <joystick>
    107c:	30 93 88 03 	sts	0x0388, r19	; 0x800388 <joystick+0x1>
    1080:	40 93 89 03 	sts	0x0389, r20	; 0x800389 <joystick+0x2>
    1084:	50 93 8a 03 	sts	0x038A, r21	; 0x80038a <joystick+0x3>
    1088:	60 93 8b 03 	sts	0x038B, r22	; 0x80038b <joystick+0x4>
    108c:	70 93 8c 03 	sts	0x038C, r23	; 0x80038c <joystick+0x5>
	if (curr_mode->title == "Main Menu"){
    1090:	e0 91 81 03 	lds	r30, 0x0381	; 0x800381 <curr_mode>
    1094:	f0 91 82 03 	lds	r31, 0x0382	; 0x800382 <curr_mode+0x1>
    1098:	80 81       	ld	r24, Z
    109a:	91 81       	ldd	r25, Z+1	; 0x01
    109c:	88 53       	subi	r24, 0x38	; 56
    109e:	93 40       	sbci	r25, 0x03	; 3
    10a0:	09 f0       	breq	.+2      	; 0x10a4 <menu_navigation+0x30>
    10a2:	55 c0       	rjmp	.+170    	; 0x114e <menu_navigation+0xda>
		if(joystick.y_currdir == "DOWN" && curr_arrow_pos<END_MAIN_MENU){	
    10a4:	20 91 8b 03 	lds	r18, 0x038B	; 0x80038b <joystick+0x4>
    10a8:	30 91 8c 03 	lds	r19, 0x038C	; 0x80038c <joystick+0x5>
    10ac:	82 e0       	ldi	r24, 0x02	; 2
    10ae:	2c 39       	cpi	r18, 0x9C	; 156
    10b0:	38 07       	cpc	r19, r24
    10b2:	a9 f4       	brne	.+42     	; 0x10de <menu_navigation+0x6a>
    10b4:	80 91 71 03 	lds	r24, 0x0371	; 0x800371 <curr_arrow_pos>
    10b8:	84 30       	cpi	r24, 0x04	; 4
    10ba:	88 f4       	brcc	.+34     	; 0x10de <menu_navigation+0x6a>
			
			if (curr_arrow_pos%2 ==0 ){		
    10bc:	80 fd       	sbrc	r24, 0
    10be:	04 c0       	rjmp	.+8      	; 0x10c8 <menu_navigation+0x54>
				move_arrow(0);
    10c0:	80 e0       	ldi	r24, 0x00	; 0
    10c2:	0e 94 ab 06 	call	0xd56	; 0xd56 <move_arrow>
    10c6:	05 c0       	rjmp	.+10     	; 0x10d2 <menu_navigation+0x5e>
			}
			else GUI_main_menu(((int)(curr_arrow_pos/2))+1,0);
    10c8:	86 95       	lsr	r24
    10ca:	60 e0       	ldi	r22, 0x00	; 0
    10cc:	8f 5f       	subi	r24, 0xFF	; 255
    10ce:	0e 94 bd 06 	call	0xd7a	; 0xd7a <GUI_main_menu>
			
			curr_arrow_pos=curr_arrow_pos+1;			
    10d2:	80 91 71 03 	lds	r24, 0x0371	; 0x800371 <curr_arrow_pos>
    10d6:	8f 5f       	subi	r24, 0xFF	; 255
    10d8:	80 93 71 03 	sts	0x0371, r24	; 0x800371 <curr_arrow_pos>
    10dc:	17 c0       	rjmp	.+46     	; 0x110c <menu_navigation+0x98>
			}
		else if(joystick.y_currdir == "UP" && curr_arrow_pos>0 ){
    10de:	21 5a       	subi	r18, 0xA1	; 161
    10e0:	32 40       	sbci	r19, 0x02	; 2
    10e2:	a1 f4       	brne	.+40     	; 0x110c <menu_navigation+0x98>
    10e4:	80 91 71 03 	lds	r24, 0x0371	; 0x800371 <curr_arrow_pos>
    10e8:	88 23       	and	r24, r24
    10ea:	81 f0       	breq	.+32     	; 0x110c <menu_navigation+0x98>
				
			if (curr_arrow_pos%2 ==1 ){		
    10ec:	80 ff       	sbrs	r24, 0
    10ee:	04 c0       	rjmp	.+8      	; 0x10f8 <menu_navigation+0x84>
				move_arrow(1);		
    10f0:	81 e0       	ldi	r24, 0x01	; 1
    10f2:	0e 94 ab 06 	call	0xd56	; 0xd56 <move_arrow>
    10f6:	05 c0       	rjmp	.+10     	; 0x1102 <menu_navigation+0x8e>
			}
			else GUI_main_menu(((int)(curr_arrow_pos/2))-1,0);
    10f8:	86 95       	lsr	r24
    10fa:	60 e0       	ldi	r22, 0x00	; 0
    10fc:	81 50       	subi	r24, 0x01	; 1
    10fe:	0e 94 bd 06 	call	0xd7a	; 0xd7a <GUI_main_menu>
			curr_arrow_pos=curr_arrow_pos-1;
    1102:	80 91 71 03 	lds	r24, 0x0371	; 0x800371 <curr_arrow_pos>
    1106:	81 50       	subi	r24, 0x01	; 1
    1108:	80 93 71 03 	sts	0x0371, r24	; 0x800371 <curr_arrow_pos>
		}

		
		if(joystick.x_currdir == "RIGHT"){
    110c:	80 91 89 03 	lds	r24, 0x0389	; 0x800389 <joystick+0x2>
    1110:	90 91 8a 03 	lds	r25, 0x038A	; 0x80038a <joystick+0x3>
    1114:	82 59       	subi	r24, 0x92	; 146
    1116:	92 40       	sbci	r25, 0x02	; 2
    1118:	09 f0       	breq	.+2      	; 0x111c <menu_navigation+0xa8>
    111a:	60 c0       	rjmp	.+192    	; 0x11dc <menu_navigation+0x168>
			set_current_node(get_current_node()->child[curr_arrow_pos]);
    111c:	0e 94 94 06 	call	0xd28	; 0xd28 <get_current_node>
    1120:	20 91 71 03 	lds	r18, 0x0371	; 0x800371 <curr_arrow_pos>
    1124:	30 e0       	ldi	r19, 0x00	; 0
    1126:	2e 5f       	subi	r18, 0xFE	; 254
    1128:	3f 4f       	sbci	r19, 0xFF	; 255
    112a:	22 0f       	add	r18, r18
    112c:	33 1f       	adc	r19, r19
    112e:	82 0f       	add	r24, r18
    1130:	93 1f       	adc	r25, r19
    1132:	fc 01       	movw	r30, r24
    1134:	80 81       	ld	r24, Z
    1136:	91 81       	ldd	r25, Z+1	; 0x01
    1138:	0e 94 8f 06 	call	0xd1e	; 0xd1e <set_current_node>
			get_current_node()->fun_ptr();
    113c:	0e 94 94 06 	call	0xd28	; 0xd28 <get_current_node>
    1140:	dc 01       	movw	r26, r24
    1142:	1e 96       	adiw	r26, 0x0e	; 14
    1144:	ed 91       	ld	r30, X+
    1146:	fc 91       	ld	r31, X
    1148:	1f 97       	sbiw	r26, 0x0f	; 15
    114a:	09 95       	icall
    114c:	47 c0       	rjmp	.+142    	; 0x11dc <menu_navigation+0x168>
		}
		
	}

	else{
		if(joystick.x_currdir == "LEFT" && !playing){
    114e:	80 91 89 03 	lds	r24, 0x0389	; 0x800389 <joystick+0x2>
    1152:	90 91 8a 03 	lds	r25, 0x038A	; 0x80038a <joystick+0x3>
    1156:	8d 58       	subi	r24, 0x8D	; 141
    1158:	92 40       	sbci	r25, 0x02	; 2
    115a:	d1 f4       	brne	.+52     	; 0x1190 <menu_navigation+0x11c>
    115c:	80 91 6f 03 	lds	r24, 0x036F	; 0x80036f <playing>
    1160:	81 11       	cpse	r24, r1
    1162:	16 c0       	rjmp	.+44     	; 0x1190 <menu_navigation+0x11c>
			set_current_node(get_current_node()->parent);
    1164:	0e 94 94 06 	call	0xd28	; 0xd28 <get_current_node>
    1168:	fc 01       	movw	r30, r24
    116a:	82 81       	ldd	r24, Z+2	; 0x02
    116c:	93 81       	ldd	r25, Z+3	; 0x03
    116e:	0e 94 8f 06 	call	0xd1e	; 0xd1e <set_current_node>
			get_current_node()->fun_ptr(((int)(curr_arrow_pos/2)),1);
    1172:	0e 94 94 06 	call	0xd28	; 0xd28 <get_current_node>
    1176:	dc 01       	movw	r26, r24
    1178:	1e 96       	adiw	r26, 0x0e	; 14
    117a:	ed 91       	ld	r30, X+
    117c:	fc 91       	ld	r31, X
    117e:	1f 97       	sbiw	r26, 0x0f	; 15
    1180:	80 91 71 03 	lds	r24, 0x0371	; 0x800371 <curr_arrow_pos>
    1184:	86 95       	lsr	r24
    1186:	61 e0       	ldi	r22, 0x01	; 1
    1188:	70 e0       	ldi	r23, 0x00	; 0
    118a:	90 e0       	ldi	r25, 0x00	; 0
    118c:	09 95       	icall
    118e:	26 c0       	rjmp	.+76     	; 0x11dc <menu_navigation+0x168>
		}
		else if (joystick.y_currdir == "UP" && joystick.y_pos > 80 && playing ){
    1190:	80 91 8b 03 	lds	r24, 0x038B	; 0x80038b <joystick+0x4>
    1194:	90 91 8c 03 	lds	r25, 0x038C	; 0x80038c <joystick+0x5>
    1198:	81 5a       	subi	r24, 0xA1	; 161
    119a:	92 40       	sbci	r25, 0x02	; 2
    119c:	f9 f4       	brne	.+62     	; 0x11dc <menu_navigation+0x168>
    119e:	80 91 88 03 	lds	r24, 0x0388	; 0x800388 <joystick+0x1>
    11a2:	81 35       	cpi	r24, 0x51	; 81
    11a4:	d8 f0       	brcs	.+54     	; 0x11dc <menu_navigation+0x168>
    11a6:	80 91 6f 03 	lds	r24, 0x036F	; 0x80036f <playing>
    11aa:	88 23       	and	r24, r24
    11ac:	b9 f0       	breq	.+46     	; 0x11dc <menu_navigation+0x168>
			set_current_node(get_current_node()->parent);
    11ae:	0e 94 94 06 	call	0xd28	; 0xd28 <get_current_node>
    11b2:	fc 01       	movw	r30, r24
    11b4:	82 81       	ldd	r24, Z+2	; 0x02
    11b6:	93 81       	ldd	r25, Z+3	; 0x03
    11b8:	0e 94 8f 06 	call	0xd1e	; 0xd1e <set_current_node>
			get_current_node()->fun_ptr(((int)(curr_arrow_pos/2)),1);
    11bc:	0e 94 94 06 	call	0xd28	; 0xd28 <get_current_node>
    11c0:	dc 01       	movw	r26, r24
    11c2:	1e 96       	adiw	r26, 0x0e	; 14
    11c4:	ed 91       	ld	r30, X+
    11c6:	fc 91       	ld	r31, X
    11c8:	1f 97       	sbiw	r26, 0x0f	; 15
    11ca:	80 91 71 03 	lds	r24, 0x0371	; 0x800371 <curr_arrow_pos>
    11ce:	86 95       	lsr	r24
    11d0:	61 e0       	ldi	r22, 0x01	; 1
    11d2:	70 e0       	ldi	r23, 0x00	; 0
    11d4:	90 e0       	ldi	r25, 0x00	; 0
    11d6:	09 95       	icall
			playing=0;
    11d8:	10 92 6f 03 	sts	0x036F, r1	; 0x80036f <playing>
		}

			
			
	}
	printf("%d\n\r",playing);
    11dc:	80 91 6f 03 	lds	r24, 0x036F	; 0x80036f <playing>
    11e0:	1f 92       	push	r1
    11e2:	8f 93       	push	r24
    11e4:	8c e2       	ldi	r24, 0x2C	; 44
    11e6:	93 e0       	ldi	r25, 0x03	; 3
    11e8:	9f 93       	push	r25
    11ea:	8f 93       	push	r24
    11ec:	0e 94 dc 0a 	call	0x15b8	; 0x15b8 <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    11f0:	bf e3       	ldi	r27, 0x3F	; 63
    11f2:	ed e0       	ldi	r30, 0x0D	; 13
    11f4:	f3 e0       	ldi	r31, 0x03	; 3
    11f6:	b1 50       	subi	r27, 0x01	; 1
    11f8:	e0 40       	sbci	r30, 0x00	; 0
    11fa:	f0 40       	sbci	r31, 0x00	; 0
    11fc:	e1 f7       	brne	.-8      	; 0x11f6 <menu_navigation+0x182>
    11fe:	00 c0       	rjmp	.+0      	; 0x1200 <menu_navigation+0x18c>
    1200:	00 00       	nop
	node * par_node = (get_current_node()->parent);
	char * title = par_node->title;
	char * title2 = get_current_node()->title;
	//printf("parent: %s, current node: %s CURRENT ARROW=%d\n", title, title2,curr_arrow_pos);
	_delay_ms(1000);
}
    1202:	0f 90       	pop	r0
    1204:	0f 90       	pop	r0
    1206:	0f 90       	pop	r0
    1208:	0f 90       	pop	r0
    120a:	08 95       	ret

0000120c <is_playing>:


uint8_t is_playing(){
	return playing;
}
    120c:	80 91 6f 03 	lds	r24, 0x036F	; 0x80036f <playing>
    1210:	08 95       	ret

00001212 <play_init>:
CAN_message score_message;
void play_init(){
	printf("START NODE 1\n\r");
    1212:	8f e5       	ldi	r24, 0x5F	; 95
    1214:	93 e0       	ldi	r25, 0x03	; 3
    1216:	9f 93       	push	r25
    1218:	8f 93       	push	r24
    121a:	0e 94 dc 0a 	call	0x15b8	; 0x15b8 <printf>

}
    121e:	0f 90       	pop	r0
    1220:	0f 90       	pop	r0
    1222:	08 95       	ret

00001224 <routine>:
void routine(){
	menu_navigation();
    1224:	0e 94 3a 08 	call	0x1074	; 0x1074 <menu_navigation>
	//CAN_send_slider();
	if (is_playing())
    1228:	0e 94 06 09 	call	0x120c	; 0x120c <is_playing>
    122c:	81 11       	cpse	r24, r1
		CAN_send_joypos();
    122e:	0e 94 83 04 	call	0x906	; 0x906 <CAN_send_joypos>
	CAN_receive(&score_message);
    1232:	84 e7       	ldi	r24, 0x74	; 116
    1234:	93 e0       	ldi	r25, 0x03	; 3
    1236:	0e 94 2c 03 	call	0x658	; 0x658 <CAN_receive>
	check_game(&score_message);
    123a:	84 e7       	ldi	r24, 0x74	; 116
    123c:	93 e0       	ldi	r25, 0x03	; 3
    123e:	0e 94 3a 07 	call	0xe74	; 0xe74 <check_game>
    1242:	2f e3       	ldi	r18, 0x3F	; 63
    1244:	8d e0       	ldi	r24, 0x0D	; 13
    1246:	93 e0       	ldi	r25, 0x03	; 3
    1248:	21 50       	subi	r18, 0x01	; 1
    124a:	80 40       	sbci	r24, 0x00	; 0
    124c:	90 40       	sbci	r25, 0x00	; 0
    124e:	e1 f7       	brne	.-8      	; 0x1248 <routine+0x24>
    1250:	00 c0       	rjmp	.+0      	; 0x1252 <routine+0x2e>
    1252:	00 00       	nop
    1254:	08 95       	ret

00001256 <main>:




int main(){
	uart_init(9600);
    1256:	80 e8       	ldi	r24, 0x80	; 128
    1258:	95 e2       	ldi	r25, 0x25	; 37
    125a:	0e 94 ef 01 	call	0x3de	; 0x3de <uart_init>
	stdout = &mystdout;
    125e:	86 e0       	ldi	r24, 0x06	; 6
    1260:	91 e0       	ldi	r25, 0x01	; 1
    1262:	90 93 9b 03 	sts	0x039B, r25	; 0x80039b <__iob+0x3>
    1266:	80 93 9a 03 	sts	0x039A, r24	; 0x80039a <__iob+0x2>
	xmem_init();
    126a:	0e 94 fd 01 	call	0x3fa	; 0x3fa <xmem_init>
	PWM_init();
    126e:	0e 94 0e 02 	call	0x41c	; 0x41c <PWM_init>
	OLED_init();
    1272:	0e 94 f0 04 	call	0x9e0	; 0x9e0 <OLED_init>
	OLED_clear();
    1276:	0e 94 57 05 	call	0xaae	; 0xaae <OLED_clear>
	GUI_menu_init();
    127a:	0e 94 85 07 	call	0xf0a	; 0xf0a <GUI_menu_init>
	MCP2515_init();
    127e:	0e 94 8e 02 	call	0x51c	; 0x51c <MCP2515_init>
	button_init();
    1282:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <button_init>
	play_init();
    1286:	0e 94 09 09 	call	0x1212	; 0x1212 <play_init>
	while (1){
		routine();
    128a:	0e 94 12 09 	call	0x1224	; 0x1224 <routine>
    128e:	fd cf       	rjmp	.-6      	; 0x128a <main+0x34>

00001290 <__divmodhi4>:
    1290:	97 fb       	bst	r25, 7
    1292:	07 2e       	mov	r0, r23
    1294:	16 f4       	brtc	.+4      	; 0x129a <__divmodhi4+0xa>
    1296:	00 94       	com	r0
    1298:	07 d0       	rcall	.+14     	; 0x12a8 <__divmodhi4_neg1>
    129a:	77 fd       	sbrc	r23, 7
    129c:	09 d0       	rcall	.+18     	; 0x12b0 <__divmodhi4_neg2>
    129e:	0e 94 5c 09 	call	0x12b8	; 0x12b8 <__udivmodhi4>
    12a2:	07 fc       	sbrc	r0, 7
    12a4:	05 d0       	rcall	.+10     	; 0x12b0 <__divmodhi4_neg2>
    12a6:	3e f4       	brtc	.+14     	; 0x12b6 <__divmodhi4_exit>

000012a8 <__divmodhi4_neg1>:
    12a8:	90 95       	com	r25
    12aa:	81 95       	neg	r24
    12ac:	9f 4f       	sbci	r25, 0xFF	; 255
    12ae:	08 95       	ret

000012b0 <__divmodhi4_neg2>:
    12b0:	70 95       	com	r23
    12b2:	61 95       	neg	r22
    12b4:	7f 4f       	sbci	r23, 0xFF	; 255

000012b6 <__divmodhi4_exit>:
    12b6:	08 95       	ret

000012b8 <__udivmodhi4>:
    12b8:	aa 1b       	sub	r26, r26
    12ba:	bb 1b       	sub	r27, r27
    12bc:	51 e1       	ldi	r21, 0x11	; 17
    12be:	07 c0       	rjmp	.+14     	; 0x12ce <__udivmodhi4_ep>

000012c0 <__udivmodhi4_loop>:
    12c0:	aa 1f       	adc	r26, r26
    12c2:	bb 1f       	adc	r27, r27
    12c4:	a6 17       	cp	r26, r22
    12c6:	b7 07       	cpc	r27, r23
    12c8:	10 f0       	brcs	.+4      	; 0x12ce <__udivmodhi4_ep>
    12ca:	a6 1b       	sub	r26, r22
    12cc:	b7 0b       	sbc	r27, r23

000012ce <__udivmodhi4_ep>:
    12ce:	88 1f       	adc	r24, r24
    12d0:	99 1f       	adc	r25, r25
    12d2:	5a 95       	dec	r21
    12d4:	a9 f7       	brne	.-22     	; 0x12c0 <__udivmodhi4_loop>
    12d6:	80 95       	com	r24
    12d8:	90 95       	com	r25
    12da:	bc 01       	movw	r22, r24
    12dc:	cd 01       	movw	r24, r26
    12de:	08 95       	ret

000012e0 <malloc>:
    12e0:	0f 93       	push	r16
    12e2:	1f 93       	push	r17
    12e4:	cf 93       	push	r28
    12e6:	df 93       	push	r29
    12e8:	82 30       	cpi	r24, 0x02	; 2
    12ea:	91 05       	cpc	r25, r1
    12ec:	10 f4       	brcc	.+4      	; 0x12f2 <malloc+0x12>
    12ee:	82 e0       	ldi	r24, 0x02	; 2
    12f0:	90 e0       	ldi	r25, 0x00	; 0
    12f2:	e0 91 96 03 	lds	r30, 0x0396	; 0x800396 <__flp>
    12f6:	f0 91 97 03 	lds	r31, 0x0397	; 0x800397 <__flp+0x1>
    12fa:	20 e0       	ldi	r18, 0x00	; 0
    12fc:	30 e0       	ldi	r19, 0x00	; 0
    12fe:	a0 e0       	ldi	r26, 0x00	; 0
    1300:	b0 e0       	ldi	r27, 0x00	; 0
    1302:	30 97       	sbiw	r30, 0x00	; 0
    1304:	19 f1       	breq	.+70     	; 0x134c <malloc+0x6c>
    1306:	40 81       	ld	r20, Z
    1308:	51 81       	ldd	r21, Z+1	; 0x01
    130a:	02 81       	ldd	r16, Z+2	; 0x02
    130c:	13 81       	ldd	r17, Z+3	; 0x03
    130e:	48 17       	cp	r20, r24
    1310:	59 07       	cpc	r21, r25
    1312:	c8 f0       	brcs	.+50     	; 0x1346 <malloc+0x66>
    1314:	84 17       	cp	r24, r20
    1316:	95 07       	cpc	r25, r21
    1318:	69 f4       	brne	.+26     	; 0x1334 <malloc+0x54>
    131a:	10 97       	sbiw	r26, 0x00	; 0
    131c:	31 f0       	breq	.+12     	; 0x132a <malloc+0x4a>
    131e:	12 96       	adiw	r26, 0x02	; 2
    1320:	0c 93       	st	X, r16
    1322:	12 97       	sbiw	r26, 0x02	; 2
    1324:	13 96       	adiw	r26, 0x03	; 3
    1326:	1c 93       	st	X, r17
    1328:	27 c0       	rjmp	.+78     	; 0x1378 <malloc+0x98>
    132a:	00 93 96 03 	sts	0x0396, r16	; 0x800396 <__flp>
    132e:	10 93 97 03 	sts	0x0397, r17	; 0x800397 <__flp+0x1>
    1332:	22 c0       	rjmp	.+68     	; 0x1378 <malloc+0x98>
    1334:	21 15       	cp	r18, r1
    1336:	31 05       	cpc	r19, r1
    1338:	19 f0       	breq	.+6      	; 0x1340 <malloc+0x60>
    133a:	42 17       	cp	r20, r18
    133c:	53 07       	cpc	r21, r19
    133e:	18 f4       	brcc	.+6      	; 0x1346 <malloc+0x66>
    1340:	9a 01       	movw	r18, r20
    1342:	bd 01       	movw	r22, r26
    1344:	ef 01       	movw	r28, r30
    1346:	df 01       	movw	r26, r30
    1348:	f8 01       	movw	r30, r16
    134a:	db cf       	rjmp	.-74     	; 0x1302 <malloc+0x22>
    134c:	21 15       	cp	r18, r1
    134e:	31 05       	cpc	r19, r1
    1350:	f9 f0       	breq	.+62     	; 0x1390 <malloc+0xb0>
    1352:	28 1b       	sub	r18, r24
    1354:	39 0b       	sbc	r19, r25
    1356:	24 30       	cpi	r18, 0x04	; 4
    1358:	31 05       	cpc	r19, r1
    135a:	80 f4       	brcc	.+32     	; 0x137c <malloc+0x9c>
    135c:	8a 81       	ldd	r24, Y+2	; 0x02
    135e:	9b 81       	ldd	r25, Y+3	; 0x03
    1360:	61 15       	cp	r22, r1
    1362:	71 05       	cpc	r23, r1
    1364:	21 f0       	breq	.+8      	; 0x136e <malloc+0x8e>
    1366:	fb 01       	movw	r30, r22
    1368:	93 83       	std	Z+3, r25	; 0x03
    136a:	82 83       	std	Z+2, r24	; 0x02
    136c:	04 c0       	rjmp	.+8      	; 0x1376 <malloc+0x96>
    136e:	90 93 97 03 	sts	0x0397, r25	; 0x800397 <__flp+0x1>
    1372:	80 93 96 03 	sts	0x0396, r24	; 0x800396 <__flp>
    1376:	fe 01       	movw	r30, r28
    1378:	32 96       	adiw	r30, 0x02	; 2
    137a:	44 c0       	rjmp	.+136    	; 0x1404 <malloc+0x124>
    137c:	fe 01       	movw	r30, r28
    137e:	e2 0f       	add	r30, r18
    1380:	f3 1f       	adc	r31, r19
    1382:	81 93       	st	Z+, r24
    1384:	91 93       	st	Z+, r25
    1386:	22 50       	subi	r18, 0x02	; 2
    1388:	31 09       	sbc	r19, r1
    138a:	39 83       	std	Y+1, r19	; 0x01
    138c:	28 83       	st	Y, r18
    138e:	3a c0       	rjmp	.+116    	; 0x1404 <malloc+0x124>
    1390:	20 91 94 03 	lds	r18, 0x0394	; 0x800394 <__brkval>
    1394:	30 91 95 03 	lds	r19, 0x0395	; 0x800395 <__brkval+0x1>
    1398:	23 2b       	or	r18, r19
    139a:	41 f4       	brne	.+16     	; 0x13ac <malloc+0xcc>
    139c:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    13a0:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    13a4:	30 93 95 03 	sts	0x0395, r19	; 0x800395 <__brkval+0x1>
    13a8:	20 93 94 03 	sts	0x0394, r18	; 0x800394 <__brkval>
    13ac:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    13b0:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    13b4:	21 15       	cp	r18, r1
    13b6:	31 05       	cpc	r19, r1
    13b8:	41 f4       	brne	.+16     	; 0x13ca <malloc+0xea>
    13ba:	2d b7       	in	r18, 0x3d	; 61
    13bc:	3e b7       	in	r19, 0x3e	; 62
    13be:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    13c2:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    13c6:	24 1b       	sub	r18, r20
    13c8:	35 0b       	sbc	r19, r21
    13ca:	e0 91 94 03 	lds	r30, 0x0394	; 0x800394 <__brkval>
    13ce:	f0 91 95 03 	lds	r31, 0x0395	; 0x800395 <__brkval+0x1>
    13d2:	e2 17       	cp	r30, r18
    13d4:	f3 07       	cpc	r31, r19
    13d6:	a0 f4       	brcc	.+40     	; 0x1400 <malloc+0x120>
    13d8:	2e 1b       	sub	r18, r30
    13da:	3f 0b       	sbc	r19, r31
    13dc:	28 17       	cp	r18, r24
    13de:	39 07       	cpc	r19, r25
    13e0:	78 f0       	brcs	.+30     	; 0x1400 <malloc+0x120>
    13e2:	ac 01       	movw	r20, r24
    13e4:	4e 5f       	subi	r20, 0xFE	; 254
    13e6:	5f 4f       	sbci	r21, 0xFF	; 255
    13e8:	24 17       	cp	r18, r20
    13ea:	35 07       	cpc	r19, r21
    13ec:	48 f0       	brcs	.+18     	; 0x1400 <malloc+0x120>
    13ee:	4e 0f       	add	r20, r30
    13f0:	5f 1f       	adc	r21, r31
    13f2:	50 93 95 03 	sts	0x0395, r21	; 0x800395 <__brkval+0x1>
    13f6:	40 93 94 03 	sts	0x0394, r20	; 0x800394 <__brkval>
    13fa:	81 93       	st	Z+, r24
    13fc:	91 93       	st	Z+, r25
    13fe:	02 c0       	rjmp	.+4      	; 0x1404 <malloc+0x124>
    1400:	e0 e0       	ldi	r30, 0x00	; 0
    1402:	f0 e0       	ldi	r31, 0x00	; 0
    1404:	cf 01       	movw	r24, r30
    1406:	df 91       	pop	r29
    1408:	cf 91       	pop	r28
    140a:	1f 91       	pop	r17
    140c:	0f 91       	pop	r16
    140e:	08 95       	ret

00001410 <free>:
    1410:	cf 93       	push	r28
    1412:	df 93       	push	r29
    1414:	00 97       	sbiw	r24, 0x00	; 0
    1416:	09 f4       	brne	.+2      	; 0x141a <free+0xa>
    1418:	81 c0       	rjmp	.+258    	; 0x151c <free+0x10c>
    141a:	fc 01       	movw	r30, r24
    141c:	32 97       	sbiw	r30, 0x02	; 2
    141e:	13 82       	std	Z+3, r1	; 0x03
    1420:	12 82       	std	Z+2, r1	; 0x02
    1422:	a0 91 96 03 	lds	r26, 0x0396	; 0x800396 <__flp>
    1426:	b0 91 97 03 	lds	r27, 0x0397	; 0x800397 <__flp+0x1>
    142a:	10 97       	sbiw	r26, 0x00	; 0
    142c:	81 f4       	brne	.+32     	; 0x144e <free+0x3e>
    142e:	20 81       	ld	r18, Z
    1430:	31 81       	ldd	r19, Z+1	; 0x01
    1432:	82 0f       	add	r24, r18
    1434:	93 1f       	adc	r25, r19
    1436:	20 91 94 03 	lds	r18, 0x0394	; 0x800394 <__brkval>
    143a:	30 91 95 03 	lds	r19, 0x0395	; 0x800395 <__brkval+0x1>
    143e:	28 17       	cp	r18, r24
    1440:	39 07       	cpc	r19, r25
    1442:	51 f5       	brne	.+84     	; 0x1498 <free+0x88>
    1444:	f0 93 95 03 	sts	0x0395, r31	; 0x800395 <__brkval+0x1>
    1448:	e0 93 94 03 	sts	0x0394, r30	; 0x800394 <__brkval>
    144c:	67 c0       	rjmp	.+206    	; 0x151c <free+0x10c>
    144e:	ed 01       	movw	r28, r26
    1450:	20 e0       	ldi	r18, 0x00	; 0
    1452:	30 e0       	ldi	r19, 0x00	; 0
    1454:	ce 17       	cp	r28, r30
    1456:	df 07       	cpc	r29, r31
    1458:	40 f4       	brcc	.+16     	; 0x146a <free+0x5a>
    145a:	4a 81       	ldd	r20, Y+2	; 0x02
    145c:	5b 81       	ldd	r21, Y+3	; 0x03
    145e:	9e 01       	movw	r18, r28
    1460:	41 15       	cp	r20, r1
    1462:	51 05       	cpc	r21, r1
    1464:	f1 f0       	breq	.+60     	; 0x14a2 <free+0x92>
    1466:	ea 01       	movw	r28, r20
    1468:	f5 cf       	rjmp	.-22     	; 0x1454 <free+0x44>
    146a:	d3 83       	std	Z+3, r29	; 0x03
    146c:	c2 83       	std	Z+2, r28	; 0x02
    146e:	40 81       	ld	r20, Z
    1470:	51 81       	ldd	r21, Z+1	; 0x01
    1472:	84 0f       	add	r24, r20
    1474:	95 1f       	adc	r25, r21
    1476:	c8 17       	cp	r28, r24
    1478:	d9 07       	cpc	r29, r25
    147a:	59 f4       	brne	.+22     	; 0x1492 <free+0x82>
    147c:	88 81       	ld	r24, Y
    147e:	99 81       	ldd	r25, Y+1	; 0x01
    1480:	84 0f       	add	r24, r20
    1482:	95 1f       	adc	r25, r21
    1484:	02 96       	adiw	r24, 0x02	; 2
    1486:	91 83       	std	Z+1, r25	; 0x01
    1488:	80 83       	st	Z, r24
    148a:	8a 81       	ldd	r24, Y+2	; 0x02
    148c:	9b 81       	ldd	r25, Y+3	; 0x03
    148e:	93 83       	std	Z+3, r25	; 0x03
    1490:	82 83       	std	Z+2, r24	; 0x02
    1492:	21 15       	cp	r18, r1
    1494:	31 05       	cpc	r19, r1
    1496:	29 f4       	brne	.+10     	; 0x14a2 <free+0x92>
    1498:	f0 93 97 03 	sts	0x0397, r31	; 0x800397 <__flp+0x1>
    149c:	e0 93 96 03 	sts	0x0396, r30	; 0x800396 <__flp>
    14a0:	3d c0       	rjmp	.+122    	; 0x151c <free+0x10c>
    14a2:	e9 01       	movw	r28, r18
    14a4:	fb 83       	std	Y+3, r31	; 0x03
    14a6:	ea 83       	std	Y+2, r30	; 0x02
    14a8:	49 91       	ld	r20, Y+
    14aa:	59 91       	ld	r21, Y+
    14ac:	c4 0f       	add	r28, r20
    14ae:	d5 1f       	adc	r29, r21
    14b0:	ec 17       	cp	r30, r28
    14b2:	fd 07       	cpc	r31, r29
    14b4:	61 f4       	brne	.+24     	; 0x14ce <free+0xbe>
    14b6:	80 81       	ld	r24, Z
    14b8:	91 81       	ldd	r25, Z+1	; 0x01
    14ba:	84 0f       	add	r24, r20
    14bc:	95 1f       	adc	r25, r21
    14be:	02 96       	adiw	r24, 0x02	; 2
    14c0:	e9 01       	movw	r28, r18
    14c2:	99 83       	std	Y+1, r25	; 0x01
    14c4:	88 83       	st	Y, r24
    14c6:	82 81       	ldd	r24, Z+2	; 0x02
    14c8:	93 81       	ldd	r25, Z+3	; 0x03
    14ca:	9b 83       	std	Y+3, r25	; 0x03
    14cc:	8a 83       	std	Y+2, r24	; 0x02
    14ce:	e0 e0       	ldi	r30, 0x00	; 0
    14d0:	f0 e0       	ldi	r31, 0x00	; 0
    14d2:	12 96       	adiw	r26, 0x02	; 2
    14d4:	8d 91       	ld	r24, X+
    14d6:	9c 91       	ld	r25, X
    14d8:	13 97       	sbiw	r26, 0x03	; 3
    14da:	00 97       	sbiw	r24, 0x00	; 0
    14dc:	19 f0       	breq	.+6      	; 0x14e4 <free+0xd4>
    14de:	fd 01       	movw	r30, r26
    14e0:	dc 01       	movw	r26, r24
    14e2:	f7 cf       	rjmp	.-18     	; 0x14d2 <free+0xc2>
    14e4:	8d 91       	ld	r24, X+
    14e6:	9c 91       	ld	r25, X
    14e8:	11 97       	sbiw	r26, 0x01	; 1
    14ea:	9d 01       	movw	r18, r26
    14ec:	2e 5f       	subi	r18, 0xFE	; 254
    14ee:	3f 4f       	sbci	r19, 0xFF	; 255
    14f0:	82 0f       	add	r24, r18
    14f2:	93 1f       	adc	r25, r19
    14f4:	20 91 94 03 	lds	r18, 0x0394	; 0x800394 <__brkval>
    14f8:	30 91 95 03 	lds	r19, 0x0395	; 0x800395 <__brkval+0x1>
    14fc:	28 17       	cp	r18, r24
    14fe:	39 07       	cpc	r19, r25
    1500:	69 f4       	brne	.+26     	; 0x151c <free+0x10c>
    1502:	30 97       	sbiw	r30, 0x00	; 0
    1504:	29 f4       	brne	.+10     	; 0x1510 <free+0x100>
    1506:	10 92 97 03 	sts	0x0397, r1	; 0x800397 <__flp+0x1>
    150a:	10 92 96 03 	sts	0x0396, r1	; 0x800396 <__flp>
    150e:	02 c0       	rjmp	.+4      	; 0x1514 <free+0x104>
    1510:	13 82       	std	Z+3, r1	; 0x03
    1512:	12 82       	std	Z+2, r1	; 0x02
    1514:	b0 93 95 03 	sts	0x0395, r27	; 0x800395 <__brkval+0x1>
    1518:	a0 93 94 03 	sts	0x0394, r26	; 0x800394 <__brkval>
    151c:	df 91       	pop	r29
    151e:	cf 91       	pop	r28
    1520:	08 95       	ret

00001522 <fdevopen>:
    1522:	0f 93       	push	r16
    1524:	1f 93       	push	r17
    1526:	cf 93       	push	r28
    1528:	df 93       	push	r29
    152a:	00 97       	sbiw	r24, 0x00	; 0
    152c:	31 f4       	brne	.+12     	; 0x153a <fdevopen+0x18>
    152e:	61 15       	cp	r22, r1
    1530:	71 05       	cpc	r23, r1
    1532:	19 f4       	brne	.+6      	; 0x153a <fdevopen+0x18>
    1534:	80 e0       	ldi	r24, 0x00	; 0
    1536:	90 e0       	ldi	r25, 0x00	; 0
    1538:	3a c0       	rjmp	.+116    	; 0x15ae <fdevopen+0x8c>
    153a:	8b 01       	movw	r16, r22
    153c:	ec 01       	movw	r28, r24
    153e:	6e e0       	ldi	r22, 0x0E	; 14
    1540:	70 e0       	ldi	r23, 0x00	; 0
    1542:	81 e0       	ldi	r24, 0x01	; 1
    1544:	90 e0       	ldi	r25, 0x00	; 0
    1546:	0e 94 25 0d 	call	0x1a4a	; 0x1a4a <calloc>
    154a:	fc 01       	movw	r30, r24
    154c:	89 2b       	or	r24, r25
    154e:	91 f3       	breq	.-28     	; 0x1534 <fdevopen+0x12>
    1550:	80 e8       	ldi	r24, 0x80	; 128
    1552:	83 83       	std	Z+3, r24	; 0x03
    1554:	01 15       	cp	r16, r1
    1556:	11 05       	cpc	r17, r1
    1558:	71 f0       	breq	.+28     	; 0x1576 <fdevopen+0x54>
    155a:	13 87       	std	Z+11, r17	; 0x0b
    155c:	02 87       	std	Z+10, r16	; 0x0a
    155e:	81 e8       	ldi	r24, 0x81	; 129
    1560:	83 83       	std	Z+3, r24	; 0x03
    1562:	80 91 98 03 	lds	r24, 0x0398	; 0x800398 <__iob>
    1566:	90 91 99 03 	lds	r25, 0x0399	; 0x800399 <__iob+0x1>
    156a:	89 2b       	or	r24, r25
    156c:	21 f4       	brne	.+8      	; 0x1576 <fdevopen+0x54>
    156e:	f0 93 99 03 	sts	0x0399, r31	; 0x800399 <__iob+0x1>
    1572:	e0 93 98 03 	sts	0x0398, r30	; 0x800398 <__iob>
    1576:	20 97       	sbiw	r28, 0x00	; 0
    1578:	c9 f0       	breq	.+50     	; 0x15ac <fdevopen+0x8a>
    157a:	d1 87       	std	Z+9, r29	; 0x09
    157c:	c0 87       	std	Z+8, r28	; 0x08
    157e:	83 81       	ldd	r24, Z+3	; 0x03
    1580:	82 60       	ori	r24, 0x02	; 2
    1582:	83 83       	std	Z+3, r24	; 0x03
    1584:	80 91 9a 03 	lds	r24, 0x039A	; 0x80039a <__iob+0x2>
    1588:	90 91 9b 03 	lds	r25, 0x039B	; 0x80039b <__iob+0x3>
    158c:	89 2b       	or	r24, r25
    158e:	71 f4       	brne	.+28     	; 0x15ac <fdevopen+0x8a>
    1590:	f0 93 9b 03 	sts	0x039B, r31	; 0x80039b <__iob+0x3>
    1594:	e0 93 9a 03 	sts	0x039A, r30	; 0x80039a <__iob+0x2>
    1598:	80 91 9c 03 	lds	r24, 0x039C	; 0x80039c <__iob+0x4>
    159c:	90 91 9d 03 	lds	r25, 0x039D	; 0x80039d <__iob+0x5>
    15a0:	89 2b       	or	r24, r25
    15a2:	21 f4       	brne	.+8      	; 0x15ac <fdevopen+0x8a>
    15a4:	f0 93 9d 03 	sts	0x039D, r31	; 0x80039d <__iob+0x5>
    15a8:	e0 93 9c 03 	sts	0x039C, r30	; 0x80039c <__iob+0x4>
    15ac:	cf 01       	movw	r24, r30
    15ae:	df 91       	pop	r29
    15b0:	cf 91       	pop	r28
    15b2:	1f 91       	pop	r17
    15b4:	0f 91       	pop	r16
    15b6:	08 95       	ret

000015b8 <printf>:
    15b8:	a0 e0       	ldi	r26, 0x00	; 0
    15ba:	b0 e0       	ldi	r27, 0x00	; 0
    15bc:	e2 ee       	ldi	r30, 0xE2	; 226
    15be:	fa e0       	ldi	r31, 0x0A	; 10
    15c0:	0c 94 08 0e 	jmp	0x1c10	; 0x1c10 <__prologue_saves__+0x20>
    15c4:	ae 01       	movw	r20, r28
    15c6:	4b 5f       	subi	r20, 0xFB	; 251
    15c8:	5f 4f       	sbci	r21, 0xFF	; 255
    15ca:	fa 01       	movw	r30, r20
    15cc:	61 91       	ld	r22, Z+
    15ce:	71 91       	ld	r23, Z+
    15d0:	af 01       	movw	r20, r30
    15d2:	80 91 9a 03 	lds	r24, 0x039A	; 0x80039a <__iob+0x2>
    15d6:	90 91 9b 03 	lds	r25, 0x039B	; 0x80039b <__iob+0x3>
    15da:	0e 94 44 0b 	call	0x1688	; 0x1688 <vfprintf>
    15de:	e2 e0       	ldi	r30, 0x02	; 2
    15e0:	0c 94 24 0e 	jmp	0x1c48	; 0x1c48 <__epilogue_restores__+0x20>

000015e4 <puts>:
    15e4:	0f 93       	push	r16
    15e6:	1f 93       	push	r17
    15e8:	cf 93       	push	r28
    15ea:	df 93       	push	r29
    15ec:	e0 91 9a 03 	lds	r30, 0x039A	; 0x80039a <__iob+0x2>
    15f0:	f0 91 9b 03 	lds	r31, 0x039B	; 0x80039b <__iob+0x3>
    15f4:	23 81       	ldd	r18, Z+3	; 0x03
    15f6:	21 ff       	sbrs	r18, 1
    15f8:	1b c0       	rjmp	.+54     	; 0x1630 <puts+0x4c>
    15fa:	8c 01       	movw	r16, r24
    15fc:	d0 e0       	ldi	r29, 0x00	; 0
    15fe:	c0 e0       	ldi	r28, 0x00	; 0
    1600:	f8 01       	movw	r30, r16
    1602:	81 91       	ld	r24, Z+
    1604:	8f 01       	movw	r16, r30
    1606:	60 91 9a 03 	lds	r22, 0x039A	; 0x80039a <__iob+0x2>
    160a:	70 91 9b 03 	lds	r23, 0x039B	; 0x80039b <__iob+0x3>
    160e:	db 01       	movw	r26, r22
    1610:	18 96       	adiw	r26, 0x08	; 8
    1612:	ed 91       	ld	r30, X+
    1614:	fc 91       	ld	r31, X
    1616:	19 97       	sbiw	r26, 0x09	; 9
    1618:	88 23       	and	r24, r24
    161a:	31 f0       	breq	.+12     	; 0x1628 <puts+0x44>
    161c:	09 95       	icall
    161e:	89 2b       	or	r24, r25
    1620:	79 f3       	breq	.-34     	; 0x1600 <puts+0x1c>
    1622:	df ef       	ldi	r29, 0xFF	; 255
    1624:	cf ef       	ldi	r28, 0xFF	; 255
    1626:	ec cf       	rjmp	.-40     	; 0x1600 <puts+0x1c>
    1628:	8a e0       	ldi	r24, 0x0A	; 10
    162a:	09 95       	icall
    162c:	89 2b       	or	r24, r25
    162e:	19 f0       	breq	.+6      	; 0x1636 <puts+0x52>
    1630:	8f ef       	ldi	r24, 0xFF	; 255
    1632:	9f ef       	ldi	r25, 0xFF	; 255
    1634:	02 c0       	rjmp	.+4      	; 0x163a <puts+0x56>
    1636:	8d 2f       	mov	r24, r29
    1638:	9c 2f       	mov	r25, r28
    163a:	df 91       	pop	r29
    163c:	cf 91       	pop	r28
    163e:	1f 91       	pop	r17
    1640:	0f 91       	pop	r16
    1642:	08 95       	ret

00001644 <sprintf>:
    1644:	ae e0       	ldi	r26, 0x0E	; 14
    1646:	b0 e0       	ldi	r27, 0x00	; 0
    1648:	e8 e2       	ldi	r30, 0x28	; 40
    164a:	fb e0       	ldi	r31, 0x0B	; 11
    164c:	0c 94 06 0e 	jmp	0x1c0c	; 0x1c0c <__prologue_saves__+0x1c>
    1650:	0d 89       	ldd	r16, Y+21	; 0x15
    1652:	1e 89       	ldd	r17, Y+22	; 0x16
    1654:	86 e0       	ldi	r24, 0x06	; 6
    1656:	8c 83       	std	Y+4, r24	; 0x04
    1658:	1a 83       	std	Y+2, r17	; 0x02
    165a:	09 83       	std	Y+1, r16	; 0x01
    165c:	8f ef       	ldi	r24, 0xFF	; 255
    165e:	9f e7       	ldi	r25, 0x7F	; 127
    1660:	9e 83       	std	Y+6, r25	; 0x06
    1662:	8d 83       	std	Y+5, r24	; 0x05
    1664:	ae 01       	movw	r20, r28
    1666:	47 5e       	subi	r20, 0xE7	; 231
    1668:	5f 4f       	sbci	r21, 0xFF	; 255
    166a:	6f 89       	ldd	r22, Y+23	; 0x17
    166c:	78 8d       	ldd	r23, Y+24	; 0x18
    166e:	ce 01       	movw	r24, r28
    1670:	01 96       	adiw	r24, 0x01	; 1
    1672:	0e 94 44 0b 	call	0x1688	; 0x1688 <vfprintf>
    1676:	ef 81       	ldd	r30, Y+7	; 0x07
    1678:	f8 85       	ldd	r31, Y+8	; 0x08
    167a:	e0 0f       	add	r30, r16
    167c:	f1 1f       	adc	r31, r17
    167e:	10 82       	st	Z, r1
    1680:	2e 96       	adiw	r28, 0x0e	; 14
    1682:	e4 e0       	ldi	r30, 0x04	; 4
    1684:	0c 94 22 0e 	jmp	0x1c44	; 0x1c44 <__epilogue_restores__+0x1c>

00001688 <vfprintf>:
    1688:	ab e0       	ldi	r26, 0x0B	; 11
    168a:	b0 e0       	ldi	r27, 0x00	; 0
    168c:	ea e4       	ldi	r30, 0x4A	; 74
    168e:	fb e0       	ldi	r31, 0x0B	; 11
    1690:	0c 94 f8 0d 	jmp	0x1bf0	; 0x1bf0 <__prologue_saves__>
    1694:	6c 01       	movw	r12, r24
    1696:	7b 01       	movw	r14, r22
    1698:	8a 01       	movw	r16, r20
    169a:	fc 01       	movw	r30, r24
    169c:	17 82       	std	Z+7, r1	; 0x07
    169e:	16 82       	std	Z+6, r1	; 0x06
    16a0:	83 81       	ldd	r24, Z+3	; 0x03
    16a2:	81 ff       	sbrs	r24, 1
    16a4:	cc c1       	rjmp	.+920    	; 0x1a3e <vfprintf+0x3b6>
    16a6:	ce 01       	movw	r24, r28
    16a8:	01 96       	adiw	r24, 0x01	; 1
    16aa:	3c 01       	movw	r6, r24
    16ac:	f6 01       	movw	r30, r12
    16ae:	93 81       	ldd	r25, Z+3	; 0x03
    16b0:	f7 01       	movw	r30, r14
    16b2:	93 fd       	sbrc	r25, 3
    16b4:	85 91       	lpm	r24, Z+
    16b6:	93 ff       	sbrs	r25, 3
    16b8:	81 91       	ld	r24, Z+
    16ba:	7f 01       	movw	r14, r30
    16bc:	88 23       	and	r24, r24
    16be:	09 f4       	brne	.+2      	; 0x16c2 <vfprintf+0x3a>
    16c0:	ba c1       	rjmp	.+884    	; 0x1a36 <vfprintf+0x3ae>
    16c2:	85 32       	cpi	r24, 0x25	; 37
    16c4:	39 f4       	brne	.+14     	; 0x16d4 <vfprintf+0x4c>
    16c6:	93 fd       	sbrc	r25, 3
    16c8:	85 91       	lpm	r24, Z+
    16ca:	93 ff       	sbrs	r25, 3
    16cc:	81 91       	ld	r24, Z+
    16ce:	7f 01       	movw	r14, r30
    16d0:	85 32       	cpi	r24, 0x25	; 37
    16d2:	29 f4       	brne	.+10     	; 0x16de <vfprintf+0x56>
    16d4:	b6 01       	movw	r22, r12
    16d6:	90 e0       	ldi	r25, 0x00	; 0
    16d8:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <fputc>
    16dc:	e7 cf       	rjmp	.-50     	; 0x16ac <vfprintf+0x24>
    16de:	91 2c       	mov	r9, r1
    16e0:	21 2c       	mov	r2, r1
    16e2:	31 2c       	mov	r3, r1
    16e4:	ff e1       	ldi	r31, 0x1F	; 31
    16e6:	f3 15       	cp	r31, r3
    16e8:	d8 f0       	brcs	.+54     	; 0x1720 <vfprintf+0x98>
    16ea:	8b 32       	cpi	r24, 0x2B	; 43
    16ec:	79 f0       	breq	.+30     	; 0x170c <vfprintf+0x84>
    16ee:	38 f4       	brcc	.+14     	; 0x16fe <vfprintf+0x76>
    16f0:	80 32       	cpi	r24, 0x20	; 32
    16f2:	79 f0       	breq	.+30     	; 0x1712 <vfprintf+0x8a>
    16f4:	83 32       	cpi	r24, 0x23	; 35
    16f6:	a1 f4       	brne	.+40     	; 0x1720 <vfprintf+0x98>
    16f8:	23 2d       	mov	r18, r3
    16fa:	20 61       	ori	r18, 0x10	; 16
    16fc:	1d c0       	rjmp	.+58     	; 0x1738 <vfprintf+0xb0>
    16fe:	8d 32       	cpi	r24, 0x2D	; 45
    1700:	61 f0       	breq	.+24     	; 0x171a <vfprintf+0x92>
    1702:	80 33       	cpi	r24, 0x30	; 48
    1704:	69 f4       	brne	.+26     	; 0x1720 <vfprintf+0x98>
    1706:	23 2d       	mov	r18, r3
    1708:	21 60       	ori	r18, 0x01	; 1
    170a:	16 c0       	rjmp	.+44     	; 0x1738 <vfprintf+0xb0>
    170c:	83 2d       	mov	r24, r3
    170e:	82 60       	ori	r24, 0x02	; 2
    1710:	38 2e       	mov	r3, r24
    1712:	e3 2d       	mov	r30, r3
    1714:	e4 60       	ori	r30, 0x04	; 4
    1716:	3e 2e       	mov	r3, r30
    1718:	2a c0       	rjmp	.+84     	; 0x176e <vfprintf+0xe6>
    171a:	f3 2d       	mov	r31, r3
    171c:	f8 60       	ori	r31, 0x08	; 8
    171e:	1d c0       	rjmp	.+58     	; 0x175a <vfprintf+0xd2>
    1720:	37 fc       	sbrc	r3, 7
    1722:	2d c0       	rjmp	.+90     	; 0x177e <vfprintf+0xf6>
    1724:	20 ed       	ldi	r18, 0xD0	; 208
    1726:	28 0f       	add	r18, r24
    1728:	2a 30       	cpi	r18, 0x0A	; 10
    172a:	40 f0       	brcs	.+16     	; 0x173c <vfprintf+0xb4>
    172c:	8e 32       	cpi	r24, 0x2E	; 46
    172e:	b9 f4       	brne	.+46     	; 0x175e <vfprintf+0xd6>
    1730:	36 fc       	sbrc	r3, 6
    1732:	81 c1       	rjmp	.+770    	; 0x1a36 <vfprintf+0x3ae>
    1734:	23 2d       	mov	r18, r3
    1736:	20 64       	ori	r18, 0x40	; 64
    1738:	32 2e       	mov	r3, r18
    173a:	19 c0       	rjmp	.+50     	; 0x176e <vfprintf+0xe6>
    173c:	36 fe       	sbrs	r3, 6
    173e:	06 c0       	rjmp	.+12     	; 0x174c <vfprintf+0xc4>
    1740:	8a e0       	ldi	r24, 0x0A	; 10
    1742:	98 9e       	mul	r9, r24
    1744:	20 0d       	add	r18, r0
    1746:	11 24       	eor	r1, r1
    1748:	92 2e       	mov	r9, r18
    174a:	11 c0       	rjmp	.+34     	; 0x176e <vfprintf+0xe6>
    174c:	ea e0       	ldi	r30, 0x0A	; 10
    174e:	2e 9e       	mul	r2, r30
    1750:	20 0d       	add	r18, r0
    1752:	11 24       	eor	r1, r1
    1754:	22 2e       	mov	r2, r18
    1756:	f3 2d       	mov	r31, r3
    1758:	f0 62       	ori	r31, 0x20	; 32
    175a:	3f 2e       	mov	r3, r31
    175c:	08 c0       	rjmp	.+16     	; 0x176e <vfprintf+0xe6>
    175e:	8c 36       	cpi	r24, 0x6C	; 108
    1760:	21 f4       	brne	.+8      	; 0x176a <vfprintf+0xe2>
    1762:	83 2d       	mov	r24, r3
    1764:	80 68       	ori	r24, 0x80	; 128
    1766:	38 2e       	mov	r3, r24
    1768:	02 c0       	rjmp	.+4      	; 0x176e <vfprintf+0xe6>
    176a:	88 36       	cpi	r24, 0x68	; 104
    176c:	41 f4       	brne	.+16     	; 0x177e <vfprintf+0xf6>
    176e:	f7 01       	movw	r30, r14
    1770:	93 fd       	sbrc	r25, 3
    1772:	85 91       	lpm	r24, Z+
    1774:	93 ff       	sbrs	r25, 3
    1776:	81 91       	ld	r24, Z+
    1778:	7f 01       	movw	r14, r30
    177a:	81 11       	cpse	r24, r1
    177c:	b3 cf       	rjmp	.-154    	; 0x16e4 <vfprintf+0x5c>
    177e:	98 2f       	mov	r25, r24
    1780:	9f 7d       	andi	r25, 0xDF	; 223
    1782:	95 54       	subi	r25, 0x45	; 69
    1784:	93 30       	cpi	r25, 0x03	; 3
    1786:	28 f4       	brcc	.+10     	; 0x1792 <vfprintf+0x10a>
    1788:	0c 5f       	subi	r16, 0xFC	; 252
    178a:	1f 4f       	sbci	r17, 0xFF	; 255
    178c:	9f e3       	ldi	r25, 0x3F	; 63
    178e:	99 83       	std	Y+1, r25	; 0x01
    1790:	0d c0       	rjmp	.+26     	; 0x17ac <vfprintf+0x124>
    1792:	83 36       	cpi	r24, 0x63	; 99
    1794:	31 f0       	breq	.+12     	; 0x17a2 <vfprintf+0x11a>
    1796:	83 37       	cpi	r24, 0x73	; 115
    1798:	71 f0       	breq	.+28     	; 0x17b6 <vfprintf+0x12e>
    179a:	83 35       	cpi	r24, 0x53	; 83
    179c:	09 f0       	breq	.+2      	; 0x17a0 <vfprintf+0x118>
    179e:	59 c0       	rjmp	.+178    	; 0x1852 <vfprintf+0x1ca>
    17a0:	21 c0       	rjmp	.+66     	; 0x17e4 <vfprintf+0x15c>
    17a2:	f8 01       	movw	r30, r16
    17a4:	80 81       	ld	r24, Z
    17a6:	89 83       	std	Y+1, r24	; 0x01
    17a8:	0e 5f       	subi	r16, 0xFE	; 254
    17aa:	1f 4f       	sbci	r17, 0xFF	; 255
    17ac:	88 24       	eor	r8, r8
    17ae:	83 94       	inc	r8
    17b0:	91 2c       	mov	r9, r1
    17b2:	53 01       	movw	r10, r6
    17b4:	13 c0       	rjmp	.+38     	; 0x17dc <vfprintf+0x154>
    17b6:	28 01       	movw	r4, r16
    17b8:	f2 e0       	ldi	r31, 0x02	; 2
    17ba:	4f 0e       	add	r4, r31
    17bc:	51 1c       	adc	r5, r1
    17be:	f8 01       	movw	r30, r16
    17c0:	a0 80       	ld	r10, Z
    17c2:	b1 80       	ldd	r11, Z+1	; 0x01
    17c4:	36 fe       	sbrs	r3, 6
    17c6:	03 c0       	rjmp	.+6      	; 0x17ce <vfprintf+0x146>
    17c8:	69 2d       	mov	r22, r9
    17ca:	70 e0       	ldi	r23, 0x00	; 0
    17cc:	02 c0       	rjmp	.+4      	; 0x17d2 <vfprintf+0x14a>
    17ce:	6f ef       	ldi	r22, 0xFF	; 255
    17d0:	7f ef       	ldi	r23, 0xFF	; 255
    17d2:	c5 01       	movw	r24, r10
    17d4:	0e 94 53 0d 	call	0x1aa6	; 0x1aa6 <strnlen>
    17d8:	4c 01       	movw	r8, r24
    17da:	82 01       	movw	r16, r4
    17dc:	f3 2d       	mov	r31, r3
    17de:	ff 77       	andi	r31, 0x7F	; 127
    17e0:	3f 2e       	mov	r3, r31
    17e2:	16 c0       	rjmp	.+44     	; 0x1810 <vfprintf+0x188>
    17e4:	28 01       	movw	r4, r16
    17e6:	22 e0       	ldi	r18, 0x02	; 2
    17e8:	42 0e       	add	r4, r18
    17ea:	51 1c       	adc	r5, r1
    17ec:	f8 01       	movw	r30, r16
    17ee:	a0 80       	ld	r10, Z
    17f0:	b1 80       	ldd	r11, Z+1	; 0x01
    17f2:	36 fe       	sbrs	r3, 6
    17f4:	03 c0       	rjmp	.+6      	; 0x17fc <vfprintf+0x174>
    17f6:	69 2d       	mov	r22, r9
    17f8:	70 e0       	ldi	r23, 0x00	; 0
    17fa:	02 c0       	rjmp	.+4      	; 0x1800 <vfprintf+0x178>
    17fc:	6f ef       	ldi	r22, 0xFF	; 255
    17fe:	7f ef       	ldi	r23, 0xFF	; 255
    1800:	c5 01       	movw	r24, r10
    1802:	0e 94 41 0d 	call	0x1a82	; 0x1a82 <strnlen_P>
    1806:	4c 01       	movw	r8, r24
    1808:	f3 2d       	mov	r31, r3
    180a:	f0 68       	ori	r31, 0x80	; 128
    180c:	3f 2e       	mov	r3, r31
    180e:	82 01       	movw	r16, r4
    1810:	33 fc       	sbrc	r3, 3
    1812:	1b c0       	rjmp	.+54     	; 0x184a <vfprintf+0x1c2>
    1814:	82 2d       	mov	r24, r2
    1816:	90 e0       	ldi	r25, 0x00	; 0
    1818:	88 16       	cp	r8, r24
    181a:	99 06       	cpc	r9, r25
    181c:	b0 f4       	brcc	.+44     	; 0x184a <vfprintf+0x1c2>
    181e:	b6 01       	movw	r22, r12
    1820:	80 e2       	ldi	r24, 0x20	; 32
    1822:	90 e0       	ldi	r25, 0x00	; 0
    1824:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <fputc>
    1828:	2a 94       	dec	r2
    182a:	f4 cf       	rjmp	.-24     	; 0x1814 <vfprintf+0x18c>
    182c:	f5 01       	movw	r30, r10
    182e:	37 fc       	sbrc	r3, 7
    1830:	85 91       	lpm	r24, Z+
    1832:	37 fe       	sbrs	r3, 7
    1834:	81 91       	ld	r24, Z+
    1836:	5f 01       	movw	r10, r30
    1838:	b6 01       	movw	r22, r12
    183a:	90 e0       	ldi	r25, 0x00	; 0
    183c:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <fputc>
    1840:	21 10       	cpse	r2, r1
    1842:	2a 94       	dec	r2
    1844:	21 e0       	ldi	r18, 0x01	; 1
    1846:	82 1a       	sub	r8, r18
    1848:	91 08       	sbc	r9, r1
    184a:	81 14       	cp	r8, r1
    184c:	91 04       	cpc	r9, r1
    184e:	71 f7       	brne	.-36     	; 0x182c <vfprintf+0x1a4>
    1850:	e8 c0       	rjmp	.+464    	; 0x1a22 <vfprintf+0x39a>
    1852:	84 36       	cpi	r24, 0x64	; 100
    1854:	11 f0       	breq	.+4      	; 0x185a <vfprintf+0x1d2>
    1856:	89 36       	cpi	r24, 0x69	; 105
    1858:	41 f5       	brne	.+80     	; 0x18aa <vfprintf+0x222>
    185a:	f8 01       	movw	r30, r16
    185c:	37 fe       	sbrs	r3, 7
    185e:	07 c0       	rjmp	.+14     	; 0x186e <vfprintf+0x1e6>
    1860:	60 81       	ld	r22, Z
    1862:	71 81       	ldd	r23, Z+1	; 0x01
    1864:	82 81       	ldd	r24, Z+2	; 0x02
    1866:	93 81       	ldd	r25, Z+3	; 0x03
    1868:	0c 5f       	subi	r16, 0xFC	; 252
    186a:	1f 4f       	sbci	r17, 0xFF	; 255
    186c:	08 c0       	rjmp	.+16     	; 0x187e <vfprintf+0x1f6>
    186e:	60 81       	ld	r22, Z
    1870:	71 81       	ldd	r23, Z+1	; 0x01
    1872:	07 2e       	mov	r0, r23
    1874:	00 0c       	add	r0, r0
    1876:	88 0b       	sbc	r24, r24
    1878:	99 0b       	sbc	r25, r25
    187a:	0e 5f       	subi	r16, 0xFE	; 254
    187c:	1f 4f       	sbci	r17, 0xFF	; 255
    187e:	f3 2d       	mov	r31, r3
    1880:	ff 76       	andi	r31, 0x6F	; 111
    1882:	3f 2e       	mov	r3, r31
    1884:	97 ff       	sbrs	r25, 7
    1886:	09 c0       	rjmp	.+18     	; 0x189a <vfprintf+0x212>
    1888:	90 95       	com	r25
    188a:	80 95       	com	r24
    188c:	70 95       	com	r23
    188e:	61 95       	neg	r22
    1890:	7f 4f       	sbci	r23, 0xFF	; 255
    1892:	8f 4f       	sbci	r24, 0xFF	; 255
    1894:	9f 4f       	sbci	r25, 0xFF	; 255
    1896:	f0 68       	ori	r31, 0x80	; 128
    1898:	3f 2e       	mov	r3, r31
    189a:	2a e0       	ldi	r18, 0x0A	; 10
    189c:	30 e0       	ldi	r19, 0x00	; 0
    189e:	a3 01       	movw	r20, r6
    18a0:	0e 94 9a 0d 	call	0x1b34	; 0x1b34 <__ultoa_invert>
    18a4:	88 2e       	mov	r8, r24
    18a6:	86 18       	sub	r8, r6
    18a8:	45 c0       	rjmp	.+138    	; 0x1934 <vfprintf+0x2ac>
    18aa:	85 37       	cpi	r24, 0x75	; 117
    18ac:	31 f4       	brne	.+12     	; 0x18ba <vfprintf+0x232>
    18ae:	23 2d       	mov	r18, r3
    18b0:	2f 7e       	andi	r18, 0xEF	; 239
    18b2:	b2 2e       	mov	r11, r18
    18b4:	2a e0       	ldi	r18, 0x0A	; 10
    18b6:	30 e0       	ldi	r19, 0x00	; 0
    18b8:	25 c0       	rjmp	.+74     	; 0x1904 <vfprintf+0x27c>
    18ba:	93 2d       	mov	r25, r3
    18bc:	99 7f       	andi	r25, 0xF9	; 249
    18be:	b9 2e       	mov	r11, r25
    18c0:	8f 36       	cpi	r24, 0x6F	; 111
    18c2:	c1 f0       	breq	.+48     	; 0x18f4 <vfprintf+0x26c>
    18c4:	18 f4       	brcc	.+6      	; 0x18cc <vfprintf+0x244>
    18c6:	88 35       	cpi	r24, 0x58	; 88
    18c8:	79 f0       	breq	.+30     	; 0x18e8 <vfprintf+0x260>
    18ca:	b5 c0       	rjmp	.+362    	; 0x1a36 <vfprintf+0x3ae>
    18cc:	80 37       	cpi	r24, 0x70	; 112
    18ce:	19 f0       	breq	.+6      	; 0x18d6 <vfprintf+0x24e>
    18d0:	88 37       	cpi	r24, 0x78	; 120
    18d2:	21 f0       	breq	.+8      	; 0x18dc <vfprintf+0x254>
    18d4:	b0 c0       	rjmp	.+352    	; 0x1a36 <vfprintf+0x3ae>
    18d6:	e9 2f       	mov	r30, r25
    18d8:	e0 61       	ori	r30, 0x10	; 16
    18da:	be 2e       	mov	r11, r30
    18dc:	b4 fe       	sbrs	r11, 4
    18de:	0d c0       	rjmp	.+26     	; 0x18fa <vfprintf+0x272>
    18e0:	fb 2d       	mov	r31, r11
    18e2:	f4 60       	ori	r31, 0x04	; 4
    18e4:	bf 2e       	mov	r11, r31
    18e6:	09 c0       	rjmp	.+18     	; 0x18fa <vfprintf+0x272>
    18e8:	34 fe       	sbrs	r3, 4
    18ea:	0a c0       	rjmp	.+20     	; 0x1900 <vfprintf+0x278>
    18ec:	29 2f       	mov	r18, r25
    18ee:	26 60       	ori	r18, 0x06	; 6
    18f0:	b2 2e       	mov	r11, r18
    18f2:	06 c0       	rjmp	.+12     	; 0x1900 <vfprintf+0x278>
    18f4:	28 e0       	ldi	r18, 0x08	; 8
    18f6:	30 e0       	ldi	r19, 0x00	; 0
    18f8:	05 c0       	rjmp	.+10     	; 0x1904 <vfprintf+0x27c>
    18fa:	20 e1       	ldi	r18, 0x10	; 16
    18fc:	30 e0       	ldi	r19, 0x00	; 0
    18fe:	02 c0       	rjmp	.+4      	; 0x1904 <vfprintf+0x27c>
    1900:	20 e1       	ldi	r18, 0x10	; 16
    1902:	32 e0       	ldi	r19, 0x02	; 2
    1904:	f8 01       	movw	r30, r16
    1906:	b7 fe       	sbrs	r11, 7
    1908:	07 c0       	rjmp	.+14     	; 0x1918 <vfprintf+0x290>
    190a:	60 81       	ld	r22, Z
    190c:	71 81       	ldd	r23, Z+1	; 0x01
    190e:	82 81       	ldd	r24, Z+2	; 0x02
    1910:	93 81       	ldd	r25, Z+3	; 0x03
    1912:	0c 5f       	subi	r16, 0xFC	; 252
    1914:	1f 4f       	sbci	r17, 0xFF	; 255
    1916:	06 c0       	rjmp	.+12     	; 0x1924 <vfprintf+0x29c>
    1918:	60 81       	ld	r22, Z
    191a:	71 81       	ldd	r23, Z+1	; 0x01
    191c:	80 e0       	ldi	r24, 0x00	; 0
    191e:	90 e0       	ldi	r25, 0x00	; 0
    1920:	0e 5f       	subi	r16, 0xFE	; 254
    1922:	1f 4f       	sbci	r17, 0xFF	; 255
    1924:	a3 01       	movw	r20, r6
    1926:	0e 94 9a 0d 	call	0x1b34	; 0x1b34 <__ultoa_invert>
    192a:	88 2e       	mov	r8, r24
    192c:	86 18       	sub	r8, r6
    192e:	fb 2d       	mov	r31, r11
    1930:	ff 77       	andi	r31, 0x7F	; 127
    1932:	3f 2e       	mov	r3, r31
    1934:	36 fe       	sbrs	r3, 6
    1936:	0d c0       	rjmp	.+26     	; 0x1952 <vfprintf+0x2ca>
    1938:	23 2d       	mov	r18, r3
    193a:	2e 7f       	andi	r18, 0xFE	; 254
    193c:	a2 2e       	mov	r10, r18
    193e:	89 14       	cp	r8, r9
    1940:	58 f4       	brcc	.+22     	; 0x1958 <vfprintf+0x2d0>
    1942:	34 fe       	sbrs	r3, 4
    1944:	0b c0       	rjmp	.+22     	; 0x195c <vfprintf+0x2d4>
    1946:	32 fc       	sbrc	r3, 2
    1948:	09 c0       	rjmp	.+18     	; 0x195c <vfprintf+0x2d4>
    194a:	83 2d       	mov	r24, r3
    194c:	8e 7e       	andi	r24, 0xEE	; 238
    194e:	a8 2e       	mov	r10, r24
    1950:	05 c0       	rjmp	.+10     	; 0x195c <vfprintf+0x2d4>
    1952:	b8 2c       	mov	r11, r8
    1954:	a3 2c       	mov	r10, r3
    1956:	03 c0       	rjmp	.+6      	; 0x195e <vfprintf+0x2d6>
    1958:	b8 2c       	mov	r11, r8
    195a:	01 c0       	rjmp	.+2      	; 0x195e <vfprintf+0x2d6>
    195c:	b9 2c       	mov	r11, r9
    195e:	a4 fe       	sbrs	r10, 4
    1960:	0f c0       	rjmp	.+30     	; 0x1980 <vfprintf+0x2f8>
    1962:	fe 01       	movw	r30, r28
    1964:	e8 0d       	add	r30, r8
    1966:	f1 1d       	adc	r31, r1
    1968:	80 81       	ld	r24, Z
    196a:	80 33       	cpi	r24, 0x30	; 48
    196c:	21 f4       	brne	.+8      	; 0x1976 <vfprintf+0x2ee>
    196e:	9a 2d       	mov	r25, r10
    1970:	99 7e       	andi	r25, 0xE9	; 233
    1972:	a9 2e       	mov	r10, r25
    1974:	09 c0       	rjmp	.+18     	; 0x1988 <vfprintf+0x300>
    1976:	a2 fe       	sbrs	r10, 2
    1978:	06 c0       	rjmp	.+12     	; 0x1986 <vfprintf+0x2fe>
    197a:	b3 94       	inc	r11
    197c:	b3 94       	inc	r11
    197e:	04 c0       	rjmp	.+8      	; 0x1988 <vfprintf+0x300>
    1980:	8a 2d       	mov	r24, r10
    1982:	86 78       	andi	r24, 0x86	; 134
    1984:	09 f0       	breq	.+2      	; 0x1988 <vfprintf+0x300>
    1986:	b3 94       	inc	r11
    1988:	a3 fc       	sbrc	r10, 3
    198a:	11 c0       	rjmp	.+34     	; 0x19ae <vfprintf+0x326>
    198c:	a0 fe       	sbrs	r10, 0
    198e:	06 c0       	rjmp	.+12     	; 0x199c <vfprintf+0x314>
    1990:	b2 14       	cp	r11, r2
    1992:	88 f4       	brcc	.+34     	; 0x19b6 <vfprintf+0x32e>
    1994:	28 0c       	add	r2, r8
    1996:	92 2c       	mov	r9, r2
    1998:	9b 18       	sub	r9, r11
    199a:	0e c0       	rjmp	.+28     	; 0x19b8 <vfprintf+0x330>
    199c:	b2 14       	cp	r11, r2
    199e:	60 f4       	brcc	.+24     	; 0x19b8 <vfprintf+0x330>
    19a0:	b6 01       	movw	r22, r12
    19a2:	80 e2       	ldi	r24, 0x20	; 32
    19a4:	90 e0       	ldi	r25, 0x00	; 0
    19a6:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <fputc>
    19aa:	b3 94       	inc	r11
    19ac:	f7 cf       	rjmp	.-18     	; 0x199c <vfprintf+0x314>
    19ae:	b2 14       	cp	r11, r2
    19b0:	18 f4       	brcc	.+6      	; 0x19b8 <vfprintf+0x330>
    19b2:	2b 18       	sub	r2, r11
    19b4:	02 c0       	rjmp	.+4      	; 0x19ba <vfprintf+0x332>
    19b6:	98 2c       	mov	r9, r8
    19b8:	21 2c       	mov	r2, r1
    19ba:	a4 fe       	sbrs	r10, 4
    19bc:	10 c0       	rjmp	.+32     	; 0x19de <vfprintf+0x356>
    19be:	b6 01       	movw	r22, r12
    19c0:	80 e3       	ldi	r24, 0x30	; 48
    19c2:	90 e0       	ldi	r25, 0x00	; 0
    19c4:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <fputc>
    19c8:	a2 fe       	sbrs	r10, 2
    19ca:	17 c0       	rjmp	.+46     	; 0x19fa <vfprintf+0x372>
    19cc:	a1 fc       	sbrc	r10, 1
    19ce:	03 c0       	rjmp	.+6      	; 0x19d6 <vfprintf+0x34e>
    19d0:	88 e7       	ldi	r24, 0x78	; 120
    19d2:	90 e0       	ldi	r25, 0x00	; 0
    19d4:	02 c0       	rjmp	.+4      	; 0x19da <vfprintf+0x352>
    19d6:	88 e5       	ldi	r24, 0x58	; 88
    19d8:	90 e0       	ldi	r25, 0x00	; 0
    19da:	b6 01       	movw	r22, r12
    19dc:	0c c0       	rjmp	.+24     	; 0x19f6 <vfprintf+0x36e>
    19de:	8a 2d       	mov	r24, r10
    19e0:	86 78       	andi	r24, 0x86	; 134
    19e2:	59 f0       	breq	.+22     	; 0x19fa <vfprintf+0x372>
    19e4:	a1 fe       	sbrs	r10, 1
    19e6:	02 c0       	rjmp	.+4      	; 0x19ec <vfprintf+0x364>
    19e8:	8b e2       	ldi	r24, 0x2B	; 43
    19ea:	01 c0       	rjmp	.+2      	; 0x19ee <vfprintf+0x366>
    19ec:	80 e2       	ldi	r24, 0x20	; 32
    19ee:	a7 fc       	sbrc	r10, 7
    19f0:	8d e2       	ldi	r24, 0x2D	; 45
    19f2:	b6 01       	movw	r22, r12
    19f4:	90 e0       	ldi	r25, 0x00	; 0
    19f6:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <fputc>
    19fa:	89 14       	cp	r8, r9
    19fc:	38 f4       	brcc	.+14     	; 0x1a0c <vfprintf+0x384>
    19fe:	b6 01       	movw	r22, r12
    1a00:	80 e3       	ldi	r24, 0x30	; 48
    1a02:	90 e0       	ldi	r25, 0x00	; 0
    1a04:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <fputc>
    1a08:	9a 94       	dec	r9
    1a0a:	f7 cf       	rjmp	.-18     	; 0x19fa <vfprintf+0x372>
    1a0c:	8a 94       	dec	r8
    1a0e:	f3 01       	movw	r30, r6
    1a10:	e8 0d       	add	r30, r8
    1a12:	f1 1d       	adc	r31, r1
    1a14:	80 81       	ld	r24, Z
    1a16:	b6 01       	movw	r22, r12
    1a18:	90 e0       	ldi	r25, 0x00	; 0
    1a1a:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <fputc>
    1a1e:	81 10       	cpse	r8, r1
    1a20:	f5 cf       	rjmp	.-22     	; 0x1a0c <vfprintf+0x384>
    1a22:	22 20       	and	r2, r2
    1a24:	09 f4       	brne	.+2      	; 0x1a28 <vfprintf+0x3a0>
    1a26:	42 ce       	rjmp	.-892    	; 0x16ac <vfprintf+0x24>
    1a28:	b6 01       	movw	r22, r12
    1a2a:	80 e2       	ldi	r24, 0x20	; 32
    1a2c:	90 e0       	ldi	r25, 0x00	; 0
    1a2e:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <fputc>
    1a32:	2a 94       	dec	r2
    1a34:	f6 cf       	rjmp	.-20     	; 0x1a22 <vfprintf+0x39a>
    1a36:	f6 01       	movw	r30, r12
    1a38:	86 81       	ldd	r24, Z+6	; 0x06
    1a3a:	97 81       	ldd	r25, Z+7	; 0x07
    1a3c:	02 c0       	rjmp	.+4      	; 0x1a42 <vfprintf+0x3ba>
    1a3e:	8f ef       	ldi	r24, 0xFF	; 255
    1a40:	9f ef       	ldi	r25, 0xFF	; 255
    1a42:	2b 96       	adiw	r28, 0x0b	; 11
    1a44:	e2 e1       	ldi	r30, 0x12	; 18
    1a46:	0c 94 14 0e 	jmp	0x1c28	; 0x1c28 <__epilogue_restores__>

00001a4a <calloc>:
    1a4a:	0f 93       	push	r16
    1a4c:	1f 93       	push	r17
    1a4e:	cf 93       	push	r28
    1a50:	df 93       	push	r29
    1a52:	86 9f       	mul	r24, r22
    1a54:	80 01       	movw	r16, r0
    1a56:	87 9f       	mul	r24, r23
    1a58:	10 0d       	add	r17, r0
    1a5a:	96 9f       	mul	r25, r22
    1a5c:	10 0d       	add	r17, r0
    1a5e:	11 24       	eor	r1, r1
    1a60:	c8 01       	movw	r24, r16
    1a62:	0e 94 70 09 	call	0x12e0	; 0x12e0 <malloc>
    1a66:	ec 01       	movw	r28, r24
    1a68:	00 97       	sbiw	r24, 0x00	; 0
    1a6a:	29 f0       	breq	.+10     	; 0x1a76 <calloc+0x2c>
    1a6c:	a8 01       	movw	r20, r16
    1a6e:	60 e0       	ldi	r22, 0x00	; 0
    1a70:	70 e0       	ldi	r23, 0x00	; 0
    1a72:	0e 94 4c 0d 	call	0x1a98	; 0x1a98 <memset>
    1a76:	ce 01       	movw	r24, r28
    1a78:	df 91       	pop	r29
    1a7a:	cf 91       	pop	r28
    1a7c:	1f 91       	pop	r17
    1a7e:	0f 91       	pop	r16
    1a80:	08 95       	ret

00001a82 <strnlen_P>:
    1a82:	fc 01       	movw	r30, r24
    1a84:	05 90       	lpm	r0, Z+
    1a86:	61 50       	subi	r22, 0x01	; 1
    1a88:	70 40       	sbci	r23, 0x00	; 0
    1a8a:	01 10       	cpse	r0, r1
    1a8c:	d8 f7       	brcc	.-10     	; 0x1a84 <strnlen_P+0x2>
    1a8e:	80 95       	com	r24
    1a90:	90 95       	com	r25
    1a92:	8e 0f       	add	r24, r30
    1a94:	9f 1f       	adc	r25, r31
    1a96:	08 95       	ret

00001a98 <memset>:
    1a98:	dc 01       	movw	r26, r24
    1a9a:	01 c0       	rjmp	.+2      	; 0x1a9e <memset+0x6>
    1a9c:	6d 93       	st	X+, r22
    1a9e:	41 50       	subi	r20, 0x01	; 1
    1aa0:	50 40       	sbci	r21, 0x00	; 0
    1aa2:	e0 f7       	brcc	.-8      	; 0x1a9c <memset+0x4>
    1aa4:	08 95       	ret

00001aa6 <strnlen>:
    1aa6:	fc 01       	movw	r30, r24
    1aa8:	61 50       	subi	r22, 0x01	; 1
    1aaa:	70 40       	sbci	r23, 0x00	; 0
    1aac:	01 90       	ld	r0, Z+
    1aae:	01 10       	cpse	r0, r1
    1ab0:	d8 f7       	brcc	.-10     	; 0x1aa8 <strnlen+0x2>
    1ab2:	80 95       	com	r24
    1ab4:	90 95       	com	r25
    1ab6:	8e 0f       	add	r24, r30
    1ab8:	9f 1f       	adc	r25, r31
    1aba:	08 95       	ret

00001abc <fputc>:
    1abc:	0f 93       	push	r16
    1abe:	1f 93       	push	r17
    1ac0:	cf 93       	push	r28
    1ac2:	df 93       	push	r29
    1ac4:	fb 01       	movw	r30, r22
    1ac6:	23 81       	ldd	r18, Z+3	; 0x03
    1ac8:	21 fd       	sbrc	r18, 1
    1aca:	03 c0       	rjmp	.+6      	; 0x1ad2 <fputc+0x16>
    1acc:	8f ef       	ldi	r24, 0xFF	; 255
    1ace:	9f ef       	ldi	r25, 0xFF	; 255
    1ad0:	2c c0       	rjmp	.+88     	; 0x1b2a <fputc+0x6e>
    1ad2:	22 ff       	sbrs	r18, 2
    1ad4:	16 c0       	rjmp	.+44     	; 0x1b02 <fputc+0x46>
    1ad6:	46 81       	ldd	r20, Z+6	; 0x06
    1ad8:	57 81       	ldd	r21, Z+7	; 0x07
    1ada:	24 81       	ldd	r18, Z+4	; 0x04
    1adc:	35 81       	ldd	r19, Z+5	; 0x05
    1ade:	42 17       	cp	r20, r18
    1ae0:	53 07       	cpc	r21, r19
    1ae2:	44 f4       	brge	.+16     	; 0x1af4 <fputc+0x38>
    1ae4:	a0 81       	ld	r26, Z
    1ae6:	b1 81       	ldd	r27, Z+1	; 0x01
    1ae8:	9d 01       	movw	r18, r26
    1aea:	2f 5f       	subi	r18, 0xFF	; 255
    1aec:	3f 4f       	sbci	r19, 0xFF	; 255
    1aee:	31 83       	std	Z+1, r19	; 0x01
    1af0:	20 83       	st	Z, r18
    1af2:	8c 93       	st	X, r24
    1af4:	26 81       	ldd	r18, Z+6	; 0x06
    1af6:	37 81       	ldd	r19, Z+7	; 0x07
    1af8:	2f 5f       	subi	r18, 0xFF	; 255
    1afa:	3f 4f       	sbci	r19, 0xFF	; 255
    1afc:	37 83       	std	Z+7, r19	; 0x07
    1afe:	26 83       	std	Z+6, r18	; 0x06
    1b00:	14 c0       	rjmp	.+40     	; 0x1b2a <fputc+0x6e>
    1b02:	8b 01       	movw	r16, r22
    1b04:	ec 01       	movw	r28, r24
    1b06:	fb 01       	movw	r30, r22
    1b08:	00 84       	ldd	r0, Z+8	; 0x08
    1b0a:	f1 85       	ldd	r31, Z+9	; 0x09
    1b0c:	e0 2d       	mov	r30, r0
    1b0e:	09 95       	icall
    1b10:	89 2b       	or	r24, r25
    1b12:	e1 f6       	brne	.-72     	; 0x1acc <fputc+0x10>
    1b14:	d8 01       	movw	r26, r16
    1b16:	16 96       	adiw	r26, 0x06	; 6
    1b18:	8d 91       	ld	r24, X+
    1b1a:	9c 91       	ld	r25, X
    1b1c:	17 97       	sbiw	r26, 0x07	; 7
    1b1e:	01 96       	adiw	r24, 0x01	; 1
    1b20:	17 96       	adiw	r26, 0x07	; 7
    1b22:	9c 93       	st	X, r25
    1b24:	8e 93       	st	-X, r24
    1b26:	16 97       	sbiw	r26, 0x06	; 6
    1b28:	ce 01       	movw	r24, r28
    1b2a:	df 91       	pop	r29
    1b2c:	cf 91       	pop	r28
    1b2e:	1f 91       	pop	r17
    1b30:	0f 91       	pop	r16
    1b32:	08 95       	ret

00001b34 <__ultoa_invert>:
    1b34:	fa 01       	movw	r30, r20
    1b36:	aa 27       	eor	r26, r26
    1b38:	28 30       	cpi	r18, 0x08	; 8
    1b3a:	51 f1       	breq	.+84     	; 0x1b90 <__ultoa_invert+0x5c>
    1b3c:	20 31       	cpi	r18, 0x10	; 16
    1b3e:	81 f1       	breq	.+96     	; 0x1ba0 <__ultoa_invert+0x6c>
    1b40:	e8 94       	clt
    1b42:	6f 93       	push	r22
    1b44:	6e 7f       	andi	r22, 0xFE	; 254
    1b46:	6e 5f       	subi	r22, 0xFE	; 254
    1b48:	7f 4f       	sbci	r23, 0xFF	; 255
    1b4a:	8f 4f       	sbci	r24, 0xFF	; 255
    1b4c:	9f 4f       	sbci	r25, 0xFF	; 255
    1b4e:	af 4f       	sbci	r26, 0xFF	; 255
    1b50:	b1 e0       	ldi	r27, 0x01	; 1
    1b52:	3e d0       	rcall	.+124    	; 0x1bd0 <__ultoa_invert+0x9c>
    1b54:	b4 e0       	ldi	r27, 0x04	; 4
    1b56:	3c d0       	rcall	.+120    	; 0x1bd0 <__ultoa_invert+0x9c>
    1b58:	67 0f       	add	r22, r23
    1b5a:	78 1f       	adc	r23, r24
    1b5c:	89 1f       	adc	r24, r25
    1b5e:	9a 1f       	adc	r25, r26
    1b60:	a1 1d       	adc	r26, r1
    1b62:	68 0f       	add	r22, r24
    1b64:	79 1f       	adc	r23, r25
    1b66:	8a 1f       	adc	r24, r26
    1b68:	91 1d       	adc	r25, r1
    1b6a:	a1 1d       	adc	r26, r1
    1b6c:	6a 0f       	add	r22, r26
    1b6e:	71 1d       	adc	r23, r1
    1b70:	81 1d       	adc	r24, r1
    1b72:	91 1d       	adc	r25, r1
    1b74:	a1 1d       	adc	r26, r1
    1b76:	20 d0       	rcall	.+64     	; 0x1bb8 <__ultoa_invert+0x84>
    1b78:	09 f4       	brne	.+2      	; 0x1b7c <__ultoa_invert+0x48>
    1b7a:	68 94       	set
    1b7c:	3f 91       	pop	r19
    1b7e:	2a e0       	ldi	r18, 0x0A	; 10
    1b80:	26 9f       	mul	r18, r22
    1b82:	11 24       	eor	r1, r1
    1b84:	30 19       	sub	r19, r0
    1b86:	30 5d       	subi	r19, 0xD0	; 208
    1b88:	31 93       	st	Z+, r19
    1b8a:	de f6       	brtc	.-74     	; 0x1b42 <__ultoa_invert+0xe>
    1b8c:	cf 01       	movw	r24, r30
    1b8e:	08 95       	ret
    1b90:	46 2f       	mov	r20, r22
    1b92:	47 70       	andi	r20, 0x07	; 7
    1b94:	40 5d       	subi	r20, 0xD0	; 208
    1b96:	41 93       	st	Z+, r20
    1b98:	b3 e0       	ldi	r27, 0x03	; 3
    1b9a:	0f d0       	rcall	.+30     	; 0x1bba <__ultoa_invert+0x86>
    1b9c:	c9 f7       	brne	.-14     	; 0x1b90 <__ultoa_invert+0x5c>
    1b9e:	f6 cf       	rjmp	.-20     	; 0x1b8c <__ultoa_invert+0x58>
    1ba0:	46 2f       	mov	r20, r22
    1ba2:	4f 70       	andi	r20, 0x0F	; 15
    1ba4:	40 5d       	subi	r20, 0xD0	; 208
    1ba6:	4a 33       	cpi	r20, 0x3A	; 58
    1ba8:	18 f0       	brcs	.+6      	; 0x1bb0 <__ultoa_invert+0x7c>
    1baa:	49 5d       	subi	r20, 0xD9	; 217
    1bac:	31 fd       	sbrc	r19, 1
    1bae:	40 52       	subi	r20, 0x20	; 32
    1bb0:	41 93       	st	Z+, r20
    1bb2:	02 d0       	rcall	.+4      	; 0x1bb8 <__ultoa_invert+0x84>
    1bb4:	a9 f7       	brne	.-22     	; 0x1ba0 <__ultoa_invert+0x6c>
    1bb6:	ea cf       	rjmp	.-44     	; 0x1b8c <__ultoa_invert+0x58>
    1bb8:	b4 e0       	ldi	r27, 0x04	; 4
    1bba:	a6 95       	lsr	r26
    1bbc:	97 95       	ror	r25
    1bbe:	87 95       	ror	r24
    1bc0:	77 95       	ror	r23
    1bc2:	67 95       	ror	r22
    1bc4:	ba 95       	dec	r27
    1bc6:	c9 f7       	brne	.-14     	; 0x1bba <__ultoa_invert+0x86>
    1bc8:	00 97       	sbiw	r24, 0x00	; 0
    1bca:	61 05       	cpc	r22, r1
    1bcc:	71 05       	cpc	r23, r1
    1bce:	08 95       	ret
    1bd0:	9b 01       	movw	r18, r22
    1bd2:	ac 01       	movw	r20, r24
    1bd4:	0a 2e       	mov	r0, r26
    1bd6:	06 94       	lsr	r0
    1bd8:	57 95       	ror	r21
    1bda:	47 95       	ror	r20
    1bdc:	37 95       	ror	r19
    1bde:	27 95       	ror	r18
    1be0:	ba 95       	dec	r27
    1be2:	c9 f7       	brne	.-14     	; 0x1bd6 <__ultoa_invert+0xa2>
    1be4:	62 0f       	add	r22, r18
    1be6:	73 1f       	adc	r23, r19
    1be8:	84 1f       	adc	r24, r20
    1bea:	95 1f       	adc	r25, r21
    1bec:	a0 1d       	adc	r26, r0
    1bee:	08 95       	ret

00001bf0 <__prologue_saves__>:
    1bf0:	2f 92       	push	r2
    1bf2:	3f 92       	push	r3
    1bf4:	4f 92       	push	r4
    1bf6:	5f 92       	push	r5
    1bf8:	6f 92       	push	r6
    1bfa:	7f 92       	push	r7
    1bfc:	8f 92       	push	r8
    1bfe:	9f 92       	push	r9
    1c00:	af 92       	push	r10
    1c02:	bf 92       	push	r11
    1c04:	cf 92       	push	r12
    1c06:	df 92       	push	r13
    1c08:	ef 92       	push	r14
    1c0a:	ff 92       	push	r15
    1c0c:	0f 93       	push	r16
    1c0e:	1f 93       	push	r17
    1c10:	cf 93       	push	r28
    1c12:	df 93       	push	r29
    1c14:	cd b7       	in	r28, 0x3d	; 61
    1c16:	de b7       	in	r29, 0x3e	; 62
    1c18:	ca 1b       	sub	r28, r26
    1c1a:	db 0b       	sbc	r29, r27
    1c1c:	0f b6       	in	r0, 0x3f	; 63
    1c1e:	f8 94       	cli
    1c20:	de bf       	out	0x3e, r29	; 62
    1c22:	0f be       	out	0x3f, r0	; 63
    1c24:	cd bf       	out	0x3d, r28	; 61
    1c26:	09 94       	ijmp

00001c28 <__epilogue_restores__>:
    1c28:	2a 88       	ldd	r2, Y+18	; 0x12
    1c2a:	39 88       	ldd	r3, Y+17	; 0x11
    1c2c:	48 88       	ldd	r4, Y+16	; 0x10
    1c2e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1c30:	6e 84       	ldd	r6, Y+14	; 0x0e
    1c32:	7d 84       	ldd	r7, Y+13	; 0x0d
    1c34:	8c 84       	ldd	r8, Y+12	; 0x0c
    1c36:	9b 84       	ldd	r9, Y+11	; 0x0b
    1c38:	aa 84       	ldd	r10, Y+10	; 0x0a
    1c3a:	b9 84       	ldd	r11, Y+9	; 0x09
    1c3c:	c8 84       	ldd	r12, Y+8	; 0x08
    1c3e:	df 80       	ldd	r13, Y+7	; 0x07
    1c40:	ee 80       	ldd	r14, Y+6	; 0x06
    1c42:	fd 80       	ldd	r15, Y+5	; 0x05
    1c44:	0c 81       	ldd	r16, Y+4	; 0x04
    1c46:	1b 81       	ldd	r17, Y+3	; 0x03
    1c48:	aa 81       	ldd	r26, Y+2	; 0x02
    1c4a:	b9 81       	ldd	r27, Y+1	; 0x01
    1c4c:	ce 0f       	add	r28, r30
    1c4e:	d1 1d       	adc	r29, r1
    1c50:	0f b6       	in	r0, 0x3f	; 63
    1c52:	f8 94       	cli
    1c54:	de bf       	out	0x3e, r29	; 62
    1c56:	0f be       	out	0x3f, r0	; 63
    1c58:	cd bf       	out	0x3d, r28	; 61
    1c5a:	ed 01       	movw	r28, r26
    1c5c:	08 95       	ret

00001c5e <_exit>:
    1c5e:	f8 94       	cli

00001c60 <__stop_program>:
    1c60:	ff cf       	rjmp	.-2      	; 0x1c60 <__stop_program>
